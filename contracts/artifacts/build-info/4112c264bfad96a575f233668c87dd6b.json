{"id":"4112c264bfad96a575f233668c87dd6b","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/Claim.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\ninterface ICustomNFT {\n    function mint(address to) external returns (uint256);\n}\n\ninterface IWhitelist {\n    function isWhitelisted(address user) external view returns (bool);\n    function addToWhitelist(address user) external;\n}\n\ncontract Claim is OwnableUpgradeable {\n    IERC20 public token;\n    ICustomNFT public nft;\n    IWhitelist public whitelist;\n    uint256 public quota;\n\n    mapping(address => bool) public claimed;\n\n    event Deposited(address indexed from, uint256 amount);\n    event Claimed(address indexed account, uint256 tokenAmount, uint256 tokenId);\n    event QuotaUpdated(uint256 oldQuota, uint256 newQuota);\n\n    bytes4 private constant TRANSFER_SELECTOR = bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n    bytes4 private constant TRANSFER_FROM_SELECTOR = bytes4(keccak256(bytes(\"transferFrom(address,address,uint256)\")));\n\n    function initialize(\n        address initialOwner,\n        address tokenAddress,\n        address nftAddress,\n        address whitelistAddr,\n        uint256 quota_\n    ) public initializer {\n        __Ownable_init(initialOwner);\n        token = IERC20(tokenAddress);\n        nft = ICustomNFT(nftAddress);\n        whitelist = IWhitelist(whitelistAddr);\n        quota = quota_;\n    }\n\n    function deposit(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Amount must be > 0\");\n\n        uint256 allowance = token.allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Insufficient allowance\");\n\n        _safeTransferFrom(address(token), msg.sender, address(this), amount);\n\n        emit Deposited(msg.sender, amount);\n    }\n\n    function claim() external {\n        require(!claimed[msg.sender], \"Already claimed\");\n        require(whitelist.isWhitelisted(msg.sender), \"Not whitelisted\");\n\n        uint256 tokenId;\n        try nft.mint(msg.sender) returns (uint256 id) {\n            tokenId = id;\n        } catch Error(string memory reason) {\n            revert(string(abi.encodePacked(\"NFT mint failed: \", reason)));\n        }\n\n        claimed[msg.sender] = true;\n\n        _safeTransfer(address(token), msg.sender, quota);\n\n        emit Claimed(msg.sender, quota, tokenId);\n    }\n\n    function updateQuota(uint256 newQuota) external onlyOwner {\n        require(newQuota > 0, \"Quota must be > 0\");\n        uint256 old = quota;\n        quota = newQuota;\n        emit QuotaUpdated(old, newQuota);\n    }\n\n    function emergencyWithdraw(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Amount must be > 0\");\n\n        uint256 bal = token.balanceOf(address(this));\n        require(bal >= amount, \"Insufficient balance\");\n\n        _safeTransfer(address(token), msg.sender, amount);\n    }\n\n    /// @dev 安全转账，适配非标准 ERC20\n    function _safeTransfer(address token_, address to, uint256 value) private {\n        (bool success, bytes memory data) = token_.call(\n            abi.encodeWithSelector(TRANSFER_SELECTOR, to, value)\n        );\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"SafeTransfer: TRANSFER_FAILED\");\n    }\n\n    /// @dev 安全转账From，适配非标准 ERC20\n    function _safeTransferFrom(address token_, address from, address to, uint256 value) private {\n        (bool success, bytes memory data) = token_.call(\n            abi.encodeWithSelector(TRANSFER_FROM_SELECTOR, from, to, value)\n        );\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"SafeTransferFrom: TRANSFER_FAILED\");\n    }\n}\n"},"contracts/CustomNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @title CustomNFT\n * @notice ERC721 NFT with minting restricted to the Claim contract\n */\ncontract CustomNFT is Initializable, ERC721Upgradeable {\n    string private _baseTokenURI;\n    address public claimContract;\n    uint256 private _tokenIdTracker;\n\n    modifier onlyClaim() {\n        require(msg.sender == claimContract, \"Caller is not claim contract\");\n        _;\n    }\n\n    /**\n     * @notice Initializes the NFT contract\n     * @param name_ Token name\n     * @param symbol_ Token symbol\n     * @param baseURI_ Base URI for all tokens\n     * @param claimContract_ Address of the Claim contract\n     */\n    function initialize(\n        string memory name_,\n        string memory symbol_,\n        string memory baseURI_,\n        address claimContract_\n    ) public initializer {\n        __ERC721_init(name_, symbol_);\n        _baseTokenURI = baseURI_;\n        claimContract = claimContract_;\n        _tokenIdTracker = 1;\n    }\n\n    /**\n     * @notice Mint a new NFT to an address\n     * @param to Recipient address\n     * @return tokenId of the minted NFT\n     */\n    function mint(address to) external onlyClaim returns (uint256) {\n        uint256 tokenId = _tokenIdTracker;\n        _tokenIdTracker++;\n        _safeMint(to, tokenId);\n        return tokenId;\n    }\n\n\n    /**\n     * @notice Set the Claim contract address (for future use)\n     * @param _claimContract Address of the Claim contract\n     */\n    function setClaimContract(address _claimContract) external {\n        require(claimContract == address(0), \"Claim contract already set\");\n        claimContract = _claimContract;\n    }\n\n    function _baseURI() internal view override returns (string memory) {\n        return _baseTokenURI;\n    }\n\n\n} \n"},"contracts/Factory3.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Whitelist.sol\";\nimport \"./CustomNFT.sol\";\nimport \"./Claim.sol\";\n\ncontract Factory3 {\n    struct ProjectInfo {\n        address whitelist;\n        address nft;\n        address claim;\n        bool exists;\n    }\n\n    mapping(bytes32 => ProjectInfo) public projects;\n\n    event ProjectDeployed(\n        bytes32 indexed projectId,\n        address whitelistContract,\n        address nftContract,\n        address claimContract\n    );\n\n    /**\n     * @notice 创建一个新的项目，部署并初始化 Whitelist、CustomNFT 和 Claim 合约\n     */\n    function createProject(\n        bytes32 projectId,\n        address tokenAddress,\n        string memory nftName,\n        string memory nftSymbol,\n        string memory baseURI,\n        uint256 claimQuota\n    )\n        external\n        returns (\n            address whitelistContract,\n            address nftContract,\n            address claimContract\n        )\n    {\n        require(!projects[projectId].exists, \"Project ID exists\");\n        require(tokenAddress != address(0), \"Invalid token address\");\n        require(bytes(nftName).length > 0, \"Empty NFT name\");\n        require(bytes(nftSymbol).length > 0, \"Empty NFT symbol\");\n        require(claimQuota > 0, \"Quota must be > 0\");\n\n        // 1. 部署并初始化 Whitelist\n        {\n            bytes memory wlCode = type(Whitelist).creationCode;\n            address payable addr;\n            assembly {\n                addr := create(0, add(wlCode, 0x20), mload(wlCode))\n            }\n            require(addr != address(0), \"Whitelist deploy failed\");\n            Whitelist(addr).initialize(msg.sender);\n            whitelistContract = addr;\n        }\n\n        // 2. 部署并初始化 CustomNFT（先传 address(0) 占位）\n        {\n            bytes memory nftCode = type(CustomNFT).creationCode;\n            address payable addr;\n            assembly {\n                addr := create(0, add(nftCode, 0x20), mload(nftCode))\n            }\n            require(addr != address(0), \"NFT deploy failed\");\n            CustomNFT(addr).initialize(nftName, nftSymbol, baseURI, address(0));\n            nftContract = addr;\n        }\n\n        // 3. 部署并初始化 Claim，引用真实 NFT 地址\n        {\n            bytes memory clCode = type(Claim).creationCode;\n            address payable addr;\n            assembly {\n                addr := create(0, add(clCode, 0x20), mload(clCode))\n            }\n            require(addr != address(0), \"Claim deploy failed\");\n            Claim(addr).initialize(msg.sender, tokenAddress, nftContract, whitelistContract, claimQuota);\n            claimContract = addr;\n        }\n\n        // 4. 绑定 Claim 到 NFT\n        CustomNFT(nftContract).setClaimContract(claimContract);\n\n        // 5. 记录项目\n        projects[projectId] = ProjectInfo({\n            whitelist: whitelistContract,\n            nft: nftContract,\n            claim: claimContract,\n            exists: true\n        });\n\n        emit ProjectDeployed(projectId, whitelistContract, nftContract, claimContract);\n        return (whitelistContract, nftContract, claimContract);\n    }\n}\n"},"contracts/Mytoken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MyToken is ERC20, Ownable {\n    uint8 private _customDecimals;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint256 initialSupply_\n    ) ERC20(name_, symbol_) Ownable(msg.sender) {\n        _customDecimals = decimals_;\n        _mint(msg.sender, initialSupply_);\n    }\n\n    // 重写 decimals() 返回自定义精度\n    function decimals() public view override returns (uint8) {\n        return _customDecimals;\n    }\n\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    function burn(uint256 amount) external onlyOwner {\n        _burn(msg.sender, amount);\n    }\n}\n"},"contracts/Whitelist.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/////////////////////////////////////////////\n//               Whitelist.sol             //\n/////////////////////////////////////////////\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @title Whitelist\n * @notice Manages a list of approved addresses\n */\ncontract Whitelist is Initializable, OwnableUpgradeable {\n    mapping(address => bool) private _whitelisted;\n\n    event AddressAdded(address indexed account);\n    event AddressRemoved(address indexed account);\n\n    /**\n     * @notice Initializes the contract setting the initial owner\n     * @param owner_ The address of the owner\n     */\n    function initialize(address owner_) public initializer {\n         __Ownable_init(msg.sender);\n        transferOwnership(owner_);\n    }\n\n    /**\n     * @notice Add an address to the whitelist\n     * @param account The address to add\n     */\n    function addToWhitelist(address account) external onlyOwner {\n        _whitelisted[account] = true;\n        emit AddressAdded(account);\n    }\n\n     /**\n     * @notice Batch add multiple addresses to the whitelist\n     * @param accounts The array of addresses to add\n     */\n    function batchAddToWhitelist(address[] calldata accounts) external onlyOwner {\n        for (uint256 i = 0; i < accounts.length; i++) {\n            _whitelisted[accounts[i]] = true;\n            emit AddressAdded(accounts[i]);\n        }\n    }\n\n    /**\n     * @notice Remove an address from the whitelist\n     * @param account The address to remove\n     */\n    function removeFromWhitelist(address account) external onlyOwner {\n        _whitelisted[account] = false;\n        emit AddressRemoved(account);\n    }\n\n    /**\n     * @notice Check if an address is whitelisted\n     * @param account The address to check\n     * @return True if whitelisted, false otherwise\n     */\n    function isWhitelisted(address account) external view returns (bool) {\n        return _whitelisted[account];\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1588],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1589,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1588,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1588],"ERC165Upgradeable":[1628],"ERC721Upgradeable":[1542],"ERC721Utils":[2772],"IERC165":[4268],"IERC721":[2649],"IERC721Errors":[1866],"IERC721Metadata":[2695],"Initializable":[462],"Strings":[4256]},"id":1543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":2650,"src":"133:73:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":2696,"src":"207:100:2","symbolAliases":[{"foreign":{"id":467,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"215:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":2773,"src":"308:87:2","symbolAliases":[{"foreign":{"id":469,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"316:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":1589,"src":"396:70:2","symbolAliases":[{"foreign":{"id":471,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"404:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":4257,"src":"467:66:2","symbolAliases":[{"foreign":{"id":473,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"475:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":4269,"src":"534:80:2","symbolAliases":[{"foreign":{"id":475,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"542:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":1629,"src":"615:82:2","symbolAliases":[{"foreign":{"id":477,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"623:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":1914,"src":"698:84:2","symbolAliases":[{"foreign":{"id":479,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"706:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":463,"src":"783:66:2","symbolAliases":[{"foreign":{"id":481,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"791:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":484,"name":"Initializable","nameLocations":["1138:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1138:13:2"},"id":485,"nodeType":"InheritanceSpecifier","src":"1138:13:2"},{"baseName":{"id":486,"name":"ContextUpgradeable","nameLocations":["1153:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"1153:18:2"},"id":487,"nodeType":"InheritanceSpecifier","src":"1153:18:2"},{"baseName":{"id":488,"name":"ERC165Upgradeable","nameLocations":["1173:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"1173:17:2"},"id":489,"nodeType":"InheritanceSpecifier","src":"1173:17:2"},{"baseName":{"id":490,"name":"IERC721","nameLocations":["1192:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2649,"src":"1192:7:2"},"id":491,"nodeType":"InheritanceSpecifier","src":"1192:7:2"},{"baseName":{"id":492,"name":"IERC721Metadata","nameLocations":["1201:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":2695,"src":"1201:15:2"},"id":493,"nodeType":"InheritanceSpecifier","src":"1201:15:2"},{"baseName":{"id":494,"name":"IERC721Errors","nameLocations":["1218:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":1866,"src":"1218:13:2"},"id":495,"nodeType":"InheritanceSpecifier","src":"1218:13:2"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"851:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1542,"linearizedBaseContracts":[1542,1866,2695,2649,1628,4268,1588,462],"name":"ERC721Upgradeable","nameLocation":"1117:17:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":498,"libraryName":{"id":496,"name":"Strings","nameLocations":["1244:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4256,"src":"1244:7:2"},"nodeType":"UsingForDirective","src":"1238:26:2","typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC721Upgradeable.ERC721Storage","documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1270:64:2","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721"},"id":522,"members":[{"constant":false,"id":501,"mutability":"mutable","name":"_name","nameLocation":"1399:5:2","nodeType":"VariableDeclaration","scope":522,"src":"1392:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":500,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"_symbol","nameLocation":"1446:7:2","nodeType":"VariableDeclaration","scope":522,"src":"1439:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"1439:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"_owners","nameLocation":"1500:7:2","nodeType":"VariableDeclaration","scope":522,"src":"1464:43:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":506,"keyName":"tokenId","keyNameLocation":"1480:7:2","keyType":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1464:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_balances","nameLocation":"1552:9:2","nodeType":"VariableDeclaration","scope":522,"src":"1518:43:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":510,"keyName":"owner","keyNameLocation":"1534:5:2","keyType":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1518:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1608:15:2","nodeType":"VariableDeclaration","scope":522,"src":"1572:51:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":514,"keyName":"tokenId","keyNameLocation":"1588:7:2","keyType":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1572:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1694:18:2","nodeType":"VariableDeclaration","scope":522,"src":"1634:78:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":520,"keyName":"owner","keyNameLocation":"1650:5:2","keyType":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1634:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":519,"keyName":"operator","keyNameLocation":"1675:8:2","keyType":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"ERC721Storage","nameLocation":"1346:13:2","nodeType":"StructDefinition","scope":1542,"src":"1339:380:2","visibility":"public"},{"constant":true,"id":525,"mutability":"constant","name":"ERC721StorageLocation","nameLocation":"1860:21:2","nodeType":"VariableDeclaration","scope":1542,"src":"1835:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1835:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:66:2","typeDescriptions":{"typeIdentifier":"t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1","typeString":"int_const 5822...(69 digits omitted)...0752"},"value":"0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"},"visibility":"private"},{"body":{"id":532,"nodeType":"Block","src":"2033:80:2","statements":[{"AST":{"nativeSrc":"2052:55:2","nodeType":"YulBlock","src":"2052:55:2","statements":[{"nativeSrc":"2066:31:2","nodeType":"YulAssignment","src":"2066:31:2","value":{"name":"ERC721StorageLocation","nativeSrc":"2076:21:2","nodeType":"YulIdentifier","src":"2076:21:2"},"variableNames":[{"name":"$.slot","nativeSrc":"2066:6:2","nodeType":"YulIdentifier","src":"2066:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":529,"isOffset":false,"isSlot":true,"src":"2066:6:2","suffix":"slot","valueSize":1},{"declaration":525,"isOffset":false,"isSlot":false,"src":"2076:21:2","valueSize":1}],"id":531,"nodeType":"InlineAssembly","src":"2043:64:2"}]},"id":533,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721Storage","nameLocation":"1966:17:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"1983:2:2"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"$","nameLocation":"2030:1:2","nodeType":"VariableDeclaration","scope":533,"src":"2008:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"ERC721Storage","nameLocations":["2008:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2008:13:2"},"referencedDeclaration":522,"src":"2008:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"src":"2007:25:2"},"scope":1542,"src":"1957:156:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":548,"nodeType":"Block","src":"2325:56:2","statements":[{"expression":{"arguments":[{"id":544,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"2359:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":545,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"2366:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":543,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2335:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"2335:39:2"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"2119:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":549,"implemented":true,"kind":"function","modifiers":[{"id":541,"kind":"modifierInvocation","modifierName":{"id":540,"name":"onlyInitializing","nameLocations":["2308:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2308:16:2"},"nodeType":"ModifierInvocation","src":"2308:16:2"}],"name":"__ERC721_init","nameLocation":"2241:13:2","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"name_","nameLocation":"2269:5:2","nodeType":"VariableDeclaration","scope":549,"src":"2255:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"2255:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"symbol_","nameLocation":"2290:7:2","nodeType":"VariableDeclaration","scope":549,"src":"2276:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":537,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2254:44:2"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"2325:0:2"},"scope":1542,"src":"2232:149:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"2490:116:2","statements":[{"assignments":[560],"declarations":[{"constant":false,"id":560,"mutability":"mutable","name":"$","nameLocation":"2522:1:2","nodeType":"VariableDeclaration","scope":576,"src":"2500:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"ERC721Storage","nameLocations":["2500:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2500:13:2"},"referencedDeclaration":522,"src":"2500:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":563,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2526:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2500:45:2"},{"expression":{"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":564,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2555:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2557:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":501,"src":"2555:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":567,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"2565:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2555:15:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":569,"nodeType":"ExpressionStatement","src":"2555:15:2"},{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":570,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2580:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2582:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":503,"src":"2580:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":573,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"2592:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2580:19:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":575,"nodeType":"ExpressionStatement","src":"2580:19:2"}]},"id":577,"implemented":true,"kind":"function","modifiers":[{"id":556,"kind":"modifierInvocation","modifierName":{"id":555,"name":"onlyInitializing","nameLocations":["2473:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2473:16:2"},"nodeType":"ModifierInvocation","src":"2473:16:2"}],"name":"__ERC721_init_unchained","nameLocation":"2396:23:2","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"name_","nameLocation":"2434:5:2","nodeType":"VariableDeclaration","scope":577,"src":"2420:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"2420:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"symbol_","nameLocation":"2455:7:2","nodeType":"VariableDeclaration","scope":577,"src":"2441:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":552,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2419:44:2"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"2490:0:2"},"scope":1542,"src":"2387:219:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1627,4267],"body":{"id":607,"nodeType":"Block","src":"2792:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2821:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":590,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2841:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2649_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2649_$","typeString":"type(contract IERC721)"}],"id":589,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2836:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2649","typeString":"type(contract IERC721)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2850:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"2836:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2821:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2877:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":596,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"2897:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2695_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2695_$","typeString":"type(contract IERC721Metadata)"}],"id":595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2892:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2892:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2695","typeString":"type(contract IERC721Metadata)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2914:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"2892:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2877:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2821:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":603,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2965:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":601,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2941:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$1542_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2947:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"2941:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2821:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":587,"id":606,"nodeType":"Return","src":"2802:175:2"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"2612:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":608,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2682:17:2","nodeType":"FunctionDefinition","overrides":{"id":584,"nodeType":"OverrideSpecifier","overrides":[{"id":582,"name":"ERC165Upgradeable","nameLocations":["2749:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"2749:17:2"},{"id":583,"name":"IERC165","nameLocations":["2768:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"2768:7:2"}],"src":"2740:36:2"},"parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"interfaceId","nameLocation":"2707:11:2","nodeType":"VariableDeclaration","scope":608,"src":"2700:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":579,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2700:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2699:20:2"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"2786:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":585,"name":"bool","nodeType":"ElementaryTypeName","src":"2786:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2785:6:2"},"scope":1542,"src":"2673:311:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2574],"body":{"id":642,"nodeType":"Block","src":"3115:193:2","statements":[{"assignments":[618],"declarations":[{"constant":false,"id":618,"mutability":"mutable","name":"$","nameLocation":"3147:1:2","nodeType":"VariableDeclaration","scope":642,"src":"3125:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":617,"nodeType":"UserDefinedTypeName","pathNode":{"id":616,"name":"ERC721Storage","nameLocations":["3125:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"3125:13:2"},"referencedDeclaration":522,"src":"3125:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":619,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3151:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3151:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3125:45:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3184:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3201:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3193:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:2","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3193:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3184:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"3180:87:2","trueBody":{"id":635,"nodeType":"Block","src":"3205:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3245:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"3245:7:2","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"3226:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":634,"nodeType":"RevertStatement","src":"3219:37:2"}]}},{"expression":{"baseExpression":{"expression":{"id":637,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3283:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3285:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"3283:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":640,"indexExpression":{"id":639,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3295:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3283:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":615,"id":641,"nodeType":"Return","src":"3276:25:2"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"2990:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3052:9:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"owner","nameLocation":"3070:5:2","nodeType":"VariableDeclaration","scope":643,"src":"3062:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3061:15:2"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"3106:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3105:9:2"},"scope":1542,"src":"3043:265:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2582],"body":{"id":655,"nodeType":"Block","src":"3437:46:2","statements":[{"expression":{"arguments":[{"id":652,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3454:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3454:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":650,"id":654,"nodeType":"Return","src":"3447:29:2"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"3314:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":656,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3374:7:2","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"tokenId","nameLocation":"3390:7:2","nodeType":"VariableDeclaration","scope":656,"src":"3382:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3382:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3381:17:2"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"3428:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:9:2"},"scope":1542,"src":"3365:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2680],"body":{"id":671,"nodeType":"Block","src":"3605:86:2","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"$","nameLocation":"3637:1:2","nodeType":"VariableDeclaration","scope":671,"src":"3615:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"ERC721Storage","nameLocations":["3615:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"3615:13:2"},"referencedDeclaration":522,"src":"3615:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3641:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3641:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3615:45:2"},{"expression":{"expression":{"id":668,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3677:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3679:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":501,"src":"3677:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":661,"id":670,"nodeType":"Return","src":"3670:14:2"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"3489:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":672,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3554:4:2","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"3558:2:2"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"3590:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":659,"name":"string","nodeType":"ElementaryTypeName","src":"3590:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3589:15:2"},"scope":1542,"src":"3545:146:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2686],"body":{"id":687,"nodeType":"Block","src":"3817:88:2","statements":[{"assignments":[680],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"$","nameLocation":"3849:1:2","nodeType":"VariableDeclaration","scope":687,"src":"3827:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":679,"nodeType":"UserDefinedTypeName","pathNode":{"id":678,"name":"ERC721Storage","nameLocations":["3827:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"3827:13:2"},"referencedDeclaration":522,"src":"3827:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":683,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":681,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3853:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3827:45:2"},{"expression":{"expression":{"id":684,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3889:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3891:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":503,"src":"3889:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":677,"id":686,"nodeType":"Return","src":"3882:16:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"3697:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":688,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3764:6:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"3770:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"3802:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":675,"name":"string","nodeType":"ElementaryTypeName","src":"3802:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3801:15:2"},"scope":1542,"src":"3755:150:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2694],"body":{"id":723,"nodeType":"Block","src":"4050:176:2","statements":[{"expression":{"arguments":[{"id":697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4074:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4060:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"nodeType":"ExpressionStatement","src":"4060:22:2"},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"baseURI","nameLocation":"4107:7:2","nodeType":"VariableDeclaration","scope":723,"src":"4093:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":700,"name":"string","nodeType":"ElementaryTypeName","src":"4093:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":704,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4117:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"4093:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":707,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4150:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"4144:5:2","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4159:6:2","memberName":"length","nodeType":"MemberAccess","src":"4144:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4168:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4144:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4217:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4144:75:2","trueExpression":{"arguments":[{"id":715,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4186:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4195:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4203:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2968,"src":"4195:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4195:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4172:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":712,"name":"string","nodeType":"ElementaryTypeName","src":"4172:6:2","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4179:6:2","memberName":"concat","nodeType":"MemberAccess","src":"4172:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4172:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":695,"id":722,"nodeType":"Return","src":"4137:82:2"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"3911:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3980:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"tokenId","nameLocation":"3997:7:2","nodeType":"VariableDeclaration","scope":724,"src":"3989:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3989:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3988:17:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"4035:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":693,"name":"string","nodeType":"ElementaryTypeName","src":"4035:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:15:2"},"scope":1542,"src":"3971:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"4534:26:2","statements":[{"expression":{"hexValue":"","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4551:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":729,"id":731,"nodeType":"Return","src":"4544:9:2"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4232:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":733,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4477:8:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"4485:2:2"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":733,"src":"4519:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":727,"name":"string","nodeType":"ElementaryTypeName","src":"4519:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4518:15:2"},"scope":1542,"src":"4468:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2622],"body":{"id":748,"nodeType":"Block","src":"4678:52:2","statements":[{"expression":{"arguments":[{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"4697:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":744,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"4710:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1393,1467],"referencedDeclaration":1393,"src":"4688:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"4688:35:2"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"4566:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":749,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4626:7:2","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"to","nameLocation":"4642:2:2","nodeType":"VariableDeclaration","scope":749,"src":"4634:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"tokenId","nameLocation":"4654:7:2","nodeType":"VariableDeclaration","scope":749,"src":"4646:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"4646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:29:2"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"4678:0:2"},"scope":1542,"src":"4617:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2638],"body":{"id":765,"nodeType":"Block","src":"4867:78:2","statements":[{"expression":{"arguments":[{"id":758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4891:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":757,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4877:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":760,"nodeType":"ExpressionStatement","src":"4877:22:2"},{"expression":{"arguments":[{"id":762,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4930:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"4917:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":756,"id":764,"nodeType":"Return","src":"4910:28:2"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"4736:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":766,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4800:11:2","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"tokenId","nameLocation":"4820:7:2","nodeType":"VariableDeclaration","scope":766,"src":"4812:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4812:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:17:2"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"4858:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"4858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4857:9:2"},"scope":1542,"src":"4791:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2630],"body":{"id":781,"nodeType":"Block","src":"5087:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":775,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5116:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"5130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"5140:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":774,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"5097:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"5097:52:2"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"4951:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5021:17:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"operator","nameLocation":"5047:8:2","nodeType":"VariableDeclaration","scope":782,"src":"5039:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"approved","nameLocation":"5062:8:2","nodeType":"VariableDeclaration","scope":782,"src":"5057:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":770,"name":"bool","nodeType":"ElementaryTypeName","src":"5057:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5038:33:2"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"5087:0:2"},"scope":1542,"src":"5012:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2648],"body":{"id":805,"nodeType":"Block","src":"5316:116:2","statements":[{"assignments":[794],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"$","nameLocation":"5348:1:2","nodeType":"VariableDeclaration","scope":805,"src":"5326:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":793,"nodeType":"UserDefinedTypeName","pathNode":{"id":792,"name":"ERC721Storage","nameLocations":["5326:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"5326:13:2"},"referencedDeclaration":522,"src":"5326:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":797,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5352:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5326:45:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":798,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5388:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5390:18:2","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":521,"src":"5388:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":801,"indexExpression":{"id":800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5409:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":803,"indexExpression":{"id":802,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5416:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":791,"id":804,"nodeType":"Return","src":"5381:44:2"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"5162:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":806,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5231:16:2","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"owner","nameLocation":"5256:5:2","nodeType":"VariableDeclaration","scope":806,"src":"5248:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"5248:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"operator","nameLocation":"5271:8:2","nodeType":"VariableDeclaration","scope":806,"src":"5263:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:33:2"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"5310:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":789,"name":"bool","nodeType":"ElementaryTypeName","src":"5310:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5309:6:2"},"scope":1542,"src":"5222:210:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2614],"body":{"id":851,"nodeType":"Block","src":"5574:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5588:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5602:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5594:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:2","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5594:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5588:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"5584:87:2","trueBody":{"id":829,"nodeType":"Block","src":"5606:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5657:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5649:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"5649:7:2","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5649:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":822,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5627:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":828,"nodeType":"RevertStatement","src":"5620:40:2"}]}},{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"previousOwner","nameLocation":"5897:13:2","nodeType":"VariableDeclaration","scope":851,"src":"5889:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5921:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":836,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5934:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5934:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":833,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"5913:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5889:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5961:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5978:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5961:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":850,"nodeType":"IfStatement","src":"5957:109:2","trueBody":{"id":849,"nodeType":"Block","src":"5984:82:2","statements":[{"errorCall":{"arguments":[{"id":844,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6026:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"6032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":846,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"6041:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":843,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6005:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6005:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":848,"nodeType":"RevertStatement","src":"5998:57:2"}]}}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"5438:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":852,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5503:12:2","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"from","nameLocation":"5524:4:2","nodeType":"VariableDeclaration","scope":852,"src":"5516:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"5516:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"to","nameLocation":"5538:2:2","nodeType":"VariableDeclaration","scope":852,"src":"5530:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"5530:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"tokenId","nameLocation":"5550:7:2","nodeType":"VariableDeclaration","scope":852,"src":"5542:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5542:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5515:43:2"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"5574:0:2"},"scope":1542,"src":"5494:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2604],"body":{"id":869,"nodeType":"Block","src":"6214:56:2","statements":[{"expression":{"arguments":[{"id":863,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"6241:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"6251:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6260:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":862,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[870,900],"referencedDeclaration":900,"src":"6224:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"6224:39:2"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"6078:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":870,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6147:16:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"from","nameLocation":"6172:4:2","nodeType":"VariableDeclaration","scope":870,"src":"6164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"6164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"6186:2:2","nodeType":"VariableDeclaration","scope":870,"src":"6178:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"6178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"6198:7:2","nodeType":"VariableDeclaration","scope":870,"src":"6190:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"6190:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6163:43:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"6214:0:2"},"scope":1542,"src":"6138:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2594],"body":{"id":899,"nodeType":"Block","src":"6439:130:2","statements":[{"expression":{"arguments":[{"id":883,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6462:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6468:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"6449:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6449:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"ExpressionStatement","src":"6449:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":891,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6524:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6538:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6544:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":896,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6557:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":888,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"6490:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2772_$","typeString":"type(library ERC721Utils)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6502:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"6490:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6490:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"6490:72:2"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"6276:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":900,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6345:16:2","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"from","nameLocation":"6370:4:2","nodeType":"VariableDeclaration","scope":900,"src":"6362:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"6362:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"to","nameLocation":"6384:2:2","nodeType":"VariableDeclaration","scope":900,"src":"6376:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"6376:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"tokenId","nameLocation":"6396:7:2","nodeType":"VariableDeclaration","scope":900,"src":"6388:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"6388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"data","nameLocation":"6418:4:2","nodeType":"VariableDeclaration","scope":900,"src":"6405:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"6405:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6361:62:2"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"6439:0:2"},"scope":1542,"src":"6336:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"7159:97:2","statements":[{"assignments":[910],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"$","nameLocation":"7191:1:2","nodeType":"VariableDeclaration","scope":919,"src":"7169:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"ERC721Storage","nameLocations":["7169:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"7169:13:2"},"referencedDeclaration":522,"src":"7169:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7195:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7195:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7169:45:2"},{"expression":{"baseExpression":{"expression":{"id":914,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7231:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7233:7:2","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":507,"src":"7231:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":917,"indexExpression":{"id":916,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7241:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7231:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":907,"id":918,"nodeType":"Return","src":"7224:25:2"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"6575:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"7093:8:2","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"tokenId","nameLocation":"7110:7:2","nodeType":"VariableDeclaration","scope":920,"src":"7102:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"7102:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7101:17:2"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"7150:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"7150:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7149:9:2"},"scope":1542,"src":"7084:172:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"7451:105:2","statements":[{"assignments":[930],"declarations":[{"constant":false,"id":930,"mutability":"mutable","name":"$","nameLocation":"7483:1:2","nodeType":"VariableDeclaration","scope":939,"src":"7461:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":929,"nodeType":"UserDefinedTypeName","pathNode":{"id":928,"name":"ERC721Storage","nameLocations":["7461:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"7461:13:2"},"referencedDeclaration":522,"src":"7461:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":933,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":931,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7487:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7487:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7461:45:2"},{"expression":{"baseExpression":{"expression":{"id":934,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7523:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:15:2","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":515,"src":"7523:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":937,"indexExpression":{"id":936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"7541:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:26:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":927,"id":938,"nodeType":"Return","src":"7516:33:2"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"7262:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"7381:12:2","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"tokenId","nameLocation":"7402:7:2","nodeType":"VariableDeclaration","scope":940,"src":"7394:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7393:17:2"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"7442:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"7442:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7441:9:2"},"scope":1542,"src":"7372:184:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"7976:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"8005:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8024:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8016:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"8016:7:2","typeDescriptions":{}}},"id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8016:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8005:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8043:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":959,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"8052:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8043:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":962,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"8080:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"8087:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":961,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8063:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8063:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8043:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"8112:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":966,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"8099:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":969,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"8124:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8099:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8043:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8042:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8005:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":951,"id":974,"nodeType":"Return","src":"7986:146:2"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"7562:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"7876:13:2","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"owner","nameLocation":"7898:5:2","nodeType":"VariableDeclaration","scope":976,"src":"7890:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"7890:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"spender","nameLocation":"7913:7:2","nodeType":"VariableDeclaration","scope":976,"src":"7905:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"tokenId","nameLocation":"7930:7:2","nodeType":"VariableDeclaration","scope":976,"src":"7922:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7922:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7889:49:2"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"7970:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":949,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:2"},"scope":1542,"src":"7867:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1012,"nodeType":"Block","src":"8668:271:2","statements":[{"condition":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8682:39:2","subExpression":{"arguments":[{"id":987,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8697:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":988,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"8704:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":989,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"8713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":986,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"8683:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8683:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"nodeType":"IfStatement","src":"8678:255:2","trueBody":{"id":1010,"nodeType":"Block","src":"8723:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8741:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8758:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8741:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1008,"nodeType":"Block","src":"8839:84:2","statements":[{"errorCall":{"arguments":[{"id":1004,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"8891:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"8900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1003,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8864:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8864:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1007,"nodeType":"RevertStatement","src":"8857:51:2"}]},"id":1009,"nodeType":"IfStatement","src":"8737:186:2","trueBody":{"id":1002,"nodeType":"Block","src":"8762:71:2","statements":[{"errorCall":{"arguments":[{"id":999,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"8810:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":998,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"8787:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8787:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1001,"nodeType":"RevertStatement","src":"8780:38:2"}]}}]}}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"8145:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"8580:16:2","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"owner","nameLocation":"8605:5:2","nodeType":"VariableDeclaration","scope":1013,"src":"8597:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"spender","nameLocation":"8620:7:2","nodeType":"VariableDeclaration","scope":1013,"src":"8612:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"tokenId","nameLocation":"8637:7:2","nodeType":"VariableDeclaration","scope":1013,"src":"8629:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"8629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8596:49:2"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"8668:0:2"},"scope":1542,"src":"8571:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1036,"nodeType":"Block","src":"9656:135:2","statements":[{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"$","nameLocation":"9688:1:2","nodeType":"VariableDeclaration","scope":1036,"src":"9666:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1022,"nodeType":"UserDefinedTypeName","pathNode":{"id":1021,"name":"ERC721Storage","nameLocations":["9666:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"9666:13:2"},"referencedDeclaration":522,"src":"9666:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1024,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9692:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9666:45:2"},{"id":1035,"nodeType":"UncheckedBlock","src":"9721:64:2","statements":[{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1027,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"9745:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9747:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"9745:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1031,"indexExpression":{"id":1029,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"9757:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9745:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"9769:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9745:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"9745:29:2"}]}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"8945:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"9590:16:2","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"account","nameLocation":"9615:7:2","nodeType":"VariableDeclaration","scope":1037,"src":"9607:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"9607:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"value","nameLocation":"9632:5:2","nodeType":"VariableDeclaration","scope":1037,"src":"9624:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1017,"name":"uint128","nodeType":"ElementaryTypeName","src":"9624:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9606:32:2"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"9656:0:2"},"scope":1542,"src":"9581:210:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"10479:761:2","statements":[{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"$","nameLocation":"10511:1:2","nodeType":"VariableDeclaration","scope":1138,"src":"10489:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1050,"nodeType":"UserDefinedTypeName","pathNode":{"id":1049,"name":"ERC721Storage","nameLocations":["10489:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"10489:13:2"},"referencedDeclaration":522,"src":"10489:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1052,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"10515:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10515:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10489:45:2"},{"assignments":[1056],"declarations":[{"constant":false,"id":1056,"mutability":"mutable","name":"from","nameLocation":"10552:4:2","nodeType":"VariableDeclaration","scope":1138,"src":"10544:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"10544:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[{"id":1058,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10568:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1057,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"10559:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10559:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10544:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"10636:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:2","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1074,"nodeType":"IfStatement","src":"10632:86:2","trueBody":{"id":1073,"nodeType":"Block","src":"10656:62:2","statements":[{"expression":{"arguments":[{"id":1068,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10687:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"10693:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10670:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10670:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"10670:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10762:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10778:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10770:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"10770:7:2","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10770:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10762:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"10758:258:2","trueBody":{"id":1103,"nodeType":"Block","src":"10782:234:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10895:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10887:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"10887:7:2","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10887:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10899:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10916:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10908:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"10908:7:2","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10908:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10920:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1081,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1393,1467],"referencedDeclaration":1467,"src":"10878:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10878:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"10878:48:2"},{"id":1102,"nodeType":"UncheckedBlock","src":"10941:65:2","statements":[{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1094,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10969:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10971:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"10969:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1098,"indexExpression":{"id":1096,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10981:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10969:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10990:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10969:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1101,"nodeType":"ExpressionStatement","src":"10969:22:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11030:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11044:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11036:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"11036:7:2","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11036:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11030:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"11026:109:2","trueBody":{"id":1120,"nodeType":"Block","src":"11048:87:2","statements":[{"id":1119,"nodeType":"UncheckedBlock","src":"11062:63:2","statements":[{"expression":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1111,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"11090:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11092:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"11090:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1115,"indexExpression":{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11102:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11090:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11109:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11090:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ExpressionStatement","src":"11090:20:2"}]}]}},{"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1122,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"11145:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11147:7:2","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":507,"src":"11145:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1126,"indexExpression":{"id":1124,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"11155:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11145:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1127,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11166:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11145:23:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1129,"nodeType":"ExpressionStatement","src":"11145:23:2"},{"eventCall":{"arguments":[{"id":1131,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11193:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11199:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"11203:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"11184:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11184:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"EmitStatement","src":"11179:32:2"},{"expression":{"id":1136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"11229:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1048,"id":1137,"nodeType":"Return","src":"11222:11:2"}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"9797:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10393:7:2","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"to","nameLocation":"10409:2:2","nodeType":"VariableDeclaration","scope":1139,"src":"10401:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"10401:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"tokenId","nameLocation":"10421:7:2","nodeType":"VariableDeclaration","scope":1139,"src":"10413:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"10413:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"auth","nameLocation":"10438:4:2","nodeType":"VariableDeclaration","scope":1139,"src":"10430:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"10430:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10400:43:2"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"10470:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"10470:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10469:9:2"},"scope":1542,"src":"10384:856:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1188,"nodeType":"Block","src":"11615:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11629:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11643:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11635:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"11635:7:2","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11635:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11629:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1161,"nodeType":"IfStatement","src":"11625:87:2","trueBody":{"id":1160,"nodeType":"Block","src":"11647:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11698:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11690:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"11690:7:2","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11690:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1153,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"11668:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11668:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1159,"nodeType":"RevertStatement","src":"11661:40:2"}]}},{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"previousOwner","nameLocation":"11729:13:2","nodeType":"VariableDeclaration","scope":1188,"src":"11721:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"11721:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1172,"initialValue":{"arguments":[{"id":1165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11753:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11774:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11766:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"11766:7:2","typeDescriptions":{}}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11766:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11745:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11721:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"11791:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11816:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11808:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"11808:7:2","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11808:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11791:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"11787:96:2","trueBody":{"id":1186,"nodeType":"Block","src":"11820:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11869:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11861:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"11861:7:2","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11861:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1179,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"11841:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11841:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1185,"nodeType":"RevertStatement","src":"11834:38:2"}]}}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"11246:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11571:5:2","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"to","nameLocation":"11585:2:2","nodeType":"VariableDeclaration","scope":1189,"src":"11577:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"11577:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"tokenId","nameLocation":"11597:7:2","nodeType":"VariableDeclaration","scope":1189,"src":"11589:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11589:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11576:29:2"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"11615:0:2"},"scope":1542,"src":"11562:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"12297:43:2","statements":[{"expression":{"arguments":[{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"12317:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"12321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12330:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1197,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1234,"src":"12307:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12307:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"12307:26:2"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"11895:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12249:9:2","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"to","nameLocation":"12267:2:2","nodeType":"VariableDeclaration","scope":1204,"src":"12259:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"12259:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"tokenId","nameLocation":"12279:7:2","nodeType":"VariableDeclaration","scope":1204,"src":"12271:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"12271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12258:29:2"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"12297:0:2"},"scope":1542,"src":"12240:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1233,"nodeType":"Block","src":"12645:123:2","statements":[{"expression":{"arguments":[{"id":1215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"12661:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12665:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"12655:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12655:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"12655:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1222,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"12717:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12717:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12739:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12731:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"12731:7:2","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12731:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1228,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"12743:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1229,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12747:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1230,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"12756:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1219,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"12683:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2772_$","typeString":"type(library ERC721Utils)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12695:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"12683:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12683:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"12683:78:2"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"12346:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12570:9:2","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"to","nameLocation":"12588:2:2","nodeType":"VariableDeclaration","scope":1234,"src":"12580:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"12580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"tokenId","nameLocation":"12600:7:2","nodeType":"VariableDeclaration","scope":1234,"src":"12592:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12592:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"data","nameLocation":"12622:4:2","nodeType":"VariableDeclaration","scope":1234,"src":"12609:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"12609:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12579:48:2"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[],"src":"12645:0:2"},"scope":1542,"src":"12561:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"13135:186:2","statements":[{"assignments":[1241],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"previousOwner","nameLocation":"13153:13:2","nodeType":"VariableDeclaration","scope":1266,"src":"13145:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"13145:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1253,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13185:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13177:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"13177:7:2","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13177:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"13189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13206:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13198:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"13198:7:2","typeDescriptions":{}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13198:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"13169:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13169:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13145:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1254,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"13223:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13248:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"13240:7:2","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13223:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1265,"nodeType":"IfStatement","src":"13219:96:2","trueBody":{"id":1264,"nodeType":"Block","src":"13252:63:2","statements":[{"errorCall":{"arguments":[{"id":1261,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"13296:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"13273:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13273:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1263,"nodeType":"RevertStatement","src":"13266:38:2"}]}}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"12774:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13103:5:2","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"tokenId","nameLocation":"13117:7:2","nodeType":"VariableDeclaration","scope":1267,"src":"13109:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"13109:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13108:17:2"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"13135:0:2"},"scope":1542,"src":"13094:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"13716:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"13730:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13744:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13736:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"13736:7:2","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13736:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13730:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1291,"nodeType":"IfStatement","src":"13726:87:2","trueBody":{"id":1290,"nodeType":"Block","src":"13748:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13799:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13791:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"13791:7:2","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13791:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1283,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"13769:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13769:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1289,"nodeType":"RevertStatement","src":"13762:40:2"}]}},{"assignments":[1293],"declarations":[{"constant":false,"id":1293,"mutability":"mutable","name":"previousOwner","nameLocation":"13830:13:2","nodeType":"VariableDeclaration","scope":1326,"src":"13822:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"13822:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1302,"initialValue":{"arguments":[{"id":1295,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"13854:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13875:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13867:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"13867:7:2","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13867:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1294,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"13846:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13846:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13822:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13892:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13917:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13909:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"13909:7:2","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13909:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13892:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1314,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13994:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"14011:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13994:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1324,"nodeType":"IfStatement","src":"13990:109:2","trueBody":{"id":1323,"nodeType":"Block","src":"14017:82:2","statements":[{"errorCall":{"arguments":[{"id":1318,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"14059:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"14065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1320,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"14074:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1317,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"14038:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14038:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1322,"nodeType":"RevertStatement","src":"14031:57:2"}]}},"id":1325,"nodeType":"IfStatement","src":"13888:211:2","trueBody":{"id":1313,"nodeType":"Block","src":"13921:63:2","statements":[{"errorCall":{"arguments":[{"id":1310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13965:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"13942:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13942:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1312,"nodeType":"RevertStatement","src":"13935:38:2"}]}}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"13327:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13654:9:2","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"from","nameLocation":"13672:4:2","nodeType":"VariableDeclaration","scope":1327,"src":"13664:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"13664:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"to","nameLocation":"13686:2:2","nodeType":"VariableDeclaration","scope":1327,"src":"13678:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"13678:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"tokenId","nameLocation":"13698:7:2","nodeType":"VariableDeclaration","scope":1327,"src":"13690:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"13690:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13663:43:2"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"13716:0:2"},"scope":1542,"src":"13645:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1344,"nodeType":"Block","src":"15114:53:2","statements":[{"expression":{"arguments":[{"id":1338,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"15138:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15144:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"15148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15157:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1337,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1345,1375],"referencedDeclaration":1375,"src":"15124:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"15124:36:2"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"14111:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15048:13:2","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"from","nameLocation":"15070:4:2","nodeType":"VariableDeclaration","scope":1345,"src":"15062:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"15062:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"to","nameLocation":"15084:2:2","nodeType":"VariableDeclaration","scope":1345,"src":"15076:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"15076:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"tokenId","nameLocation":"15096:7:2","nodeType":"VariableDeclaration","scope":1345,"src":"15088:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"15088:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15061:43:2"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"15114:0:2"},"scope":1542,"src":"15039:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"15506:127:2","statements":[{"expression":{"arguments":[{"id":1358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"15526:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15532:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15536:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15516:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15516:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"15516:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"15588:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15588:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"15602:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15608:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"15621:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1363,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"15554:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2772_$","typeString":"type(library ERC721Utils)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15566:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"15554:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15554:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"15554:72:2"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"15173:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15413:13:2","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"from","nameLocation":"15435:4:2","nodeType":"VariableDeclaration","scope":1375,"src":"15427:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"15427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"to","nameLocation":"15449:2:2","nodeType":"VariableDeclaration","scope":1375,"src":"15441:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"15441:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"tokenId","nameLocation":"15461:7:2","nodeType":"VariableDeclaration","scope":1375,"src":"15453:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"15453:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"data","nameLocation":"15483:4:2","nodeType":"VariableDeclaration","scope":1375,"src":"15470:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1353,"name":"bytes","nodeType":"ElementaryTypeName","src":"15470:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15426:62:2"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"15506:0:2"},"scope":1542,"src":"15404:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"16146:50:2","statements":[{"expression":{"arguments":[{"id":1386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"16165:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"16169:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1388,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"16178:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16184:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1385,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1393,1467],"referencedDeclaration":1467,"src":"16156:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16156:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"16156:33:2"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"15639:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16085:8:2","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"to","nameLocation":"16102:2:2","nodeType":"VariableDeclaration","scope":1393,"src":"16094:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"16094:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"16114:7:2","nodeType":"VariableDeclaration","scope":1393,"src":"16106:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"16106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"auth","nameLocation":"16131:4:2","nodeType":"VariableDeclaration","scope":1393,"src":"16123:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"16123:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16093:43:2"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"16146:0:2"},"scope":1542,"src":"16076:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"16472:625:2","statements":[{"assignments":[1407],"declarations":[{"constant":false,"id":1407,"mutability":"mutable","name":"$","nameLocation":"16504:1:2","nodeType":"VariableDeclaration","scope":1466,"src":"16482:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1406,"nodeType":"UserDefinedTypeName","pathNode":{"id":1405,"name":"ERC721Storage","nameLocations":["16482:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"16482:13:2"},"referencedDeclaration":522,"src":"16482:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1410,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1408,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"16508:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16508:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16482:45:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"16593:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16606:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"16614:7:2","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16606:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16593:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"IfStatement","src":"16589:460:2","trueBody":{"id":1456,"nodeType":"Block","src":"16626:423:2","statements":[{"assignments":[1420],"declarations":[{"constant":false,"id":1420,"mutability":"mutable","name":"owner","nameLocation":"16648:5:2","nodeType":"VariableDeclaration","scope":1456,"src":"16640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"16640:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1424,"initialValue":{"arguments":[{"id":1422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"16670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"16656:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16656:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16640:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16806:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16822:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16814:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"16814:7:2","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16814:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16806:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"16828:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1432,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16837:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16828:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16806:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16845:30:2","subExpression":{"arguments":[{"id":1436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"16863:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16870:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"16846:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16846:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16806:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"16802:142:2","trueBody":{"id":1445,"nodeType":"Block","src":"16877:67:2","statements":[{"errorCall":{"arguments":[{"id":1442,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16924:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1441,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"16902:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16902:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1444,"nodeType":"RevertStatement","src":"16895:34:2"}]}},{"condition":{"id":1447,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"16962:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"16958:81:2","trueBody":{"id":1454,"nodeType":"Block","src":"16973:66:2","statements":[{"eventCall":{"arguments":[{"id":1449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"17005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"17012:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"17016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1448,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"16996:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16996:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"EmitStatement","src":"16991:33:2"}]}}]}},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1458,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"17059:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17061:15:2","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":515,"src":"17059:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1462,"indexExpression":{"id":1460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"17077:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:26:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1463,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"17088:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17059:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1465,"nodeType":"ExpressionStatement","src":"17059:31:2"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"16202:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16387:8:2","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"16404:2:2","nodeType":"VariableDeclaration","scope":1467,"src":"16396:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"16396:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"16416:7:2","nodeType":"VariableDeclaration","scope":1467,"src":"16408:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"16408:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"auth","nameLocation":"16433:4:2","nodeType":"VariableDeclaration","scope":1467,"src":"16425:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"16425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"emitEvent","nameLocation":"16444:9:2","nodeType":"VariableDeclaration","scope":1467,"src":"16439:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1401,"name":"bool","nodeType":"ElementaryTypeName","src":"16439:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16395:59:2"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"16472:0:2"},"scope":1542,"src":"16378:719:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"17399:276:2","statements":[{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"$","nameLocation":"17431:1:2","nodeType":"VariableDeclaration","scope":1511,"src":"17409:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1478,"nodeType":"UserDefinedTypeName","pathNode":{"id":1477,"name":"ERC721Storage","nameLocations":["17409:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"17409:13:2"},"referencedDeclaration":522,"src":"17409:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1480,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"17435:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17435:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17409:45:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17468:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17488:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17480:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"17480:7:2","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17480:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17468:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1494,"nodeType":"IfStatement","src":"17464:91:2","trueBody":{"id":1493,"nodeType":"Block","src":"17492:63:2","statements":[{"errorCall":{"arguments":[{"id":1490,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17535:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"17513:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17513:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1492,"nodeType":"RevertStatement","src":"17506:38:2"}]}},{"expression":{"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"17564:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17566:18:2","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":521,"src":"17564:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1500,"indexExpression":{"id":1497,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"17585:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17564:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1501,"indexExpression":{"id":1498,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17592:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17564:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1502,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"17604:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17564:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"ExpressionStatement","src":"17564:48:2"},{"eventCall":{"arguments":[{"id":1506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"17642:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1507,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17649:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1508,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"17659:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1505,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"17627:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17627:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1510,"nodeType":"EmitStatement","src":"17622:46:2"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"17103:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"17315:18:2","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"owner","nameLocation":"17342:5:2","nodeType":"VariableDeclaration","scope":1512,"src":"17334:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"17334:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"operator","nameLocation":"17357:8:2","nodeType":"VariableDeclaration","scope":1512,"src":"17349:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"17349:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"approved","nameLocation":"17372:8:2","nodeType":"VariableDeclaration","scope":1512,"src":"17367:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1473,"name":"bool","nodeType":"ElementaryTypeName","src":"17367:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17333:48:2"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"17399:0:2"},"scope":1542,"src":"17306:369:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"17982:169:2","statements":[{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"owner","nameLocation":"18000:5:2","nodeType":"VariableDeclaration","scope":1540,"src":"17992:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"17992:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1525,"initialValue":{"arguments":[{"id":1523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"18017:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1522,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"18008:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18008:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17992:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"18039:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18056:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18048:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"18048:7:2","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18048:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18039:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"IfStatement","src":"18035:88:2","trueBody":{"id":1536,"nodeType":"Block","src":"18060:63:2","statements":[{"errorCall":{"arguments":[{"id":1533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"18104:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"18081:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18081:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1535,"nodeType":"RevertStatement","src":"18074:38:2"}]}},{"expression":{"id":1538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"18139:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1519,"id":1539,"nodeType":"Return","src":"18132:12:2"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"17681:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"17919:13:2","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"tokenId","nameLocation":"17941:7:2","nodeType":"VariableDeclaration","scope":1541,"src":"17933:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17932:17:2"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"17973:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"17973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17972:9:2"},"scope":1542,"src":"17910:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1543,"src":"1099:17054:2","usedErrors":[211,214,1824,1829,1838,1843,1848,1855,1860,1865],"usedEvents":[219,2548,2557,2566]}],"src":"107:18047:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1588],"Initializable":[462]},"id":1589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1544,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1589,"sourceUnit":463,"src":"126:63:3","symbolAliases":[{"foreign":{"id":1545,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1548,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:3"},"id":1549,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1588,"linearizedBaseContracts":[1588,462],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1554,"nodeType":"Block","src":"800:7:3","statements":[]},"id":1555,"implemented":true,"kind":"function","modifiers":[{"id":1552,"kind":"modifierInvocation","modifierName":{"id":1551,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":1588,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1560,"nodeType":"Block","src":"875:7:3","statements":[]},"id":1561,"implemented":true,"kind":"function","modifiers":[{"id":1558,"kind":"modifierInvocation","modifierName":{"id":1557,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":1588,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":1566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1565,"id":1568,"nodeType":"Return","src":"959:17:3"}]},"id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1570,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":1588,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":1575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1574,"id":1577,"nodeType":"Return","src":"1066:15:3"}]},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":1588,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1583,"id":1585,"nodeType":"Return","src":"1176:8:3"}]},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":1588,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1589,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1628],"IERC165":[4268],"Initializable":[462]},"id":1629,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1590,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1629,"sourceUnit":4269,"src":"140:80:4","symbolAliases":[{"foreign":{"id":1591,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"148:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1629,"sourceUnit":463,"src":"221:66:4","symbolAliases":[{"foreign":{"id":1593,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"229:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1596,"name":"Initializable","nameLocations":["808:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"808:13:4"},"id":1597,"nodeType":"InheritanceSpecifier","src":"808:13:4"},{"baseName":{"id":1598,"name":"IERC165","nameLocations":["823:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"823:7:4"},"id":1599,"nodeType":"InheritanceSpecifier","src":"823:7:4"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"289:479:4","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1628,"linearizedBaseContracts":[1628,4268,462],"name":"ERC165Upgradeable","nameLocation":"787:17:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1604,"nodeType":"Block","src":"888:7:4","statements":[]},"id":1605,"implemented":true,"kind":"function","modifiers":[{"id":1602,"kind":"modifierInvocation","modifierName":{"id":1601,"name":"onlyInitializing","nameLocations":["871:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"871:16:4"},"nodeType":"ModifierInvocation","src":"871:16:4"}],"name":"__ERC165_init","nameLocation":"846:13:4","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[],"src":"859:2:4"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"888:0:4"},"scope":1628,"src":"837:58:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"962:7:4","statements":[]},"id":1611,"implemented":true,"kind":"function","modifiers":[{"id":1608,"kind":"modifierInvocation","modifierName":{"id":1607,"name":"onlyInitializing","nameLocations":["945:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"945:16:4"},"nodeType":"ModifierInvocation","src":"945:16:4"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:4","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"933:2:4"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[],"src":"962:0:4"},"scope":1628,"src":"901:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4267],"body":{"id":1626,"nodeType":"Block","src":"1117:64:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1134:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1621,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"1154:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4268_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4268_$","typeString":"type(contract IERC165)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4268","typeString":"type(contract IERC165)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1618,"id":1625,"nodeType":"Return","src":"1127:47:4"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"974:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:4","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:4","nodeType":"VariableDeclaration","scope":1627,"src":"1062:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1613,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:4"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"1111:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1616,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:4"},"scope":1628,"src":"1035:146:4","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1629,"src":"769:414:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"114:1070:4"},"id":4},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2802],"Ownable":[1776]},"id":1777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1630,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1777,"sourceUnit":2803,"src":"128:45:5","symbolAliases":[{"foreign":{"id":1631,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"136:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1634,"name":"Context","nameLocations":["692:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2802,"src":"692:7:5"},"id":1635,"nodeType":"InheritanceSpecifier","src":"692:7:5"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"175:487:5","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1776,"linearizedBaseContracts":[1776,2802],"name":"Ownable","nameLocation":"681:7:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1637,"mutability":"mutable","name":"_owner","nameLocation":"722:6:5","nodeType":"VariableDeclaration","scope":1776,"src":"706:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"735:85:5","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1642,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:5","nodeType":"ErrorDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"account","nameLocation":"866:7:5","nodeType":"VariableDeclaration","scope":1642,"src":"858:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:5"},"src":"825:50:5"},{"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"881:82:5","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1647,"name":"OwnableInvalidOwner","nameLocation":"974:19:5","nodeType":"ErrorDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"owner","nameLocation":"1002:5:5","nodeType":"VariableDeclaration","scope":1647,"src":"994:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:5"},"src":"968:41:5"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1653,"name":"OwnershipTransferred","nameLocation":"1021:20:5","nodeType":"EventDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:5","nodeType":"VariableDeclaration","scope":1653,"src":"1042:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:5","nodeType":"VariableDeclaration","scope":1653,"src":"1073:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:5"},"src":"1015:84:5"},{"body":{"id":1678,"nodeType":"Block","src":"1259:153:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"1273:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:5","typeDescriptions":{}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1673,"nodeType":"IfStatement","src":"1269:95:5","trueBody":{"id":1672,"nodeType":"Block","src":"1301:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:5","typeDescriptions":{}}},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"1322:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1671,"nodeType":"RevertStatement","src":"1315:38:5"}]}},{"expression":{"arguments":[{"id":1675,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"1392:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1674,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1373:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"ExpressionStatement","src":"1373:32:5"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"1105:115:5","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1679,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:5","nodeType":"VariableDeclaration","scope":1679,"src":"1237:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:5"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"1259:0:5"},"scope":1776,"src":"1225:187:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"1521:41:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1682,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"1531:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"1531:13:5"},{"id":1685,"nodeType":"PlaceholderStatement","src":"1554:1:5"}]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"1418:77:5","text":" @dev Throws if called by any account other than the owner."},"id":1687,"name":"onlyOwner","nameLocation":"1509:9:5","nodeType":"ModifierDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"1518:2:5"},"src":"1500:62:5","virtual":false,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"1693:30:5","statements":[{"expression":{"id":1693,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1710:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1692,"id":1694,"nodeType":"Return","src":"1703:13:5"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1568:65:5","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:5","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"1652:2:5"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1684:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:5"},"scope":1776,"src":"1638:85:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1712,"nodeType":"Block","src":"1841:117:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1700,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1855:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1702,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1866:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"1851:101:5","trueBody":{"id":1710,"nodeType":"Block","src":"1880:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1706,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1928:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1705,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1901:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1709,"nodeType":"RevertStatement","src":"1894:47:5"}]}}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1729:62:5","text":" @dev Throws if the sender is not the owner."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:5","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"1816:2:5"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[],"src":"1841:0:5"},"scope":1776,"src":"1796:162:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"2347:47:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:5","typeDescriptions":{}}},"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1719,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2357:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1725,"nodeType":"ExpressionStatement","src":"2357:30:5"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"1964:324:5","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1727,"implemented":true,"kind":"function","modifiers":[{"id":1717,"kind":"modifierInvocation","modifierName":{"id":1716,"name":"onlyOwner","nameLocations":["2337:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"2337:9:5"},"nodeType":"ModifierInvocation","src":"2337:9:5"}],"name":"renounceOwnership","nameLocation":"2302:17:5","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[],"src":"2319:2:5"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"2347:0:5"},"scope":1776,"src":"2293:101:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1754,"nodeType":"Block","src":"2613:145:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1735,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2627:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:5","typeDescriptions":{}}},"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1749,"nodeType":"IfStatement","src":"2623:91:5","trueBody":{"id":1748,"nodeType":"Block","src":"2651:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:5","typeDescriptions":{}}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1741,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2672:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1747,"nodeType":"RevertStatement","src":"2665:38:5"}]}},{"expression":{"arguments":[{"id":1751,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2742:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1750,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2723:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"2723:28:5"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"2400:138:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1755,"implemented":true,"kind":"function","modifiers":[{"id":1733,"kind":"modifierInvocation","modifierName":{"id":1732,"name":"onlyOwner","nameLocations":["2603:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"2603:9:5"},"nodeType":"ModifierInvocation","src":"2603:9:5"}],"name":"transferOwnership","nameLocation":"2552:17:5","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:5","nodeType":"VariableDeclaration","scope":1755,"src":"2570:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:5"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"2613:0:5"},"scope":1776,"src":"2543:215:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1774,"nodeType":"Block","src":"2975:124:5","statements":[{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:5","nodeType":"VariableDeclaration","scope":1774,"src":"2985:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1764,"initialValue":{"id":1763,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"3004:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:5"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"3020:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1766,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"3029:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1768,"nodeType":"ExpressionStatement","src":"3020:17:5"},{"eventCall":{"arguments":[{"id":1770,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3073:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1771,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"3083:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1769,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3052:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"EmitStatement","src":"3047:45:5"}]},"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"2764:143:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:5","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:5","nodeType":"VariableDeclaration","scope":1775,"src":"2940:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:5"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"2975:0:5"},"scope":1776,"src":"2912:187:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1777,"src":"663:2438:5","usedErrors":[1642,1647],"usedEvents":[1653]}],"src":"102:3000:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1913],"IERC20Errors":[1818],"IERC721Errors":[1866]},"id":1914,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1778,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1818,"linearizedBaseContracts":[1818],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1788,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":1788,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":1788,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":1788,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1793,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":1793,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1798,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":1798,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1807,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":1807,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":1807,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":1807,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1812,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":1812,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1817,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":1817,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":1914,"src":"280:1764:6","usedErrors":[1788,1793,1798,1807,1812,1817],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1866,"linearizedBaseContracts":[1866],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1824,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":1824,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1829,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":1829,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1838,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":1838,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":1838,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":1838,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1843,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":1843,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1848,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":1848,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1855,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":1855,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":1855,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1860,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":1860,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1865,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":1865,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":1914,"src":"2190:2092:6","usedErrors":[1824,1829,1838,1843,1848,1855,1860,1865],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1913,"linearizedBaseContracts":[1913],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1878,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":1878,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":1878,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":1878,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":1878,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1883,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":1883,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1888,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":1888,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1895,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":1895,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":1895,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1900,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":1900,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1905,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":1905,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1912,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":1912,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":1912,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":1914,"src":"4430:2107:6","usedErrors":[1878,1883,1888,1895,1900,1905,1912],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2802],"ERC20":[2428],"IERC20":[2506],"IERC20Errors":[1818],"IERC20Metadata":[2532]},"id":2429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1915,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2429,"sourceUnit":2507,"src":"131:36:7","symbolAliases":[{"foreign":{"id":1916,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2429,"sourceUnit":2533,"src":"168:63:7","symbolAliases":[{"foreign":{"id":1918,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2429,"sourceUnit":2803,"src":"232:48:7","symbolAliases":[{"foreign":{"id":1920,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2429,"sourceUnit":1914,"src":"281:65:7","symbolAliases":[{"foreign":{"id":1922,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1925,"name":"Context","nameLocations":["1133:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2802,"src":"1133:7:7"},"id":1926,"nodeType":"InheritanceSpecifier","src":"1133:7:7"},{"baseName":{"id":1927,"name":"IERC20","nameLocations":["1142:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2506,"src":"1142:6:7"},"id":1928,"nodeType":"InheritanceSpecifier","src":"1142:6:7"},{"baseName":{"id":1929,"name":"IERC20Metadata","nameLocations":["1150:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2532,"src":"1150:14:7"},"id":1930,"nodeType":"InheritanceSpecifier","src":"1150:14:7"},{"baseName":{"id":1931,"name":"IERC20Errors","nameLocations":["1166:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1818,"src":"1166:12:7"},"id":1932,"nodeType":"InheritanceSpecifier","src":"1166:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"348:757:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2428,"linearizedBaseContracts":[2428,1818,2532,2506,2802],"name":"ERC20","nameLocation":"1124:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1936,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:7","nodeType":"VariableDeclaration","scope":2428,"src":"1185:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1935,"keyName":"account","keyNameLocation":"1201:7:7","keyType":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1942,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:7","nodeType":"VariableDeclaration","scope":2428,"src":"1245:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1941,"keyName":"account","keyNameLocation":"1261:7:7","keyType":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1940,"keyName":"spender","keyNameLocation":"1288:7:7","keyType":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1944,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:7","nodeType":"VariableDeclaration","scope":2428,"src":"1335:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1946,"mutability":"mutable","name":"_name","nameLocation":"1385:5:7","nodeType":"VariableDeclaration","scope":2428,"src":"1370:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1945,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1948,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:7","nodeType":"VariableDeclaration","scope":2428,"src":"1396:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1947,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1964,"nodeType":"Block","src":"1638:57:7","statements":[{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1957,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1656:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1959,"nodeType":"ExpressionStatement","src":"1648:13:7"},{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1671:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1961,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1681:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1963,"nodeType":"ExpressionStatement","src":"1671:17:7"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"1425:152:7","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1965,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"name_","nameLocation":"1608:5:7","nodeType":"VariableDeclaration","scope":1965,"src":"1594:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1950,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:7","nodeType":"VariableDeclaration","scope":1965,"src":"1615:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1952,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:7"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"1638:0:7"},"scope":2428,"src":"1582:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2519],"body":{"id":1973,"nodeType":"Block","src":"1820:29:7","statements":[{"expression":{"id":1971,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1837:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1970,"id":1972,"nodeType":"Return","src":"1830:12:7"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"1701:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:7","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"1773:2:7"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1974,"src":"1805:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1968,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:7"},"scope":2428,"src":"1760:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2525],"body":{"id":1982,"nodeType":"Block","src":"2024:31:7","statements":[{"expression":{"id":1980,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2041:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1979,"id":1981,"nodeType":"Return","src":"2034:14:7"}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"1855:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:7","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"1977:2:7"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"2009:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1977,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:7"},"scope":2428,"src":"1962:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2531],"body":{"id":1991,"nodeType":"Block","src":"2744:26:7","statements":[{"expression":{"hexValue":"3138","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1988,"id":1990,"nodeType":"Return","src":"2754:9:7"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"2061:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:7","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"2705:2:7"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"2737:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1986,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:7"},"scope":2428,"src":"2688:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2455],"body":{"id":2000,"nodeType":"Block","src":"2891:36:7","statements":[{"expression":{"id":1998,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2908:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1997,"id":1999,"nodeType":"Return","src":"2901:19:7"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"2776:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:7","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"2850:2:7"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"2882:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:7"},"scope":2428,"src":"2830:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2463],"body":{"id":2013,"nodeType":"Block","src":"3059:42:7","statements":[{"expression":{"baseExpression":{"id":2009,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"3076:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2011,"indexExpression":{"id":2010,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"3086:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2008,"id":2012,"nodeType":"Return","src":"3069:25:7"}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"2933:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:7","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"account","nameLocation":"3012:7:7","nodeType":"VariableDeclaration","scope":2014,"src":"3004:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:7"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"3050:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:7"},"scope":2428,"src":"2985:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2473],"body":{"id":2037,"nodeType":"Block","src":"3371:103:7","statements":[{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"owner","nameLocation":"3389:5:7","nodeType":"VariableDeclaration","scope":2037,"src":"3381:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2028,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2026,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"3397:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:7"},{"expression":{"arguments":[{"id":2030,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3429:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3436:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3419:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"ExpressionStatement","src":"3419:27:7"},{"expression":{"hexValue":"74727565","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2023,"id":2036,"nodeType":"Return","src":"3456:11:7"}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"3107:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:7","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"to","nameLocation":"3322:2:7","nodeType":"VariableDeclaration","scope":2038,"src":"3314:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"value","nameLocation":"3334:5:7","nodeType":"VariableDeclaration","scope":2038,"src":"3326:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:7"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"3365:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2021,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:7"},"scope":2428,"src":"3296:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2483],"body":{"id":2054,"nodeType":"Block","src":"3621:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2048,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3638:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2050,"indexExpression":{"id":2049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3650:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2052,"indexExpression":{"id":2051,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"3657:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2047,"id":2053,"nodeType":"Return","src":"3631:34:7"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"3480:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:7","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"owner","nameLocation":"3559:5:7","nodeType":"VariableDeclaration","scope":2055,"src":"3551:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"spender","nameLocation":"3574:7:7","nodeType":"VariableDeclaration","scope":2055,"src":"3566:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:7"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"3612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:7"},"scope":2428,"src":"3532:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2493],"body":{"id":2078,"nodeType":"Block","src":"4058:107:7","statements":[{"assignments":[2066],"declarations":[{"constant":false,"id":2066,"mutability":"mutable","name":"owner","nameLocation":"4076:5:7","nodeType":"VariableDeclaration","scope":2078,"src":"4068:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2069,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"4084:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:7"},{"expression":{"arguments":[{"id":2071,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4115:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2072,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4122:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2070,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2319,2379],"referencedDeclaration":2319,"src":"4106:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2075,"nodeType":"ExpressionStatement","src":"4106:31:7"},{"expression":{"hexValue":"74727565","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2064,"id":2077,"nodeType":"Return","src":"4147:11:7"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"3678:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:7","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"spender","nameLocation":"4004:7:7","nodeType":"VariableDeclaration","scope":2079,"src":"3996:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"value","nameLocation":"4021:5:7","nodeType":"VariableDeclaration","scope":2079,"src":"4013:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:7"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"4052:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2062,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:7"},"scope":2428,"src":"3979:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2505],"body":{"id":2110,"nodeType":"Block","src":"4850:151:7","statements":[{"assignments":[2092],"declarations":[{"constant":false,"id":2092,"mutability":"mutable","name":"spender","nameLocation":"4868:7:7","nodeType":"VariableDeclaration","scope":2110,"src":"4860:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2095,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2093,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"4878:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:7"},{"expression":{"arguments":[{"id":2097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"4916:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2098,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"4922:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"4931:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2096,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"4900:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"4900:37:7"},{"expression":{"arguments":[{"id":2103,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"4957:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4963:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"4967:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2102,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4947:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"ExpressionStatement","src":"4947:26:7"},{"expression":{"hexValue":"74727565","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2090,"id":2109,"nodeType":"Return","src":"4983:11:7"}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"4171:581:7","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:7","nodeType":"FunctionDefinition","parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"from","nameLocation":"4787:4:7","nodeType":"VariableDeclaration","scope":2111,"src":"4779:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"to","nameLocation":"4801:2:7","nodeType":"VariableDeclaration","scope":2111,"src":"4793:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"value","nameLocation":"4813:5:7","nodeType":"VariableDeclaration","scope":2111,"src":"4805:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:7"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2111,"src":"4844:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2088,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:7"},"scope":2428,"src":"4757:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2157,"nodeType":"Block","src":"5443:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"5457:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:7","typeDescriptions":{}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"5453:86:7","trueBody":{"id":2134,"nodeType":"Block","src":"5477:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:7","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2127,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"5498:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2133,"nodeType":"RevertStatement","src":"5491:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5552:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:7","typeDescriptions":{}}},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2150,"nodeType":"IfStatement","src":"5548:86:7","trueBody":{"id":2149,"nodeType":"Block","src":"5570:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:7","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2142,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5591:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2148,"nodeType":"RevertStatement","src":"5584:39:7"}]}},{"expression":{"arguments":[{"id":2152,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"5651:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5657:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5661:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2151,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5643:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2156,"nodeType":"ExpressionStatement","src":"5643:24:7"}]},"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"5007:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:7","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"from","nameLocation":"5401:4:7","nodeType":"VariableDeclaration","scope":2158,"src":"5393:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2113,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"to","nameLocation":"5415:2:7","nodeType":"VariableDeclaration","scope":2158,"src":"5407:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"5427:5:7","nodeType":"VariableDeclaration","scope":2158,"src":"5419:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:7"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[],"src":"5443:0:7"},"scope":2428,"src":"5374:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"6064:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6078:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:7","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2205,"nodeType":"Block","src":"6252:362:7","statements":[{"assignments":[2180],"declarations":[{"constant":false,"id":2180,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:7","nodeType":"VariableDeclaration","scope":2205,"src":"6266:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"baseExpression":{"id":2181,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"6288:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2183,"indexExpression":{"id":2182,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6298:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"6321:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6335:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2195,"nodeType":"IfStatement","src":"6317:115:7","trueBody":{"id":2194,"nodeType":"Block","src":"6342:90:7","statements":[{"errorCall":{"arguments":[{"id":2189,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6392:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2190,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"6398:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6411:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2188,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6367:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2193,"nodeType":"RevertStatement","src":"6360:57:7"}]}},{"id":2204,"nodeType":"UncheckedBlock","src":"6445:159:7","statements":[{"expression":{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2196,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"6552:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2198,"indexExpression":{"id":2197,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6562:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"6570:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6584:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2203,"nodeType":"ExpressionStatement","src":"6552:37:7"}]}]},"id":2206,"nodeType":"IfStatement","src":"6074:540:7","trueBody":{"id":2178,"nodeType":"Block","src":"6098:148:7","statements":[{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"6214:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6230:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"6214:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2207,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"6628:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:7","typeDescriptions":{}}},"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2226,"nodeType":"Block","src":"6843:206:7","statements":[{"id":2225,"nodeType":"UncheckedBlock","src":"6857:182:7","statements":[{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2219,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"7002:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2221,"indexExpression":{"id":2220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7012:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7019:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"nodeType":"ExpressionStatement","src":"7002:22:7"}]}]},"id":2227,"nodeType":"IfStatement","src":"6624:425:7","trueBody":{"id":2218,"nodeType":"Block","src":"6646:191:7","statements":[{"id":2217,"nodeType":"UncheckedBlock","src":"6660:167:7","statements":[{"expression":{"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2213,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"6791:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6807:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2216,"nodeType":"ExpressionStatement","src":"6791:21:7"}]}]}},{"eventCall":{"arguments":[{"id":2229,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7073:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2230,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7079:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7083:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2228,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"7064:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"EmitStatement","src":"7059:30:7"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"5680:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:7","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"from","nameLocation":"6014:4:7","nodeType":"VariableDeclaration","scope":2235,"src":"6006:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"to","nameLocation":"6028:2:7","nodeType":"VariableDeclaration","scope":2235,"src":"6020:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"6040:5:7","nodeType":"VariableDeclaration","scope":2235,"src":"6032:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:7"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"6064:0:7"},"scope":2428,"src":"5989:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"7495:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"7509:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:7","typeDescriptions":{}}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"IfStatement","src":"7505:91:7","trueBody":{"id":2256,"nodeType":"Block","src":"7532:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:7","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2249,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"7553:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2255,"nodeType":"RevertStatement","src":"7546:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:7","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2263,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"7625:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7634:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2258,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"7605:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2266,"nodeType":"ExpressionStatement","src":"7605:35:7"}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"7102:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:7","nodeType":"FunctionDefinition","parameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"account","nameLocation":"7462:7:7","nodeType":"VariableDeclaration","scope":2268,"src":"7454:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"value","nameLocation":"7479:5:7","nodeType":"VariableDeclaration","scope":2268,"src":"7471:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:7"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[],"src":"7495:0:7"},"scope":2428,"src":"7439:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"8021:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"8035:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:7","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2290,"nodeType":"IfStatement","src":"8031:89:7","trueBody":{"id":2289,"nodeType":"Block","src":"8058:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:7","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2282,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"8079:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2288,"nodeType":"RevertStatement","src":"8072:37:7"}]}},{"expression":{"arguments":[{"id":2292,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"8137:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:7","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8158:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2291,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"8129:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2299,"nodeType":"ExpressionStatement","src":"8129:35:7"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"7653:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:7","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"account","nameLocation":"7988:7:7","nodeType":"VariableDeclaration","scope":2301,"src":"7980:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"value","nameLocation":"8005:5:7","nodeType":"VariableDeclaration","scope":2301,"src":"7997:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:7"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[],"src":"8021:0:7"},"scope":2428,"src":"7965:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2318,"nodeType":"Block","src":"8781:54:7","statements":[{"expression":{"arguments":[{"id":2312,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8800:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2313,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"8807:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"8816:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2311,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2319,2379],"referencedDeclaration":2379,"src":"8791:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"8791:37:7"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"8177:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:7","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"owner","nameLocation":"8733:5:7","nodeType":"VariableDeclaration","scope":2319,"src":"8725:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"spender","nameLocation":"8748:7:7","nodeType":"VariableDeclaration","scope":2319,"src":"8740:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"value","nameLocation":"8765:5:7","nodeType":"VariableDeclaration","scope":2319,"src":"8757:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:7"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[],"src":"8781:0:7"},"scope":2428,"src":"8707:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2378,"nodeType":"Block","src":"9780:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9794:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:7","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"9790:89:7","trueBody":{"id":2344,"nodeType":"Block","src":"9815:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:7","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2337,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"9836:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2343,"nodeType":"RevertStatement","src":"9829:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"9892:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:7","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2360,"nodeType":"IfStatement","src":"9888:90:7","trueBody":{"id":2359,"nodeType":"Block","src":"9915:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:7","typeDescriptions":{}}},"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2352,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"9936:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2358,"nodeType":"RevertStatement","src":"9929:38:7"}]}},{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2361,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9987:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2364,"indexExpression":{"id":2362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9999:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2365,"indexExpression":{"id":2363,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10006:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10017:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2368,"nodeType":"ExpressionStatement","src":"9987:35:7"},{"condition":{"id":2369,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"10036:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"IfStatement","src":"10032:76:7","trueBody":{"id":2376,"nodeType":"Block","src":"10047:61:7","statements":[{"eventCall":{"arguments":[{"id":2371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10075:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10082:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10091:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2370,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"10066:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2375,"nodeType":"EmitStatement","src":"10061:36:7"}]}}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"8841:836:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:7","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"owner","nameLocation":"9708:5:7","nodeType":"VariableDeclaration","scope":2379,"src":"9700:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"spender","nameLocation":"9723:7:7","nodeType":"VariableDeclaration","scope":2379,"src":"9715:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"value","nameLocation":"9740:5:7","nodeType":"VariableDeclaration","scope":2379,"src":"9732:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:7","nodeType":"VariableDeclaration","scope":2379,"src":"9747:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2327,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:7"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[],"src":"9780:0:7"},"scope":2428,"src":"9682:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2426,"nodeType":"Block","src":"10485:387:7","statements":[{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:7","nodeType":"VariableDeclaration","scope":2426,"src":"10495:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"initialValue":{"arguments":[{"id":2392,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"10532:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2393,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10539:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2391,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"10522:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"10561:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:7","memberName":"max","nodeType":"MemberAccess","src":"10580:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"10557:309:7","trueBody":{"id":2424,"nodeType":"Block","src":"10599:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"10617:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10636:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2413,"nodeType":"IfStatement","src":"10613:130:7","trueBody":{"id":2412,"nodeType":"Block","src":"10643:100:7","statements":[{"errorCall":{"arguments":[{"id":2407,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10695:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2408,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"10704:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10722:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2406,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"10668:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2411,"nodeType":"RevertStatement","src":"10661:67:7"}]}},{"id":2423,"nodeType":"UncheckedBlock","src":"10756:100:7","statements":[{"expression":{"arguments":[{"id":2415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"10793:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2416,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10800:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"10809:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10828:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2414,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2319,2379],"referencedDeclaration":2379,"src":"10784:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2422,"nodeType":"ExpressionStatement","src":"10784:57:7"}]}]}}]},"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"10120:271:7","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2427,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:7","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"owner","nameLocation":"10429:5:7","nodeType":"VariableDeclaration","scope":2427,"src":"10421:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"spender","nameLocation":"10444:7:7","nodeType":"VariableDeclaration","scope":2427,"src":"10436:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2383,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"value","nameLocation":"10461:5:7","nodeType":"VariableDeclaration","scope":2427,"src":"10453:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:7"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"10485:0:7"},"scope":2428,"src":"10396:476:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2429,"src":"1106:9768:7","usedErrors":[1788,1793,1798,1807,1812,1817],"usedEvents":[2440,2449]}],"src":"105:10770:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2506]},"id":2507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"132:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2506,"linearizedBaseContracts":[2506],"name":"IERC20","nameLocation":"214:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"227:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2440,"name":"Transfer","nameLocation":"396:8:8","nodeType":"EventDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:8","nodeType":"VariableDeclaration","scope":2440,"src":"405:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:8","nodeType":"VariableDeclaration","scope":2440,"src":"427:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2438,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:8","nodeType":"VariableDeclaration","scope":2440,"src":"447:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:8"},"src":"390:72:8"},{"anonymous":false,"documentation":{"id":2441,"nodeType":"StructuredDocumentation","src":"468:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2449,"name":"Approval","nameLocation":"627:8:8","nodeType":"EventDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:8","nodeType":"VariableDeclaration","scope":2449,"src":"636:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2445,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:8","nodeType":"VariableDeclaration","scope":2449,"src":"659:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:8","nodeType":"VariableDeclaration","scope":2449,"src":"684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:8"},"src":"621:78:8"},{"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"705:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2455,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:8","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[],"src":"795:2:8"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"821:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:8"},"scope":2506,"src":"775:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"836:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2463,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":2463,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":2506,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"986:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2473,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":2473,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"value","nameLocation":"1242:5:8","nodeType":"VariableDeclaration","scope":2473,"src":"1234:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:8"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2473,"src":"1267:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2470,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:8"},"scope":2506,"src":"1204:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"1279:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2483,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:8","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"owner","nameLocation":"1575:5:8","nodeType":"VariableDeclaration","scope":2483,"src":"1567:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"spender","nameLocation":"1590:7:8","nodeType":"VariableDeclaration","scope":2483,"src":"1582:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:8"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2483,"src":"1622:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:8"},"scope":2506,"src":"1548:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"1637:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2493,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:8","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"spender","nameLocation":"2334:7:8","nodeType":"VariableDeclaration","scope":2493,"src":"2326:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"2351:5:8","nodeType":"VariableDeclaration","scope":2493,"src":"2343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:8"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2493,"src":"2376:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2490,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:8"},"scope":2506,"src":"2309:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"2388:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2505,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:8","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"from","nameLocation":"2720:4:8","nodeType":"VariableDeclaration","scope":2505,"src":"2712:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2495,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"to","nameLocation":"2734:2:8","nodeType":"VariableDeclaration","scope":2505,"src":"2726:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"value","nameLocation":"2746:5:8","nodeType":"VariableDeclaration","scope":2505,"src":"2738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:8"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":2506,"src":"2690:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2507,"src":"204:2575:8","usedErrors":[],"usedEvents":[2440,2449]}],"src":"106:2674:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2506],"IERC20Metadata":[2532]},"id":2533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2508,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2533,"sourceUnit":2507,"src":"151:37:9","symbolAliases":[{"foreign":{"id":2509,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2512,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2506,"src":"306:6:9"},"id":2513,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2532,"linearizedBaseContracts":[2532,2506],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2519,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2519,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2516,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":2532,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2525,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2525,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2522,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":2532,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2531,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2531,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2528,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":2532,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2533,"src":"278:405:9","usedErrors":[],"usedEvents":[2440,2449]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4268],"IERC721":[2649]},"id":2650,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2534,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2650,"sourceUnit":4269,"src":"134:62:10","symbolAliases":[{"foreign":{"id":2535,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"142:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2538,"name":"IERC165","nameLocations":["288:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4268,"src":"288:7:10"},"id":2539,"nodeType":"InheritanceSpecifier","src":"288:7:10"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"198:68:10","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2649,"linearizedBaseContracts":[2649,4268],"name":"IERC721","nameLocation":"277:7:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"302:88:10","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2548,"name":"Transfer","nameLocation":"401:8:10","nodeType":"EventDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:10","nodeType":"VariableDeclaration","scope":2548,"src":"410:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:10","nodeType":"VariableDeclaration","scope":2548,"src":"432:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:10","nodeType":"VariableDeclaration","scope":2548,"src":"452:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:10"},"src":"395:82:10"},{"anonymous":false,"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"483:94:10","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2557,"name":"Approval","nameLocation":"588:8:10","nodeType":"EventDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:10","nodeType":"VariableDeclaration","scope":2557,"src":"597:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2553,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:10","nodeType":"VariableDeclaration","scope":2557,"src":"620:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2555,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:10","nodeType":"VariableDeclaration","scope":2557,"src":"646:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:10"},"src":"582:89:10"},{"anonymous":false,"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"677:117:10","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2566,"name":"ApprovalForAll","nameLocation":"805:14:10","nodeType":"EventDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:10","nodeType":"VariableDeclaration","scope":2566,"src":"820:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2562,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:10","nodeType":"VariableDeclaration","scope":2566,"src":"843:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2564,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:10","nodeType":"VariableDeclaration","scope":2566,"src":"869:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2563,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:10"},"src":"799:85:10"},{"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"890:76:10","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2574,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:10","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"owner","nameLocation":"998:5:10","nodeType":"VariableDeclaration","scope":2574,"src":"990:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:10"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"balance","nameLocation":"1036:7:10","nodeType":"VariableDeclaration","scope":2574,"src":"1028:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:10"},"scope":2649,"src":"971:74:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"1051:131:10","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2582,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:10","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:10","nodeType":"VariableDeclaration","scope":2582,"src":"1204:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:10"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"owner","nameLocation":"1252:5:10","nodeType":"VariableDeclaration","scope":2582,"src":"1244:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:10"},"scope":2649,"src":"1187:72:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"1265:565:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2594,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:10","nodeType":"FunctionDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"from","nameLocation":"1869:4:10","nodeType":"VariableDeclaration","scope":2594,"src":"1861:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"to","nameLocation":"1883:2:10","nodeType":"VariableDeclaration","scope":2594,"src":"1875:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:10","nodeType":"VariableDeclaration","scope":2594,"src":"1887:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"data","nameLocation":"1919:4:10","nodeType":"VariableDeclaration","scope":2594,"src":"1904:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:10"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[],"src":"1933:0:10"},"scope":2649,"src":"1835:99:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"1940:706:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2604,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:10","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"from","nameLocation":"2685:4:10","nodeType":"VariableDeclaration","scope":2604,"src":"2677:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"to","nameLocation":"2699:2:10","nodeType":"VariableDeclaration","scope":2604,"src":"2691:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:10","nodeType":"VariableDeclaration","scope":2604,"src":"2703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:10"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"2728:0:10"},"scope":2649,"src":"2651:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"2735:733:10","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2614,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:10","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"from","nameLocation":"3503:4:10","nodeType":"VariableDeclaration","scope":2614,"src":"3495:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"to","nameLocation":"3517:2:10","nodeType":"VariableDeclaration","scope":2614,"src":"3509:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:10","nodeType":"VariableDeclaration","scope":2614,"src":"3521:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:10"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[],"src":"3546:0:10"},"scope":2649,"src":"3473:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"3553:452:10","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2622,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:10","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"to","nameLocation":"4035:2:10","nodeType":"VariableDeclaration","scope":2622,"src":"4027:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:10","nodeType":"VariableDeclaration","scope":2622,"src":"4039:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:10"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"4064:0:10"},"scope":2649,"src":"4010:55:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"4071:315:10","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2630,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:10","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"operator","nameLocation":"4426:8:10","nodeType":"VariableDeclaration","scope":2630,"src":"4418:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"approved","nameLocation":"4441:8:10","nodeType":"VariableDeclaration","scope":2630,"src":"4436:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2626,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:10"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"4459:0:10"},"scope":2649,"src":"4391:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"4466:139:10","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2638,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:10","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:10","nodeType":"VariableDeclaration","scope":2638,"src":"4631:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:10"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"operator","nameLocation":"4679:8:10","nodeType":"VariableDeclaration","scope":2638,"src":"4671:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:10"},"scope":2649,"src":"4610:79:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"4695:138:10","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2648,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:10","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"owner","nameLocation":"4872:5:10","nodeType":"VariableDeclaration","scope":2648,"src":"4864:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"operator","nameLocation":"4887:8:10","nodeType":"VariableDeclaration","scope":2648,"src":"4879:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:10"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"4920:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2645,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:10"},"scope":2649,"src":"4838:88:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2650,"src":"267:4661:10","usedErrors":[],"usedEvents":[2548,2557,2566]}],"src":"108:4821:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2667]},"id":2668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2651,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2652,"nodeType":"StructuredDocumentation","src":"142:154:11","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2667,"linearizedBaseContracts":[2667],"name":"IERC721Receiver","nameLocation":"307:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"329:500:11","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2666,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:11","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"operator","nameLocation":"877:8:11","nodeType":"VariableDeclaration","scope":2666,"src":"869:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"from","nameLocation":"903:4:11","nodeType":"VariableDeclaration","scope":2666,"src":"895:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:11","nodeType":"VariableDeclaration","scope":2666,"src":"917:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"data","nameLocation":"957:4:11","nodeType":"VariableDeclaration","scope":2666,"src":"942:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2660,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:11"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"986:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2663,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:11"},"scope":2667,"src":"834:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2668,"src":"297:699:11","usedErrors":[],"usedEvents":[]}],"src":"116:881:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2649],"IERC721Metadata":[2695]},"id":2696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2669,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2696,"sourceUnit":2650,"src":"153:39:12","symbolAliases":[{"foreign":{"id":2670,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"161:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2673,"name":"IERC721","nameLocations":["357:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2649,"src":"357:7:12"},"id":2674,"nodeType":"InheritanceSpecifier","src":"357:7:12"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"194:133:12","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2695,"linearizedBaseContracts":[2695,2649,4268],"name":"IERC721Metadata","nameLocation":"338:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"371:58:12","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2680,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:12","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"447:2:12"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2680,"src":"473:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:12"},"scope":2695,"src":"434:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"494:60:12","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2686,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:12","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[],"src":"574:2:12"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2686,"src":"600:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:12"},"scope":2695,"src":"559:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"621:90:12","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2694,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:12","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:12","nodeType":"VariableDeclaration","scope":2694,"src":"734:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:12"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2694,"src":"774:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2691,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:12"},"scope":2695,"src":"716:73:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2696,"src":"328:463:12","usedErrors":[],"usedEvents":[2548,2557,2566]}],"src":"127:665:12"},"id":12},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2772],"IERC721Errors":[1866],"IERC721Receiver":[2667]},"id":2773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2697,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2773,"sourceUnit":2668,"src":"144:55:13","symbolAliases":[{"foreign":{"id":2698,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"152:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2773,"sourceUnit":1914,"src":"200:69:13","symbolAliases":[{"foreign":{"id":2700,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"208:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"271:159:13","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2772,"linearizedBaseContracts":[2772],"name":"ERC721Utils","nameLocation":"439:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2770,"nodeType":"Block","src":"1159:758:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"1173:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:13","memberName":"code","nodeType":"MemberAccess","src":"1173:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:13","memberName":"length","nodeType":"MemberAccess","src":"1173:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"1169:742:13","trueBody":{"id":2768,"nodeType":"Block","src":"1193:718:13","statements":[{"clauses":[{"block":{"id":2746,"nodeType":"Block","src":"1303:214:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1325:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2734,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1335:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2667_$","typeString":"type(contract IERC721Receiver)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"1335:32:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:13","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2745,"nodeType":"IfStatement","src":"1321:182:13","trueBody":{"id":2744,"nodeType":"Block","src":"1378:125:13","statements":[{"errorCall":{"arguments":[{"id":2741,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"1481:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2738,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1445:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$1866_$","typeString":"type(contract IERC721Errors)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":1848,"src":"1445:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2743,"nodeType":"RevertStatement","src":"1438:46:13"}]}}]},"errorName":"","id":2747,"nodeType":"TryCatchClause","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"retval","nameLocation":"1295:6:13","nodeType":"VariableDeclaration","scope":2747,"src":"1288:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2730,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:13"},"src":"1279:238:13"},{"block":{"id":2765,"nodeType":"Block","src":"1546:355:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2751,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"1568:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:13","memberName":"length","nodeType":"MemberAccess","src":"1568:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2763,"nodeType":"Block","src":"1736:151:13","statements":[{"AST":{"nativeSrc":"1783:86:13","nodeType":"YulBlock","src":"1783:86:13","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1820:2:13","nodeType":"YulLiteral","src":"1820:2:13","type":"","value":"32"},{"name":"reason","nativeSrc":"1824:6:13","nodeType":"YulIdentifier","src":"1824:6:13"}],"functionName":{"name":"add","nativeSrc":"1816:3:13","nodeType":"YulIdentifier","src":"1816:3:13"},"nativeSrc":"1816:15:13","nodeType":"YulFunctionCall","src":"1816:15:13"},{"arguments":[{"name":"reason","nativeSrc":"1839:6:13","nodeType":"YulIdentifier","src":"1839:6:13"}],"functionName":{"name":"mload","nativeSrc":"1833:5:13","nodeType":"YulIdentifier","src":"1833:5:13"},"nativeSrc":"1833:13:13","nodeType":"YulFunctionCall","src":"1833:13:13"}],"functionName":{"name":"revert","nativeSrc":"1809:6:13","nodeType":"YulIdentifier","src":"1809:6:13"},"nativeSrc":"1809:38:13","nodeType":"YulFunctionCall","src":"1809:38:13"},"nativeSrc":"1809:38:13","nodeType":"YulExpressionStatement","src":"1809:38:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2749,"isOffset":false,"isSlot":false,"src":"1824:6:13","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"1839:6:13","valueSize":1}],"flags":["memory-safe"],"id":2762,"nodeType":"InlineAssembly","src":"1758:111:13"}]},"id":2764,"nodeType":"IfStatement","src":"1564:323:13","trueBody":{"id":2761,"nodeType":"Block","src":"1588:142:13","statements":[{"errorCall":{"arguments":[{"id":2758,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"1708:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2755,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1672:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$1866_$","typeString":"type(contract IERC721Errors)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":1848,"src":"1672:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2760,"nodeType":"RevertStatement","src":"1665:46:13"}]}}]},"errorName":"","id":2766,"nodeType":"TryCatchClause","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"reason","nameLocation":"1538:6:13","nodeType":"VariableDeclaration","scope":2766,"src":"1525:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2748,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:13"},"src":"1518:383:13"}],"externalCall":{"arguments":[{"id":2725,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1248:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2726,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"1258:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"1264:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"1273:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"1227:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2721,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1211:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2667_$","typeString":"type(contract IERC721Receiver)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2667","typeString":"contract IERC721Receiver"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"1211:36:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:13","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2767,"nodeType":"TryStatement","src":"1207:694:13"}]}}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"457:531:13","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:13","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"operator","nameLocation":"1041:8:13","nodeType":"VariableDeclaration","scope":2771,"src":"1033:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"from","nameLocation":"1067:4:13","nodeType":"VariableDeclaration","scope":2771,"src":"1059:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"to","nameLocation":"1089:2:13","nodeType":"VariableDeclaration","scope":2771,"src":"1081:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:13","nodeType":"VariableDeclaration","scope":2771,"src":"1101:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"data","nameLocation":"1139:4:13","nodeType":"VariableDeclaration","scope":2771,"src":"1126:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2712,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:13"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[],"src":"1159:0:13"},"scope":2772,"src":"993:924:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2773,"src":"431:1488:13","usedErrors":[],"usedEvents":[]}],"src":"118:1802:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2802]},"id":2803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2774,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2802,"linearizedBaseContracts":[2802],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2783,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":2780,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2779,"id":2782,"nodeType":"Return","src":"728:17:14"}]},"id":2784,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2784,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":2802,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":2789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2788,"id":2791,"nodeType":"Return","src":"835:15:14"}]},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2786,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":2802,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2800,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2797,"id":2799,"nodeType":"Return","src":"945:8:14"}]},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":2802,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2803,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2854]},"id":2855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2804,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2854,"linearizedBaseContracts":[2854],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":2809,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":2854,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":2813,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":2854,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":2817,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":2854,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":2821,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":2854,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":2825,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":2854,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":2829,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":2854,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":2833,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":2854,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":2837,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":2854,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":2841,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":2854,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":2845,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":2854,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2852,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nativeSrc":"1854:110:15","nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:15","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:15","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:15","nodeType":"YulIdentifier","src":"1868:6:15"},"nativeSrc":"1868:24:15","nodeType":"YulFunctionCall","src":"1868:24:15"},"nativeSrc":"1868:24:15","nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:15","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:15","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:15","nodeType":"YulIdentifier","src":"1905:6:15"},"nativeSrc":"1905:18:15","nodeType":"YulFunctionCall","src":"1905:18:15"},"nativeSrc":"1905:18:15","nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:15","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:15","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:15","nodeType":"YulIdentifier","src":"1936:6:15"},"nativeSrc":"1936:18:15","nodeType":"YulFunctionCall","src":"1936:18:15"},"nativeSrc":"1936:18:15","nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2848,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":2851,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2853,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":2853,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":2854,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2855,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5889],"SafeCast":[7654],"SignedMath":[7798],"Strings":[4256]},"id":4257,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2856,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4257,"sourceUnit":5890,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2857,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4257,"sourceUnit":7655,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2859,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4257,"sourceUnit":7799,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2861,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2863,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":4256,"linearizedBaseContracts":[4256],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2865,"libraryName":{"id":2864,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7654,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2868,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":4256,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2866,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2871,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":4256,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2869,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2907,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:16","nodeType":"VariableDeclaration","scope":4256,"src":"456:302:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:16","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:16","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:16","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:16","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:16","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"778:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2914,"name":"StringsInsufficientHexLength","nameLocation":"870:28:16","nodeType":"ErrorDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"value","nameLocation":"907:5:16","nodeType":"VariableDeclaration","scope":2914,"src":"899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"length","nameLocation":"922:6:16","nodeType":"VariableDeclaration","scope":2914,"src":"914:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:16"},"src":"864:66:16"},{"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"936:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2917,"name":"StringsInvalidChar","nameLocation":"1055:18:16","nodeType":"ErrorDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[],"src":"1073:2:16"},"src":"1049:27:16"},{"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"1082:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2920,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:16","nodeType":"ErrorDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[],"src":"1204:2:16"},"src":"1171:36:16"},{"body":{"id":2967,"nodeType":"Block","src":"1379:561:16","statements":[{"id":2966,"nodeType":"UncheckedBlock","src":"1389:545:16","statements":[{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"length","nameLocation":"1421:6:16","nodeType":"VariableDeclaration","scope":2966,"src":"1413:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2936,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"1441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2930,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"1430:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5889_$","typeString":"type(library Math)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5721,"src":"1430:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:16"},{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:16","nodeType":"VariableDeclaration","scope":2966,"src":"1465:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2937,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2943,"initialValue":{"arguments":[{"id":2941,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"1499:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2939,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:16"},{"assignments":[2945],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:16","nodeType":"VariableDeclaration","scope":2966,"src":"1520:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2946,"nodeType":"VariableDeclarationStatement","src":"1520:11:16"},{"AST":{"nativeSrc":"1570:67:16","nodeType":"YulBlock","src":"1570:67:16","statements":[{"nativeSrc":"1588:35:16","nodeType":"YulAssignment","src":"1588:35:16","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:16","nodeType":"YulIdentifier","src":"1599:6:16"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:16","nodeType":"YulLiteral","src":"1611:2:16","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:16","nodeType":"YulIdentifier","src":"1615:6:16"}],"functionName":{"name":"add","nativeSrc":"1607:3:16","nodeType":"YulIdentifier","src":"1607:3:16"},"nativeSrc":"1607:15:16","nodeType":"YulFunctionCall","src":"1607:15:16"}],"functionName":{"name":"add","nativeSrc":"1595:3:16","nodeType":"YulIdentifier","src":"1595:3:16"},"nativeSrc":"1595:28:16","nodeType":"YulFunctionCall","src":"1595:28:16"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:16","nodeType":"YulIdentifier","src":"1588:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2938,"isOffset":false,"isSlot":false,"src":"1599:6:16","valueSize":1},{"declaration":2929,"isOffset":false,"isSlot":false,"src":"1615:6:16","valueSize":1},{"declaration":2945,"isOffset":false,"isSlot":false,"src":"1588:3:16","valueSize":1}],"flags":["memory-safe"],"id":2947,"nodeType":"InlineAssembly","src":"1545:92:16"},{"body":{"id":2962,"nodeType":"Block","src":"1663:234:16","statements":[{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:16","subExpression":{"id":2949,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"1681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"1681:5:16"},{"AST":{"nativeSrc":"1729:86:16","nodeType":"YulBlock","src":"1729:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:16","nodeType":"YulIdentifier","src":"1759:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:16","nodeType":"YulIdentifier","src":"1773:5:16"},{"kind":"number","nativeSrc":"1780:2:16","nodeType":"YulLiteral","src":"1780:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:16","nodeType":"YulIdentifier","src":"1769:3:16"},"nativeSrc":"1769:14:16","nodeType":"YulFunctionCall","src":"1769:14:16"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:16","nodeType":"YulIdentifier","src":"1785:10:16"}],"functionName":{"name":"byte","nativeSrc":"1764:4:16","nodeType":"YulIdentifier","src":"1764:4:16"},"nativeSrc":"1764:32:16","nodeType":"YulFunctionCall","src":"1764:32:16"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:16","nodeType":"YulIdentifier","src":"1751:7:16"},"nativeSrc":"1751:46:16","nodeType":"YulFunctionCall","src":"1751:46:16"},"nativeSrc":"1751:46:16","nodeType":"YulExpressionStatement","src":"1751:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2868,"isOffset":false,"isSlot":false,"src":"1785:10:16","valueSize":1},{"declaration":2945,"isOffset":false,"isSlot":false,"src":"1759:3:16","valueSize":1},{"declaration":2923,"isOffset":false,"isSlot":false,"src":"1773:5:16","valueSize":1}],"flags":["memory-safe"],"id":2952,"nodeType":"InlineAssembly","src":"1704:111:16"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"1832:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"1832:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"1865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2961,"nodeType":"IfStatement","src":"1861:21:16","trueBody":{"id":2960,"nodeType":"Break","src":"1877:5:16"}}]},"condition":{"hexValue":"74727565","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2963,"nodeType":"WhileStatement","src":"1650:247:16"},{"expression":{"id":2964,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1917:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2927,"id":2965,"nodeType":"Return","src":"1910:13:16"}]}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"1213:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:16","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"value","nameLocation":"1334:5:16","nodeType":"VariableDeclaration","scope":2968,"src":"1326:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:16"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2968,"src":"1364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2925,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:16"},"scope":4256,"src":"1308:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"2116:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2147:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:16","trueExpression":{"hexValue":"2d","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2193:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2986,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"2178:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7798_$","typeString":"type(library SignedMath)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7797,"src":"2178:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2985,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2169:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2976,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:16","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2975,"id":2992,"nodeType":"Return","src":"2126:75:16"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"1946:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:16","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"value","nameLocation":"2071:5:16","nodeType":"VariableDeclaration","scope":2994,"src":"2064:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2970,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:16"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2994,"src":"2101:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2973,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:16"},"scope":4256,"src":"2040:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"2387:100:16","statements":[{"id":3012,"nodeType":"UncheckedBlock","src":"2397:84:16","statements":[{"expression":{"arguments":[{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"2440:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"2459:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3004,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"2447:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5889_$","typeString":"type(library Math)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5832,"src":"2447:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3002,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3014,3097,3117],"referencedDeclaration":3097,"src":"2428:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3001,"id":3011,"nodeType":"Return","src":"2421:49:16"}]}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"2214:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:16","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"value","nameLocation":"2342:5:16","nodeType":"VariableDeclaration","scope":3014,"src":"2334:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:16"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"2372:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2999,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:16"},"scope":4256,"src":"2313:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3096,"nodeType":"Block","src":"2700:435:16","statements":[{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:16","nodeType":"VariableDeclaration","scope":3096,"src":"2710:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"id":3026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"2731:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:16"},{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:16","nodeType":"VariableDeclaration","scope":3096,"src":"2746:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3038,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3033,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"2782:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3030,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:16"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3039,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2803:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3041,"indexExpression":{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3044,"nodeType":"ExpressionStatement","src":"2803:15:16"},{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3045,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2828:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3047,"indexExpression":{"hexValue":"31","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3050,"nodeType":"ExpressionStatement","src":"2828:15:16"},{"body":{"id":3079,"nodeType":"Block","src":"2898:95:16","statements":[{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3065,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3067,"indexExpression":{"id":3066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3068,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2924:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3072,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"2935:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3074,"nodeType":"ExpressionStatement","src":"2912:40:16"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"2966:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3078,"nodeType":"ExpressionStatement","src":"2966:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2886:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"initializationExpression":{"assignments":[3052],"declarations":[{"constant":false,"id":3052,"mutability":"mutable","name":"i","nameLocation":"2866:1:16","nodeType":"VariableDeclaration","scope":3080,"src":"2858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3054,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"2874:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:16","subExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2895:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ExpressionStatement","src":"2893:3:16"},"nodeType":"ForStatement","src":"2853:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"3006:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3090,"nodeType":"IfStatement","src":"3002:96:16","trueBody":{"id":3089,"nodeType":"Block","src":"3023:75:16","statements":[{"errorCall":{"arguments":[{"id":3085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"3073:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3086,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"3080:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3084,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"3044:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3088,"nodeType":"RevertStatement","src":"3037:50:16"}]}},{"expression":{"arguments":[{"id":3093,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3121:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3091,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:16","typeDescriptions":{}}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3023,"id":3095,"nodeType":"Return","src":"3107:21:16"}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"2493:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3097,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:16","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"value","nameLocation":"2639:5:16","nodeType":"VariableDeclaration","scope":3097,"src":"2631:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"length","nameLocation":"2654:6:16","nodeType":"VariableDeclaration","scope":3097,"src":"2646:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:16"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3097,"src":"2685:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3021,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:16"},"scope":4256,"src":"2610:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3116,"nodeType":"Block","src":"3367:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3110,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3412:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3108,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:16","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:16","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3113,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3420:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3105,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3014,3097,3117],"referencedDeclaration":3097,"src":"3384:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3104,"id":3115,"nodeType":"Return","src":"3377:58:16"}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"3141:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:16","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"addr","nameLocation":"3323:4:16","nodeType":"VariableDeclaration","scope":3117,"src":"3315:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:16"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"3352:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3102,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:16"},"scope":4256,"src":"3294:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"3699:642:16","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:16","nodeType":"VariableDeclaration","scope":3181,"src":"3709:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3125,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3133,"initialValue":{"arguments":[{"arguments":[{"id":3130,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"3749:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3129,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3014,3097,3117],"referencedDeclaration":3117,"src":"3737:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3127,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:16","typeDescriptions":{}}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:16"},{"assignments":[3135],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:16","nodeType":"VariableDeclaration","scope":3181,"src":"3840:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3136,"nodeType":"VariableDeclarationStatement","src":"3840:17:16"},{"AST":{"nativeSrc":"3892:78:16","nodeType":"YulBlock","src":"3892:78:16","statements":[{"nativeSrc":"3906:54:16","nodeType":"YulAssignment","src":"3906:54:16","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:16","nodeType":"YulLiteral","src":"3923:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:16","nodeType":"YulIdentifier","src":"3941:6:16"},{"kind":"number","nativeSrc":"3949:4:16","nodeType":"YulLiteral","src":"3949:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:16","nodeType":"YulIdentifier","src":"3937:3:16"},"nativeSrc":"3937:17:16","nodeType":"YulFunctionCall","src":"3937:17:16"},{"kind":"number","nativeSrc":"3956:2:16","nodeType":"YulLiteral","src":"3956:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:16","nodeType":"YulIdentifier","src":"3927:9:16"},"nativeSrc":"3927:32:16","nodeType":"YulFunctionCall","src":"3927:32:16"}],"functionName":{"name":"shr","nativeSrc":"3919:3:16","nodeType":"YulIdentifier","src":"3919:3:16"},"nativeSrc":"3919:41:16","nodeType":"YulFunctionCall","src":"3919:41:16"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:16","nodeType":"YulIdentifier","src":"3906:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3126,"isOffset":false,"isSlot":false,"src":"3941:6:16","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"3906:9:16","valueSize":1}],"flags":["memory-safe"],"id":3137,"nodeType":"InlineAssembly","src":"3867:103:16"},{"body":{"id":3174,"nodeType":"Block","src":"4013:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"4119:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3155,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4148:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3157,"indexExpression":{"id":3156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3153,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:16","typeDescriptions":{}}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3169,"nodeType":"IfStatement","src":"4115:150:16","trueBody":{"id":3168,"nodeType":"Block","src":"4165:100:16","statements":[{"expression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3162,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4233:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3164,"indexExpression":{"id":3163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4240:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3167,"nodeType":"ExpressionStatement","src":"4233:17:16"}]}},{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3170,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"4278:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3173,"nodeType":"ExpressionStatement","src":"4278:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4001:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3175,"initializationExpression":{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"i","nameLocation":"3993:1:16","nodeType":"VariableDeclaration","scope":3175,"src":"3985:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3141,"initialValue":{"hexValue":"3431","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:16","subExpression":{"id":3145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4010:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"4008:3:16"},"nodeType":"ForStatement","src":"3980:324:16"},{"expression":{"arguments":[{"id":3178,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4327:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3176,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:16","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3124,"id":3180,"nodeType":"Return","src":"4313:21:16"}]},"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"3448:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:16","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"addr","nameLocation":"3655:4:16","nodeType":"VariableDeclaration","scope":3182,"src":"3647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:16"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"3684:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3122,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:16"},"scope":4256,"src":"3618:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"4496:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"4519:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3192,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:16","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:16","memberName":"length","nodeType":"MemberAccess","src":"4513:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"4538:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3197,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:16","typeDescriptions":{}}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:16","memberName":"length","nodeType":"MemberAccess","src":"4532:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"4567:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3204,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:16","typeDescriptions":{}}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3203,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"4590:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3210,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:16","typeDescriptions":{}}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3209,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3191,"id":3217,"nodeType":"Return","src":"4506:87:16"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"4347:66:16","text":" @dev Returns true if the two strings are equal."},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:16","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"a","nameLocation":"4447:1:16","nodeType":"VariableDeclaration","scope":3219,"src":"4433:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3184,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"b","nameLocation":"4464:1:16","nodeType":"VariableDeclaration","scope":3219,"src":"4450:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3186,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:16"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"4490:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3189,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:16"},"scope":4256,"src":"4418:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"4897:64:16","statements":[{"expression":{"arguments":[{"id":3228,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4924:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3232,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3230,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:16","typeDescriptions":{}}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:16","memberName":"length","nodeType":"MemberAccess","src":"4934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3227,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3238,3269],"referencedDeclaration":3269,"src":"4914:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3226,"id":3236,"nodeType":"Return","src":"4907:47:16"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"4606:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:16","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"input","nameLocation":"4858:5:16","nodeType":"VariableDeclaration","scope":3238,"src":"4844:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3221,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:16"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"4888:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:16"},"scope":4256,"src":"4825:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3268,"nodeType":"Block","src":"5366:153:16","statements":[{"assignments":[3251,3253],"declarations":[{"constant":false,"id":3251,"mutability":"mutable","name":"success","nameLocation":"5382:7:16","nodeType":"VariableDeclaration","scope":3268,"src":"5377:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"value","nameLocation":"5399:5:16","nodeType":"VariableDeclaration","scope":3268,"src":"5391:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3259,"initialValue":{"arguments":[{"id":3255,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"5421:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3256,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5428:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3257,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"5435:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3254,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3290,3327],"referencedDeclaration":3327,"src":"5408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:16"},{"condition":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:16","subExpression":{"id":3260,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5454:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3265,"nodeType":"IfStatement","src":"5449:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3262,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"5470:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3264,"nodeType":"RevertStatement","src":"5463:27:16"}},{"expression":{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"5507:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3249,"id":3267,"nodeType":"Return","src":"5500:12:16"}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"4967:294:16","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:16","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"input","nameLocation":"5299:5:16","nodeType":"VariableDeclaration","scope":3269,"src":"5285:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3240,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"begin","nameLocation":"5314:5:16","nodeType":"VariableDeclaration","scope":3269,"src":"5306:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"end","nameLocation":"5329:3:16","nodeType":"VariableDeclaration","scope":3269,"src":"5321:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:16"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"5357:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:16"},"scope":4256,"src":"5266:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"5840:83:16","statements":[{"expression":{"arguments":[{"id":3280,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5886:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3284,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5902:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3282,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:16","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:16","memberName":"length","nodeType":"MemberAccess","src":"5896:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3279,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"5857:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3278,"id":3288,"nodeType":"Return","src":"5850:66:16"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"5525:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:16","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"input","nameLocation":"5781:5:16","nodeType":"VariableDeclaration","scope":3290,"src":"5767:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3271,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:16"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"success","nameLocation":"5816:7:16","nodeType":"VariableDeclaration","scope":3290,"src":"5811:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3274,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"value","nameLocation":"5833:5:16","nodeType":"VariableDeclaration","scope":3290,"src":"5825:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:16"},"scope":4256,"src":"5745:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3326,"nodeType":"Block","src":"6325:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"6339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3307,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"6351:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3305,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:16","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:16","memberName":"length","nodeType":"MemberAccess","src":"6345:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6368:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3312,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"6376:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3319,"nodeType":"IfStatement","src":"6335:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3303,"id":3318,"nodeType":"Return","src":"6381:17:16"}},{"expression":{"arguments":[{"id":3321,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"6444:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3322,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6451:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"6458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3320,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6415:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3303,"id":3325,"nodeType":"Return","src":"6408:54:16"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"5929:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3327,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:16","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"input","nameLocation":"6217:5:16","nodeType":"VariableDeclaration","scope":3327,"src":"6203:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3292,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"begin","nameLocation":"6240:5:16","nodeType":"VariableDeclaration","scope":3327,"src":"6232:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"end","nameLocation":"6263:3:16","nodeType":"VariableDeclaration","scope":3327,"src":"6255:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:16"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"success","nameLocation":"6301:7:16","nodeType":"VariableDeclaration","scope":3327,"src":"6296:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3299,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"value","nameLocation":"6318:5:16","nodeType":"VariableDeclaration","scope":3327,"src":"6310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:16"},"scope":4256,"src":"6172:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"6872:347:16","statements":[{"assignments":[3342],"declarations":[{"constant":false,"id":3342,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:16","nodeType":"VariableDeclaration","scope":3396,"src":"6882:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3341,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3347,"initialValue":{"arguments":[{"id":3345,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"6910:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3343,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:16","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:16"},{"assignments":[3349],"declarations":[{"constant":false,"id":3349,"mutability":"mutable","name":"result","nameLocation":"6935:6:16","nodeType":"VariableDeclaration","scope":3396,"src":"6927:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3351,"initialValue":{"hexValue":"30","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:16"},{"body":{"id":3390,"nodeType":"Block","src":"6993:189:16","statements":[{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"chr","nameLocation":"7013:3:16","nodeType":"VariableDeclaration","scope":3390,"src":"7007:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3362,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3373,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3368,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"7062:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3367,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"7039:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3365,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:16","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3364,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"7019:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"7092:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3381,"nodeType":"IfStatement","src":"7088:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3340,"id":3380,"nodeType":"Return","src":"7101:17:16"}},{"expression":{"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7132:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3385,"nodeType":"ExpressionStatement","src":"7132:12:16"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7158:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3387,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"7168:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"7158:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"6979:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3357,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"6983:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3391,"initializationExpression":{"assignments":[3353],"declarations":[{"constant":false,"id":3353,"mutability":"mutable","name":"i","nameLocation":"6968:1:16","nodeType":"VariableDeclaration","scope":3391,"src":"6960:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3355,"initialValue":{"id":3354,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"6972:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:16","subExpression":{"id":3359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"6990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"nodeType":"ExpressionStatement","src":"6988:3:16"},"nodeType":"ForStatement","src":"6955:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3340,"id":3395,"nodeType":"Return","src":"7191:21:16"}]},"documentation":{"id":3328,"nodeType":"StructuredDocumentation","src":"6475:224:16","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:16","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"input","nameLocation":"6765:5:16","nodeType":"VariableDeclaration","scope":3397,"src":"6751:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3329,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"begin","nameLocation":"6788:5:16","nodeType":"VariableDeclaration","scope":3397,"src":"6780:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"end","nameLocation":"6811:3:16","nodeType":"VariableDeclaration","scope":3397,"src":"6803:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:16"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"success","nameLocation":"6848:7:16","nodeType":"VariableDeclaration","scope":3397,"src":"6843:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3336,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"value","nameLocation":"6865:5:16","nodeType":"VariableDeclaration","scope":3397,"src":"6857:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:16"},"scope":4256,"src":"6704:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3415,"nodeType":"Block","src":"7516:63:16","statements":[{"expression":{"arguments":[{"id":3406,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"7542:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3410,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"7558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3408,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:16","typeDescriptions":{}}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:16","memberName":"length","nodeType":"MemberAccess","src":"7552:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3405,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3416,3447],"referencedDeclaration":3447,"src":"7533:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3404,"id":3414,"nodeType":"Return","src":"7526:46:16"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"7225:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3416,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:16","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"input","nameLocation":"7478:5:16","nodeType":"VariableDeclaration","scope":3416,"src":"7464:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3399,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:16"},"returnParameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3416,"src":"7508:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3402,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:16"},"scope":4256,"src":"7446:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"7984:151:16","statements":[{"assignments":[3429,3431],"declarations":[{"constant":false,"id":3429,"mutability":"mutable","name":"success","nameLocation":"8000:7:16","nodeType":"VariableDeclaration","scope":3446,"src":"7995:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3428,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"value","nameLocation":"8016:5:16","nodeType":"VariableDeclaration","scope":3446,"src":"8009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3430,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3437,"initialValue":{"arguments":[{"id":3433,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"8037:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3434,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"8044:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"8051:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3432,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3468,3510],"referencedDeclaration":3510,"src":"8025:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:16"},{"condition":{"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:16","subExpression":{"id":3438,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"8070:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3443,"nodeType":"IfStatement","src":"8065:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3440,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"8086:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3442,"nodeType":"RevertStatement","src":"8079:27:16"}},{"expression":{"id":3444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"8123:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3427,"id":3445,"nodeType":"Return","src":"8116:12:16"}]},"documentation":{"id":3417,"nodeType":"StructuredDocumentation","src":"7585:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:16","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"input","nameLocation":"7918:5:16","nodeType":"VariableDeclaration","scope":3447,"src":"7904:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3418,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"begin","nameLocation":"7933:5:16","nodeType":"VariableDeclaration","scope":3447,"src":"7925:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"end","nameLocation":"7948:3:16","nodeType":"VariableDeclaration","scope":3447,"src":"7940:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:16"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"7976:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3425,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:16"},"scope":4256,"src":"7886:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"8526:82:16","statements":[{"expression":{"arguments":[{"id":3458,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8571:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3462,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8587:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3460,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:16","typeDescriptions":{}}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:16","memberName":"length","nodeType":"MemberAccess","src":"8581:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3457,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"8543:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3456,"id":3466,"nodeType":"Return","src":"8536:65:16"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"8141:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:16","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"input","nameLocation":"8468:5:16","nodeType":"VariableDeclaration","scope":3468,"src":"8454:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3449,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:16"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"success","nameLocation":"8503:7:16","nodeType":"VariableDeclaration","scope":3468,"src":"8498:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3452,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"value","nameLocation":"8519:5:16","nodeType":"VariableDeclaration","scope":3468,"src":"8512:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3454,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:16"},"scope":4256,"src":"8433:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3473,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:16","nodeType":"VariableDeclaration","scope":4256,"src":"8614:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3509,"nodeType":"Block","src":"9130:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"9144:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3490,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"9156:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3488,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:16","typeDescriptions":{}}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:16","memberName":"length","nodeType":"MemberAccess","src":"9150:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"9173:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3495,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"9181:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3502,"nodeType":"IfStatement","src":"9140:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3486,"id":3501,"nodeType":"Return","src":"9186:17:16"}},{"expression":{"arguments":[{"id":3504,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"9248:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3505,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"9255:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3506,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"9262:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3503,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"9220:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3486,"id":3508,"nodeType":"Return","src":"9213:53:16"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"8671:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:16","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"input","nameLocation":"9023:5:16","nodeType":"VariableDeclaration","scope":3510,"src":"9009:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3475,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"begin","nameLocation":"9046:5:16","nodeType":"VariableDeclaration","scope":3510,"src":"9038:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"end","nameLocation":"9069:3:16","nodeType":"VariableDeclaration","scope":3510,"src":"9061:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:16"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"success","nameLocation":"9107:7:16","nodeType":"VariableDeclaration","scope":3510,"src":"9102:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3482,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"value","nameLocation":"9123:5:16","nodeType":"VariableDeclaration","scope":3510,"src":"9116:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3484,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:16"},"scope":4256,"src":"8979:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"9673:812:16","statements":[{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:16","nodeType":"VariableDeclaration","scope":3630,"src":"9683:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3524,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3530,"initialValue":{"arguments":[{"id":3528,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"9711:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3526,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:16","typeDescriptions":{}}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:16"},{"assignments":[3532],"declarations":[{"constant":false,"id":3532,"mutability":"mutable","name":"sign","nameLocation":"9781:4:16","nodeType":"VariableDeclaration","scope":3630,"src":"9774:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3531,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3548,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"9788:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3534,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"9797:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"9845:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3544,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"9853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"9822:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3540,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:16","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3536,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:16","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:16"},{"assignments":[3550],"declarations":[{"constant":false,"id":3550,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:16","nodeType":"VariableDeclaration","scope":3630,"src":"9941:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3549,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3557,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3551,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"9961:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3552,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:16","typeDescriptions":{}}},"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:16"},{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:16","nodeType":"VariableDeclaration","scope":3630,"src":"9990:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3558,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3566,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"10010:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3561,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:16","typeDescriptions":{}}},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:16"},{"assignments":[3568],"declarations":[{"constant":false,"id":3568,"mutability":"mutable","name":"offset","nameLocation":"10047:6:16","nodeType":"VariableDeclaration","scope":3630,"src":"10039:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3575,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"10057:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3570,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"10073:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"10056:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:16"},{"assignments":[3577,3579],"declarations":[{"constant":false,"id":3577,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:16","nodeType":"VariableDeclaration","scope":3630,"src":"10107:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3576,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:16","nodeType":"VariableDeclaration","scope":3630,"src":"10124:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3587,"initialValue":{"arguments":[{"id":3581,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"10157:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"10164:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3583,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"10172:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3585,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"10180:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3580,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3290,3327],"referencedDeclaration":3327,"src":"10144:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"10199:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"10213:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3590,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"10224:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"10341:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3609,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"10355:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"10371:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3612,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"10383:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3523,"id":3627,"nodeType":"Return","src":"10461:17:16"},"id":3628,"nodeType":"IfStatement","src":"10337:141:16","trueBody":{"id":3623,"nodeType":"Block","src":"10399:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3617,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:16","memberName":"min","nodeType":"MemberAccess","src":"10427:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3523,"id":3622,"nodeType":"Return","src":"10413:31:16"}]}},"id":3629,"nodeType":"IfStatement","src":"10195:283:16","trueBody":{"id":3607,"nodeType":"Block","src":"10240:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3594,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"10268:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3602,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"10310:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3600,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:16","typeDescriptions":{}}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:16","trueExpression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:16","subExpression":{"arguments":[{"id":3597,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"10291:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3595,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:16","typeDescriptions":{}}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3523,"id":3606,"nodeType":"Return","src":"10254:66:16"}]}}]},"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"9279:223:16","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:16","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"input","nameLocation":"9567:5:16","nodeType":"VariableDeclaration","scope":3631,"src":"9553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3512,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"begin","nameLocation":"9590:5:16","nodeType":"VariableDeclaration","scope":3631,"src":"9582:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"end","nameLocation":"9613:3:16","nodeType":"VariableDeclaration","scope":3631,"src":"9605:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:16"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"success","nameLocation":"9650:7:16","nodeType":"VariableDeclaration","scope":3631,"src":"9645:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3519,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"value","nameLocation":"9666:5:16","nodeType":"VariableDeclaration","scope":3631,"src":"9659:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3521,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:16"},"scope":4256,"src":"9507:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3649,"nodeType":"Block","src":"10830:67:16","statements":[{"expression":{"arguments":[{"id":3640,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"10860:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3644,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"10876:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3642,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:16","typeDescriptions":{}}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:16","memberName":"length","nodeType":"MemberAccess","src":"10870:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3639,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3650,3681],"referencedDeclaration":3681,"src":"10847:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3638,"id":3648,"nodeType":"Return","src":"10840:50:16"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"10491:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:16","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"input","nameLocation":"10791:5:16","nodeType":"VariableDeclaration","scope":3650,"src":"10777:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3633,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:16"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3650,"src":"10821:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:16"},"scope":4256,"src":"10755:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3680,"nodeType":"Block","src":"11318:156:16","statements":[{"assignments":[3663,3665],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"success","nameLocation":"11334:7:16","nodeType":"VariableDeclaration","scope":3680,"src":"11329:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3662,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"11351:5:16","nodeType":"VariableDeclaration","scope":3680,"src":"11343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"arguments":[{"id":3667,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"11376:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3668,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"11383:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3669,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"11390:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3666,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3702,3739],"referencedDeclaration":3739,"src":"11360:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:16"},{"condition":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:16","subExpression":{"id":3672,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"11409:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3677,"nodeType":"IfStatement","src":"11404:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3674,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11425:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3676,"nodeType":"RevertStatement","src":"11418:27:16"}},{"expression":{"id":3678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11462:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3661,"id":3679,"nodeType":"Return","src":"11455:12:16"}]},"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"10903:307:16","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3681,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:16","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"input","nameLocation":"11251:5:16","nodeType":"VariableDeclaration","scope":3681,"src":"11237:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3652,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"begin","nameLocation":"11266:5:16","nodeType":"VariableDeclaration","scope":3681,"src":"11258:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"end","nameLocation":"11281:3:16","nodeType":"VariableDeclaration","scope":3681,"src":"11273:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:16"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3681,"src":"11309:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:16"},"scope":4256,"src":"11215:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3701,"nodeType":"Block","src":"11801:86:16","statements":[{"expression":{"arguments":[{"id":3692,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"11850:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3696,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"11866:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3694,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:16","typeDescriptions":{}}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:16","memberName":"length","nodeType":"MemberAccess","src":"11860:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3691,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"11818:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3690,"id":3700,"nodeType":"Return","src":"11811:69:16"}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"11480:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:16","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"input","nameLocation":"11742:5:16","nodeType":"VariableDeclaration","scope":3702,"src":"11728:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3683,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:16"},"returnParameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"success","nameLocation":"11777:7:16","nodeType":"VariableDeclaration","scope":3702,"src":"11772:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3686,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"value","nameLocation":"11794:5:16","nodeType":"VariableDeclaration","scope":3702,"src":"11786:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:16"},"scope":4256,"src":"11703:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3738,"nodeType":"Block","src":"12295:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"12309:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3719,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"12321:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3717,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:16","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:16","memberName":"length","nodeType":"MemberAccess","src":"12315:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"12338:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"12346:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"12305:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3715,"id":3730,"nodeType":"Return","src":"12351:17:16"}},{"expression":{"arguments":[{"id":3733,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"12417:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3734,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"12424:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3735,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"12431:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3732,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"12385:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3715,"id":3737,"nodeType":"Return","src":"12378:57:16"}]},"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"11893:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3739,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:16","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"input","nameLocation":"12187:5:16","nodeType":"VariableDeclaration","scope":3739,"src":"12173:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3704,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"begin","nameLocation":"12210:5:16","nodeType":"VariableDeclaration","scope":3739,"src":"12202:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"end","nameLocation":"12233:3:16","nodeType":"VariableDeclaration","scope":3739,"src":"12225:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:16"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"success","nameLocation":"12271:7:16","nodeType":"VariableDeclaration","scope":3739,"src":"12266:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3711,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"value","nameLocation":"12288:5:16","nodeType":"VariableDeclaration","scope":3739,"src":"12280:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:16"},"scope":4256,"src":"12139:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"12851:881:16","statements":[{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:16","nodeType":"VariableDeclaration","scope":3841,"src":"12861:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3753,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3759,"initialValue":{"arguments":[{"id":3757,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"12889:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3755,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:16","typeDescriptions":{}}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:16"},{"assignments":[3761],"declarations":[{"constant":false,"id":3761,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:16","nodeType":"VariableDeclaration","scope":3841,"src":"12943:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3760,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3781,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"12961:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12967:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3771,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"13011:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3772,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"13019:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3770,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"12988:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3768,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:16","typeDescriptions":{}}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3775,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:16","typeDescriptions":{}}},"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:16"},{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"offset","nameLocation":"13131:6:16","nodeType":"VariableDeclaration","scope":3841,"src":"13123:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3789,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3784,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"13140:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"13140:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:16"},{"assignments":[3791],"declarations":[{"constant":false,"id":3791,"mutability":"mutable","name":"result","nameLocation":"13181:6:16","nodeType":"VariableDeclaration","scope":3841,"src":"13173:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3793,"initialValue":{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:16"},{"body":{"id":3835,"nodeType":"Block","src":"13248:447:16","statements":[{"assignments":[3807],"declarations":[{"constant":false,"id":3807,"mutability":"mutable","name":"chr","nameLocation":"13268:3:16","nodeType":"VariableDeclaration","scope":3835,"src":"13262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3806,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3817,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"13317:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"13325:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"13294:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3809,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:16","typeDescriptions":{}}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3808,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"13274:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"13347:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3825,"nodeType":"IfStatement","src":"13343:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3752,"id":3824,"nodeType":"Return","src":"13357:17:16"}},{"expression":{"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"13388:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3829,"nodeType":"ExpressionStatement","src":"13388:12:16"},{"id":3834,"nodeType":"UncheckedBlock","src":"13414:271:16","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"13657:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3831,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"13667:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"13657:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"13234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3801,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"13238:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"initializationExpression":{"assignments":[3795],"declarations":[{"constant":false,"id":3795,"mutability":"mutable","name":"i","nameLocation":"13214:1:16","nodeType":"VariableDeclaration","scope":3836,"src":"13206:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3799,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"13218:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3797,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"13226:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:16","subExpression":{"id":3803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"13245:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3805,"nodeType":"ExpressionStatement","src":"13243:3:16"},"nodeType":"ForStatement","src":"13201:494:16"},{"expression":{"components":[{"hexValue":"74727565","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"13718:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3752,"id":3840,"nodeType":"Return","src":"13704:21:16"}]},"documentation":{"id":3740,"nodeType":"StructuredDocumentation","src":"12448:227:16","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:16","nodeType":"FunctionDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"input","nameLocation":"12744:5:16","nodeType":"VariableDeclaration","scope":3842,"src":"12730:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3741,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"begin","nameLocation":"12767:5:16","nodeType":"VariableDeclaration","scope":3842,"src":"12759:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3746,"mutability":"mutable","name":"end","nameLocation":"12790:3:16","nodeType":"VariableDeclaration","scope":3842,"src":"12782:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:16"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"success","nameLocation":"12827:7:16","nodeType":"VariableDeclaration","scope":3842,"src":"12822:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3748,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"value","nameLocation":"12844:5:16","nodeType":"VariableDeclaration","scope":3842,"src":"12836:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:16"},"scope":4256,"src":"12680:1052:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3860,"nodeType":"Block","src":"14030:67:16","statements":[{"expression":{"arguments":[{"id":3851,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14060:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3855,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14076:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3853,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:16","typeDescriptions":{}}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:16","memberName":"length","nodeType":"MemberAccess","src":"14070:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3850,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3861,3892],"referencedDeclaration":3892,"src":"14047:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3849,"id":3859,"nodeType":"Return","src":"14040:50:16"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"13738:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3861,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":3861,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3844,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:16"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"14021:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:16"},"scope":4256,"src":"13955:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3891,"nodeType":"Block","src":"14470:165:16","statements":[{"assignments":[3874,3876],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"success","nameLocation":"14486:7:16","nodeType":"VariableDeclaration","scope":3891,"src":"14481:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3873,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"value","nameLocation":"14503:5:16","nodeType":"VariableDeclaration","scope":3891,"src":"14495:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3882,"initialValue":{"arguments":[{"id":3878,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"14528:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3879,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"14535:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3880,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"14542:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3877,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3913,4017],"referencedDeclaration":4017,"src":"14512:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:16"},{"condition":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:16","subExpression":{"id":3883,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"14561:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3888,"nodeType":"IfStatement","src":"14556:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3885,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"14577:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3887,"nodeType":"RevertStatement","src":"14570:36:16"}},{"expression":{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"14623:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3872,"id":3890,"nodeType":"Return","src":"14616:12:16"}]},"documentation":{"id":3862,"nodeType":"StructuredDocumentation","src":"14103:259:16","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3892,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:16","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"input","nameLocation":"14403:5:16","nodeType":"VariableDeclaration","scope":3892,"src":"14389:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3863,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"begin","nameLocation":"14418:5:16","nodeType":"VariableDeclaration","scope":3892,"src":"14410:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"end","nameLocation":"14433:3:16","nodeType":"VariableDeclaration","scope":3892,"src":"14425:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:16"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3892,"src":"14461:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3870,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:16"},"scope":4256,"src":"14367:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3912,"nodeType":"Block","src":"14942:70:16","statements":[{"expression":{"arguments":[{"id":3903,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"14975:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3907,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"14991:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3905,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:16","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:16","memberName":"length","nodeType":"MemberAccess","src":"14985:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3902,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3913,4017],"referencedDeclaration":4017,"src":"14959:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3901,"id":3911,"nodeType":"Return","src":"14952:53:16"}]},"documentation":{"id":3893,"nodeType":"StructuredDocumentation","src":"14641:198:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:16","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"input","nameLocation":"14883:5:16","nodeType":"VariableDeclaration","scope":3913,"src":"14869:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3894,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:16"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"success","nameLocation":"14918:7:16","nodeType":"VariableDeclaration","scope":3913,"src":"14913:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3897,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"value","nameLocation":"14935:5:16","nodeType":"VariableDeclaration","scope":3913,"src":"14927:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:16"},"scope":4256,"src":"14844:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4016,"nodeType":"Block","src":"15405:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"15419:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3930,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"15431:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3928,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:16","typeDescriptions":{}}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:16","memberName":"length","nodeType":"MemberAccess","src":"15425:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"15448:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3935,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"15456:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3945,"nodeType":"IfStatement","src":"15415:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:16","typeDescriptions":{}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3926,"id":3944,"nodeType":"Return","src":"15461:26:16"}},{"assignments":[3947],"declarations":[{"constant":false,"id":3947,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:16","nodeType":"VariableDeclaration","scope":4016,"src":"15498:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3946,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3970,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"15516:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"15522:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3959,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"15572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3957,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:16","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3961,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"15580:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3956,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"15543:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3954,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:16","typeDescriptions":{}}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3964,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:16","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:16"},{"assignments":[3972],"declarations":[{"constant":false,"id":3972,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:16","nodeType":"VariableDeclaration","scope":4016,"src":"15684:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3980,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3974,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"15714:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"15714:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"15801:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3982,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"15807:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3984,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"15816:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4014,"nodeType":"Block","src":"16081:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4008,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:16","typeDescriptions":{}}},"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3926,"id":4013,"nodeType":"Return","src":"16095:26:16"}]},"id":4015,"nodeType":"IfStatement","src":"15797:335:16","trueBody":{"id":4006,"nodeType":"Block","src":"15832:243:16","statements":[{"assignments":[3987,3989],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"s","nameLocation":"15953:1:16","nodeType":"VariableDeclaration","scope":4006,"src":"15948:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3986,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"v","nameLocation":"15964:1:16","nodeType":"VariableDeclaration","scope":4006,"src":"15956:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3995,"initialValue":{"arguments":[{"id":3991,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3992,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"16008:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3993,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"16015:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3990,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"15969:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:16"},{"expression":{"components":[{"id":3996,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"16041:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4001,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"16060:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3999,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:16","typeDescriptions":{}}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3997,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:16","typeDescriptions":{}}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3926,"id":4005,"nodeType":"Return","src":"16033:31:16"}]}}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"15018:226:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4017,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:16","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"input","nameLocation":"15297:5:16","nodeType":"VariableDeclaration","scope":4017,"src":"15283:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3915,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"begin","nameLocation":"15320:5:16","nodeType":"VariableDeclaration","scope":4017,"src":"15312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"end","nameLocation":"15343:3:16","nodeType":"VariableDeclaration","scope":4017,"src":"15335:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:16"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"success","nameLocation":"15381:7:16","nodeType":"VariableDeclaration","scope":4017,"src":"15376:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3922,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"value","nameLocation":"15398:5:16","nodeType":"VariableDeclaration","scope":4017,"src":"15390:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3924,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:16"},"scope":4256,"src":"15249:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4076,"nodeType":"Block","src":"16207:461:16","statements":[{"assignments":[4025],"declarations":[{"constant":false,"id":4025,"mutability":"mutable","name":"value","nameLocation":"16223:5:16","nodeType":"VariableDeclaration","scope":4076,"src":"16217:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4024,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4030,"initialValue":{"arguments":[{"id":4028,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"16237:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4026,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:16","typeDescriptions":{}}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:16"},{"id":4073,"nodeType":"UncheckedBlock","src":"16401:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16429:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16443:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16489:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16503:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16550:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16564:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4065,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4064,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:16","memberName":"max","nodeType":"MemberAccess","src":"16613:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4023,"id":4069,"nodeType":"Return","src":"16606:22:16"},"id":4070,"nodeType":"IfStatement","src":"16546:82:16","trueBody":{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16576:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4063,"nodeType":"ExpressionStatement","src":"16576:11:16"}},"id":4071,"nodeType":"IfStatement","src":"16485:143:16","trueBody":{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16516:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4052,"nodeType":"ExpressionStatement","src":"16516:11:16"}},"id":4072,"nodeType":"IfStatement","src":"16425:203:16","trueBody":{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16455:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4041,"nodeType":"ExpressionStatement","src":"16455:11:16"}}]},{"expression":{"id":4074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"16656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4023,"id":4075,"nodeType":"Return","src":"16649:12:16"}]},"id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:16","nodeType":"FunctionDefinition","parameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"chr","nameLocation":"16173:3:16","nodeType":"VariableDeclaration","scope":4077,"src":"16166:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4018,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:16"},"returnParameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4077,"src":"16200:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4021,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:16"},"scope":4256,"src":"16144:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4242,"nodeType":"Block","src":"17334:1331:16","statements":[{"assignments":[4086],"declarations":[{"constant":false,"id":4086,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:16","nodeType":"VariableDeclaration","scope":4242,"src":"17344:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4085,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4091,"initialValue":{"arguments":[{"id":4089,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"17372:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4087,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:16","typeDescriptions":{}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:16"},{"assignments":[4093],"declarations":[{"constant":false,"id":4093,"mutability":"mutable","name":"output","nameLocation":"17401:6:16","nodeType":"VariableDeclaration","scope":4242,"src":"17388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4092,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4101,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4097,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"17424:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:16","memberName":"length","nodeType":"MemberAccess","src":"17424:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4094,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:16"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:16","nodeType":"VariableDeclaration","scope":4242,"src":"17471:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4105,"initialValue":{"hexValue":"30","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:16"},{"body":{"id":4234,"nodeType":"Block","src":"17546:854:16","statements":[{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"char","nameLocation":"17567:4:16","nodeType":"VariableDeclaration","scope":4234,"src":"17560:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4116,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4125,"initialValue":{"arguments":[{"arguments":[{"id":4121,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"17604:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"17612:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4120,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"17581:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4118,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:16","typeDescriptions":{}}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"17635:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4130,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17670:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4128,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:16","typeDescriptions":{}}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4232,"nodeType":"Block","src":"18328:62:16","statements":[{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4225,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18346:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4228,"indexExpression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:16","subExpression":{"id":4226,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"18353:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4229,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18371:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4231,"nodeType":"ExpressionStatement","src":"18346:29:16"}]},"id":4233,"nodeType":"IfStatement","src":"17629:761:16","trueBody":{"id":4224,"nodeType":"Block","src":"17685:637:16","statements":[{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4139,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17703:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4142,"indexExpression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:16","subExpression":{"id":4140,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"17710:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4145,"nodeType":"ExpressionStatement","src":"17703:29:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17754:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17823:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17892:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17961:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18030:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18099:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18169:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"nodeType":"IfStatement","src":"18165:143:16","trueBody":{"id":4216,"nodeType":"Block","src":"18183:125:16","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4209,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18261:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4212,"indexExpression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:16","subExpression":{"id":4210,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"18268:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4215,"nodeType":"ExpressionStatement","src":"18261:28:16"}]}},"id":4218,"nodeType":"IfStatement","src":"18095:213:16","trueBody":{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4199,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18113:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4202,"indexExpression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:16","subExpression":{"id":4200,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"18120:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4205,"nodeType":"ExpressionStatement","src":"18113:29:16"}},"id":4219,"nodeType":"IfStatement","src":"18026:282:16","trueBody":{"expression":{"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4189,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18044:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4192,"indexExpression":{"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:16","subExpression":{"id":4190,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"18051:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4195,"nodeType":"ExpressionStatement","src":"18044:28:16"}},"id":4220,"nodeType":"IfStatement","src":"17957:351:16","trueBody":{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4179,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17975:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4182,"indexExpression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:16","subExpression":{"id":4180,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"17982:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4185,"nodeType":"ExpressionStatement","src":"17975:28:16"}},"id":4221,"nodeType":"IfStatement","src":"17888:420:16","trueBody":{"expression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4169,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17906:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4172,"indexExpression":{"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:16","subExpression":{"id":4170,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"17913:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4175,"nodeType":"ExpressionStatement","src":"17906:28:16"}},"id":4222,"nodeType":"IfStatement","src":"17819:489:16","trueBody":{"expression":{"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4159,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17837:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4162,"indexExpression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:16","subExpression":{"id":4160,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"17844:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4165,"nodeType":"ExpressionStatement","src":"17837:28:16"}},"id":4223,"nodeType":"IfStatement","src":"17750:558:16","trueBody":{"expression":{"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4149,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17768:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4152,"indexExpression":{"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:16","subExpression":{"id":4150,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"17775:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4155,"nodeType":"ExpressionStatement","src":"17768:28:16"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"17522:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4110,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"17526:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:16","memberName":"length","nodeType":"MemberAccess","src":"17526:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"initializationExpression":{"assignments":[4107],"declarations":[{"constant":false,"id":4107,"mutability":"mutable","name":"i","nameLocation":"17519:1:16","nodeType":"VariableDeclaration","scope":4235,"src":"17511:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4108,"nodeType":"VariableDeclarationStatement","src":"17511:9:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:16","subExpression":{"id":4113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"17543:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"17541:3:16"},"nodeType":"ForStatement","src":"17506:894:16"},{"AST":{"nativeSrc":"18498:129:16","nodeType":"YulBlock","src":"18498:129:16","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:16","nodeType":"YulIdentifier","src":"18519:6:16"},{"name":"outputLength","nativeSrc":"18527:12:16","nodeType":"YulIdentifier","src":"18527:12:16"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:16","nodeType":"YulIdentifier","src":"18512:6:16"},"nativeSrc":"18512:28:16","nodeType":"YulFunctionCall","src":"18512:28:16"},"nativeSrc":"18512:28:16","nodeType":"YulExpressionStatement","src":"18512:28:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:16","nodeType":"YulLiteral","src":"18560:4:16","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:16","nodeType":"YulIdentifier","src":"18570:6:16"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:16","nodeType":"YulLiteral","src":"18582:1:16","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:16","nodeType":"YulLiteral","src":"18589:1:16","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:16","nodeType":"YulIdentifier","src":"18596:12:16"},{"kind":"number","nativeSrc":"18610:2:16","nodeType":"YulLiteral","src":"18610:2:16","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:16","nodeType":"YulIdentifier","src":"18592:3:16"},"nativeSrc":"18592:21:16","nodeType":"YulFunctionCall","src":"18592:21:16"}],"functionName":{"name":"shr","nativeSrc":"18585:3:16","nodeType":"YulIdentifier","src":"18585:3:16"},"nativeSrc":"18585:29:16","nodeType":"YulFunctionCall","src":"18585:29:16"}],"functionName":{"name":"shl","nativeSrc":"18578:3:16","nodeType":"YulIdentifier","src":"18578:3:16"},"nativeSrc":"18578:37:16","nodeType":"YulFunctionCall","src":"18578:37:16"}],"functionName":{"name":"add","nativeSrc":"18566:3:16","nodeType":"YulIdentifier","src":"18566:3:16"},"nativeSrc":"18566:50:16","nodeType":"YulFunctionCall","src":"18566:50:16"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:16","nodeType":"YulIdentifier","src":"18553:6:16"},"nativeSrc":"18553:64:16","nodeType":"YulFunctionCall","src":"18553:64:16"},"nativeSrc":"18553:64:16","nodeType":"YulExpressionStatement","src":"18553:64:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4093,"isOffset":false,"isSlot":false,"src":"18519:6:16","valueSize":1},{"declaration":4093,"isOffset":false,"isSlot":false,"src":"18570:6:16","valueSize":1},{"declaration":4103,"isOffset":false,"isSlot":false,"src":"18527:12:16","valueSize":1},{"declaration":4103,"isOffset":false,"isSlot":false,"src":"18596:12:16","valueSize":1}],"flags":["memory-safe"],"id":4236,"nodeType":"InlineAssembly","src":"18473:154:16"},{"expression":{"arguments":[{"id":4239,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18651:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4237,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:16","typeDescriptions":{}}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4084,"id":4241,"nodeType":"Return","src":"18637:21:16"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"16674:576:16","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4243,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:16","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"input","nameLocation":"17289:5:16","nodeType":"VariableDeclaration","scope":4243,"src":"17275:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4079,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:16"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4243,"src":"17319:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4082,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:16"},"scope":4256,"src":"17255:1410:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4254,"nodeType":"Block","src":"19050:225:16","statements":[{"AST":{"nativeSrc":"19199:70:16","nodeType":"YulBlock","src":"19199:70:16","statements":[{"nativeSrc":"19213:46:16","nodeType":"YulAssignment","src":"19213:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:16","nodeType":"YulIdentifier","src":"19232:6:16"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:16","nodeType":"YulLiteral","src":"19244:4:16","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:16","nodeType":"YulIdentifier","src":"19250:6:16"}],"functionName":{"name":"add","nativeSrc":"19240:3:16","nodeType":"YulIdentifier","src":"19240:3:16"},"nativeSrc":"19240:17:16","nodeType":"YulFunctionCall","src":"19240:17:16"}],"functionName":{"name":"add","nativeSrc":"19228:3:16","nodeType":"YulIdentifier","src":"19228:3:16"},"nativeSrc":"19228:30:16","nodeType":"YulFunctionCall","src":"19228:30:16"}],"functionName":{"name":"mload","nativeSrc":"19222:5:16","nodeType":"YulIdentifier","src":"19222:5:16"},"nativeSrc":"19222:37:16","nodeType":"YulFunctionCall","src":"19222:37:16"},"variableNames":[{"name":"value","nativeSrc":"19213:5:16","nodeType":"YulIdentifier","src":"19213:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4246,"isOffset":false,"isSlot":false,"src":"19232:6:16","valueSize":1},{"declaration":4248,"isOffset":false,"isSlot":false,"src":"19250:6:16","valueSize":1},{"declaration":4251,"isOffset":false,"isSlot":false,"src":"19213:5:16","valueSize":1}],"flags":["memory-safe"],"id":4253,"nodeType":"InlineAssembly","src":"19174:95:16"}]},"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"18671:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4255,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:16","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:16","nodeType":"VariableDeclaration","scope":4255,"src":"18976:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4245,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"offset","nameLocation":"19005:6:16","nodeType":"VariableDeclaration","scope":4255,"src":"18997:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:16"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"value","nameLocation":"19043:5:16","nodeType":"VariableDeclaration","scope":4255,"src":"19035:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:16"},"scope":4256,"src":"18944:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4257,"src":"297:18980:16","usedErrors":[2914,2917,2920],"usedEvents":[]}],"src":"101:19177:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4268]},"id":4269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4258,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4259,"nodeType":"StructuredDocumentation","src":"141:280:17","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4268,"linearizedBaseContracts":[4268],"name":"IERC165","nameLocation":"432:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"446:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4267,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:17","nodeType":"FunctionDefinition","parameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:17","nodeType":"VariableDeclaration","scope":4267,"src":"818:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4261,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:17"},"returnParameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4267,"src":"861:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4264,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:17"},"scope":4268,"src":"791:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4269,"src":"422:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:755:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5889],"Panic":[2854],"SafeCast":[7654]},"id":5890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5890,"sourceUnit":2855,"src":"129:35:18","symbolAliases":[{"foreign":{"id":4271,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5890,"sourceUnit":7655,"src":"165:40:18","symbolAliases":[{"foreign":{"id":4273,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5889,"linearizedBaseContracts":[5889],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4280,"members":[{"id":4276,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":4277,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":4278,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":4279,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":4293,"nodeType":"Block","src":"731:112:18","statements":[{"AST":{"nativeSrc":"766:71:18","nodeType":"YulBlock","src":"766:71:18","statements":[{"nativeSrc":"780:16:18","nodeType":"YulAssignment","src":"780:16:18","value":{"arguments":[{"name":"a","nativeSrc":"791:1:18","nodeType":"YulIdentifier","src":"791:1:18"},{"name":"b","nativeSrc":"794:1:18","nodeType":"YulIdentifier","src":"794:1:18"}],"functionName":{"name":"add","nativeSrc":"787:3:18","nodeType":"YulIdentifier","src":"787:3:18"},"nativeSrc":"787:9:18","nodeType":"YulFunctionCall","src":"787:9:18"},"variableNames":[{"name":"low","nativeSrc":"780:3:18","nodeType":"YulIdentifier","src":"780:3:18"}]},{"nativeSrc":"809:18:18","nodeType":"YulAssignment","src":"809:18:18","value":{"arguments":[{"name":"low","nativeSrc":"820:3:18","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"a","nativeSrc":"825:1:18","nodeType":"YulIdentifier","src":"825:1:18"}],"functionName":{"name":"lt","nativeSrc":"817:2:18","nodeType":"YulIdentifier","src":"817:2:18"},"nativeSrc":"817:10:18","nodeType":"YulFunctionCall","src":"817:10:18"},"variableNames":[{"name":"high","nativeSrc":"809:4:18","nodeType":"YulIdentifier","src":"809:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4283,"isOffset":false,"isSlot":false,"src":"791:1:18","valueSize":1},{"declaration":4283,"isOffset":false,"isSlot":false,"src":"825:1:18","valueSize":1},{"declaration":4285,"isOffset":false,"isSlot":false,"src":"794:1:18","valueSize":1},{"declaration":4288,"isOffset":false,"isSlot":false,"src":"809:4:18","valueSize":1},{"declaration":4290,"isOffset":false,"isSlot":false,"src":"780:3:18","valueSize":1},{"declaration":4290,"isOffset":false,"isSlot":false,"src":"820:3:18","valueSize":1}],"flags":["memory-safe"],"id":4292,"nodeType":"InlineAssembly","src":"741:96:18"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"475:163:18","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:18","nodeType":"FunctionDefinition","parameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"a","nameLocation":"667:1:18","nodeType":"VariableDeclaration","scope":4294,"src":"659:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"b","nameLocation":"678:1:18","nodeType":"VariableDeclaration","scope":4294,"src":"670:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:18"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"high","nameLocation":"712:4:18","nodeType":"VariableDeclaration","scope":4294,"src":"704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"low","nameLocation":"726:3:18","nodeType":"VariableDeclaration","scope":4294,"src":"718:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:18"},"scope":5889,"src":"643:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4307,"nodeType":"Block","src":"1115:462:18","statements":[{"AST":{"nativeSrc":"1437:134:18","nodeType":"YulBlock","src":"1437:134:18","statements":[{"nativeSrc":"1451:30:18","nodeType":"YulVariableDeclaration","src":"1451:30:18","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:18","nodeType":"YulIdentifier","src":"1468:1:18"},{"name":"b","nativeSrc":"1471:1:18","nodeType":"YulIdentifier","src":"1471:1:18"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:18","nodeType":"YulLiteral","src":"1478:1:18","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:18","nodeType":"YulIdentifier","src":"1474:3:18"},"nativeSrc":"1474:6:18","nodeType":"YulFunctionCall","src":"1474:6:18"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:18","nodeType":"YulIdentifier","src":"1461:6:18"},"nativeSrc":"1461:20:18","nodeType":"YulFunctionCall","src":"1461:20:18"},"variables":[{"name":"mm","nativeSrc":"1455:2:18","nodeType":"YulTypedName","src":"1455:2:18","type":""}]},{"nativeSrc":"1494:16:18","nodeType":"YulAssignment","src":"1494:16:18","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:18","nodeType":"YulIdentifier","src":"1505:1:18"},{"name":"b","nativeSrc":"1508:1:18","nodeType":"YulIdentifier","src":"1508:1:18"}],"functionName":{"name":"mul","nativeSrc":"1501:3:18","nodeType":"YulIdentifier","src":"1501:3:18"},"nativeSrc":"1501:9:18","nodeType":"YulFunctionCall","src":"1501:9:18"},"variableNames":[{"name":"low","nativeSrc":"1494:3:18","nodeType":"YulIdentifier","src":"1494:3:18"}]},{"nativeSrc":"1523:38:18","nodeType":"YulAssignment","src":"1523:38:18","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:18","nodeType":"YulIdentifier","src":"1539:2:18"},{"name":"low","nativeSrc":"1543:3:18","nodeType":"YulIdentifier","src":"1543:3:18"}],"functionName":{"name":"sub","nativeSrc":"1535:3:18","nodeType":"YulIdentifier","src":"1535:3:18"},"nativeSrc":"1535:12:18","nodeType":"YulFunctionCall","src":"1535:12:18"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:18","nodeType":"YulIdentifier","src":"1552:2:18"},{"name":"low","nativeSrc":"1556:3:18","nodeType":"YulIdentifier","src":"1556:3:18"}],"functionName":{"name":"lt","nativeSrc":"1549:2:18","nodeType":"YulIdentifier","src":"1549:2:18"},"nativeSrc":"1549:11:18","nodeType":"YulFunctionCall","src":"1549:11:18"}],"functionName":{"name":"sub","nativeSrc":"1531:3:18","nodeType":"YulIdentifier","src":"1531:3:18"},"nativeSrc":"1531:30:18","nodeType":"YulFunctionCall","src":"1531:30:18"},"variableNames":[{"name":"high","nativeSrc":"1523:4:18","nodeType":"YulIdentifier","src":"1523:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4297,"isOffset":false,"isSlot":false,"src":"1468:1:18","valueSize":1},{"declaration":4297,"isOffset":false,"isSlot":false,"src":"1505:1:18","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"1471:1:18","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"1508:1:18","valueSize":1},{"declaration":4302,"isOffset":false,"isSlot":false,"src":"1523:4:18","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"1494:3:18","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"1543:3:18","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"1556:3:18","valueSize":1}],"flags":["memory-safe"],"id":4306,"nodeType":"InlineAssembly","src":"1412:159:18"}]},"documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"849:173:18","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4308,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:18","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"a","nameLocation":"1051:1:18","nodeType":"VariableDeclaration","scope":4308,"src":"1043:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"b","nameLocation":"1062:1:18","nodeType":"VariableDeclaration","scope":4308,"src":"1054:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:18"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"high","nameLocation":"1096:4:18","nodeType":"VariableDeclaration","scope":4308,"src":"1088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"low","nameLocation":"1110:3:18","nodeType":"VariableDeclaration","scope":4308,"src":"1102:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:18"},"scope":5889,"src":"1027:550:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4342,"nodeType":"Block","src":"1784:149:18","statements":[{"id":4341,"nodeType":"UncheckedBlock","src":"1794:133:18","statements":[{"assignments":[4321],"declarations":[{"constant":false,"id":4321,"mutability":"mutable","name":"c","nameLocation":"1826:1:18","nodeType":"VariableDeclaration","scope":4341,"src":"1818:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4325,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"1830:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"1834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:18"},{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4326,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"1849:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"1859:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"1864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4331,"nodeType":"ExpressionStatement","src":"1849:16:18"},{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"1879:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4336,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"1908:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4334,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"1892:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"1892:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"1879:37:18"}]}]},"documentation":{"id":4309,"nodeType":"StructuredDocumentation","src":"1583:105:18","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4343,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:18","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"a","nameLocation":"1717:1:18","nodeType":"VariableDeclaration","scope":4343,"src":"1709:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"b","nameLocation":"1728:1:18","nodeType":"VariableDeclaration","scope":4343,"src":"1720:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:18"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"success","nameLocation":"1759:7:18","nodeType":"VariableDeclaration","scope":4343,"src":"1754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4315,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4318,"mutability":"mutable","name":"result","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":4343,"src":"1768:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:18"},"scope":5889,"src":"1693:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4377,"nodeType":"Block","src":"2143:149:18","statements":[{"id":4376,"nodeType":"UncheckedBlock","src":"2153:133:18","statements":[{"assignments":[4356],"declarations":[{"constant":false,"id":4356,"mutability":"mutable","name":"c","nameLocation":"2185:1:18","nodeType":"VariableDeclaration","scope":4376,"src":"2177:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"2189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"2193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:18"},{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"2208:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"2218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"2223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"ExpressionStatement","src":"2208:16:18"},{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"2238:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"2247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4371,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4369,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"2251:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"2251:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"2238:37:18"}]}]},"documentation":{"id":4344,"nodeType":"StructuredDocumentation","src":"1939:108:18","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4378,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:18","nodeType":"FunctionDefinition","parameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"a","nameLocation":"2076:1:18","nodeType":"VariableDeclaration","scope":4378,"src":"2068:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"b","nameLocation":"2087:1:18","nodeType":"VariableDeclaration","scope":4378,"src":"2079:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:18"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"success","nameLocation":"2118:7:18","nodeType":"VariableDeclaration","scope":4378,"src":"2113:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4350,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4353,"mutability":"mutable","name":"result","nameLocation":"2135:6:18","nodeType":"VariableDeclaration","scope":4378,"src":"2127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:18"},"scope":5889,"src":"2052:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"2505:391:18","statements":[{"id":4406,"nodeType":"UncheckedBlock","src":"2515:375:18","statements":[{"assignments":[4391],"declarations":[{"constant":false,"id":4391,"mutability":"mutable","name":"c","nameLocation":"2547:1:18","nodeType":"VariableDeclaration","scope":4406,"src":"2539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4395,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:18"},{"AST":{"nativeSrc":"2595:188:18","nodeType":"YulBlock","src":"2595:188:18","statements":[{"nativeSrc":"2727:42:18","nodeType":"YulAssignment","src":"2727:42:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:18","nodeType":"YulIdentifier","src":"2748:1:18"},{"name":"a","nativeSrc":"2751:1:18","nodeType":"YulIdentifier","src":"2751:1:18"}],"functionName":{"name":"div","nativeSrc":"2744:3:18","nodeType":"YulIdentifier","src":"2744:3:18"},"nativeSrc":"2744:9:18","nodeType":"YulFunctionCall","src":"2744:9:18"},{"name":"b","nativeSrc":"2755:1:18","nodeType":"YulIdentifier","src":"2755:1:18"}],"functionName":{"name":"eq","nativeSrc":"2741:2:18","nodeType":"YulIdentifier","src":"2741:2:18"},"nativeSrc":"2741:16:18","nodeType":"YulFunctionCall","src":"2741:16:18"},{"arguments":[{"name":"a","nativeSrc":"2766:1:18","nodeType":"YulIdentifier","src":"2766:1:18"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:18","nodeType":"YulIdentifier","src":"2759:6:18"},"nativeSrc":"2759:9:18","nodeType":"YulFunctionCall","src":"2759:9:18"}],"functionName":{"name":"or","nativeSrc":"2738:2:18","nodeType":"YulIdentifier","src":"2738:2:18"},"nativeSrc":"2738:31:18","nodeType":"YulFunctionCall","src":"2738:31:18"},"variableNames":[{"name":"success","nativeSrc":"2727:7:18","nodeType":"YulIdentifier","src":"2727:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4381,"isOffset":false,"isSlot":false,"src":"2751:1:18","valueSize":1},{"declaration":4381,"isOffset":false,"isSlot":false,"src":"2766:1:18","valueSize":1},{"declaration":4383,"isOffset":false,"isSlot":false,"src":"2755:1:18","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"2748:1:18","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"2727:7:18","valueSize":1}],"flags":["memory-safe"],"id":4396,"nodeType":"InlineAssembly","src":"2570:213:18"},{"expression":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"2842:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"2851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4401,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"2871:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4399,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"2855:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"2855:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4405,"nodeType":"ExpressionStatement","src":"2842:37:18"}]}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"2298:111:18","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4408,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:18","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"a","nameLocation":"2438:1:18","nodeType":"VariableDeclaration","scope":4408,"src":"2430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"b","nameLocation":"2449:1:18","nodeType":"VariableDeclaration","scope":4408,"src":"2441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:18"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"success","nameLocation":"2480:7:18","nodeType":"VariableDeclaration","scope":4408,"src":"2475:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4385,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"result","nameLocation":"2497:6:18","nodeType":"VariableDeclaration","scope":4408,"src":"2489:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:18"},"scope":5889,"src":"2414:482:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4428,"nodeType":"Block","src":"3111:231:18","statements":[{"id":4427,"nodeType":"UncheckedBlock","src":"3121:215:18","statements":[{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"3145:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"3155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"ExpressionStatement","src":"3145:15:18"},{"AST":{"nativeSrc":"3199:127:18","nodeType":"YulBlock","src":"3199:127:18","statements":[{"nativeSrc":"3293:19:18","nodeType":"YulAssignment","src":"3293:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:18","nodeType":"YulIdentifier","src":"3307:1:18"},{"name":"b","nativeSrc":"3310:1:18","nodeType":"YulIdentifier","src":"3310:1:18"}],"functionName":{"name":"div","nativeSrc":"3303:3:18","nodeType":"YulIdentifier","src":"3303:3:18"},"nativeSrc":"3303:9:18","nodeType":"YulFunctionCall","src":"3303:9:18"},"variableNames":[{"name":"result","nativeSrc":"3293:6:18","nodeType":"YulIdentifier","src":"3293:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4411,"isOffset":false,"isSlot":false,"src":"3307:1:18","valueSize":1},{"declaration":4413,"isOffset":false,"isSlot":false,"src":"3310:1:18","valueSize":1},{"declaration":4418,"isOffset":false,"isSlot":false,"src":"3293:6:18","valueSize":1}],"flags":["memory-safe"],"id":4426,"nodeType":"InlineAssembly","src":"3174:152:18"}]}]},"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"2902:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4429,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:18","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"a","nameLocation":"3044:1:18","nodeType":"VariableDeclaration","scope":4429,"src":"3036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"b","nameLocation":"3055:1:18","nodeType":"VariableDeclaration","scope":4429,"src":"3047:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:18"},"returnParameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"success","nameLocation":"3086:7:18","nodeType":"VariableDeclaration","scope":4429,"src":"3081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4415,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"result","nameLocation":"3103:6:18","nodeType":"VariableDeclaration","scope":4429,"src":"3095:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:18"},"scope":5889,"src":"3020:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4449,"nodeType":"Block","src":"3567:231:18","statements":[{"id":4448,"nodeType":"UncheckedBlock","src":"3577:215:18","statements":[{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4441,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"3611:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4446,"nodeType":"ExpressionStatement","src":"3601:15:18"},{"AST":{"nativeSrc":"3655:127:18","nodeType":"YulBlock","src":"3655:127:18","statements":[{"nativeSrc":"3749:19:18","nodeType":"YulAssignment","src":"3749:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:18","nodeType":"YulIdentifier","src":"3763:1:18"},{"name":"b","nativeSrc":"3766:1:18","nodeType":"YulIdentifier","src":"3766:1:18"}],"functionName":{"name":"mod","nativeSrc":"3759:3:18","nodeType":"YulIdentifier","src":"3759:3:18"},"nativeSrc":"3759:9:18","nodeType":"YulFunctionCall","src":"3759:9:18"},"variableNames":[{"name":"result","nativeSrc":"3749:6:18","nodeType":"YulIdentifier","src":"3749:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4432,"isOffset":false,"isSlot":false,"src":"3763:1:18","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":false,"src":"3766:1:18","valueSize":1},{"declaration":4439,"isOffset":false,"isSlot":false,"src":"3749:6:18","valueSize":1}],"flags":["memory-safe"],"id":4447,"nodeType":"InlineAssembly","src":"3630:152:18"}]}]},"documentation":{"id":4430,"nodeType":"StructuredDocumentation","src":"3348:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4450,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:18","nodeType":"FunctionDefinition","parameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"a","nameLocation":"3500:1:18","nodeType":"VariableDeclaration","scope":4450,"src":"3492:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4434,"mutability":"mutable","name":"b","nameLocation":"3511:1:18","nodeType":"VariableDeclaration","scope":4450,"src":"3503:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:18"},"returnParameters":{"id":4440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"success","nameLocation":"3542:7:18","nodeType":"VariableDeclaration","scope":4450,"src":"3537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4436,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4439,"mutability":"mutable","name":"result","nameLocation":"3559:6:18","nodeType":"VariableDeclaration","scope":4450,"src":"3551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:18"},"scope":5889,"src":"3476:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"3989:122:18","statements":[{"assignments":[4461,4463],"declarations":[{"constant":false,"id":4461,"mutability":"mutable","name":"success","nameLocation":"4005:7:18","nodeType":"VariableDeclaration","scope":4479,"src":"4000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4460,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"result","nameLocation":"4022:6:18","nodeType":"VariableDeclaration","scope":4479,"src":"4014:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4468,"initialValue":{"arguments":[{"id":4465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"4039:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"4042:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4464,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:18"},{"expression":{"arguments":[{"id":4470,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"4069:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"4078:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:18","memberName":"max","nodeType":"MemberAccess","src":"4086:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4469,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"4061:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4459,"id":4478,"nodeType":"Return","src":"4054:50:18"}]},"documentation":{"id":4451,"nodeType":"StructuredDocumentation","src":"3804:103:18","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:18","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"a","nameLocation":"3943:1:18","nodeType":"VariableDeclaration","scope":4480,"src":"3935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4455,"mutability":"mutable","name":"b","nameLocation":"3954:1:18","nodeType":"VariableDeclaration","scope":4480,"src":"3946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:18"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"3980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:18"},"scope":5889,"src":"3912:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4499,"nodeType":"Block","src":"4294:73:18","statements":[{"assignments":[null,4491],"declarations":[null,{"constant":false,"id":4491,"mutability":"mutable","name":"result","nameLocation":"4315:6:18","nodeType":"VariableDeclaration","scope":4499,"src":"4307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4496,"initialValue":{"arguments":[{"id":4493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"4332:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"4335:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4492,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"4325:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:18"},{"expression":{"id":4497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"4354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4489,"id":4498,"nodeType":"Return","src":"4347:13:18"}]},"documentation":{"id":4481,"nodeType":"StructuredDocumentation","src":"4117:95:18","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:18","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"a","nameLocation":"4248:1:18","nodeType":"VariableDeclaration","scope":4500,"src":"4240:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4485,"mutability":"mutable","name":"b","nameLocation":"4259:1:18","nodeType":"VariableDeclaration","scope":4500,"src":"4251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:18"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"4285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:18"},"scope":5889,"src":"4217:150:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"4564:122:18","statements":[{"assignments":[4511,4513],"declarations":[{"constant":false,"id":4511,"mutability":"mutable","name":"success","nameLocation":"4580:7:18","nodeType":"VariableDeclaration","scope":4529,"src":"4575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4510,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"result","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":4529,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4518,"initialValue":{"arguments":[{"id":4515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"4614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4617:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4514,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"4607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:18"},{"expression":{"arguments":[{"id":4520,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"4653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:18","memberName":"max","nodeType":"MemberAccess","src":"4661:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4519,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"4636:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4509,"id":4528,"nodeType":"Return","src":"4629:50:18"}]},"documentation":{"id":4501,"nodeType":"StructuredDocumentation","src":"4373:109:18","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:18","nodeType":"FunctionDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"a","nameLocation":"4518:1:18","nodeType":"VariableDeclaration","scope":4530,"src":"4510:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"b","nameLocation":"4529:1:18","nodeType":"VariableDeclaration","scope":4530,"src":"4521:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:18"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4530,"src":"4555:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:18"},"scope":5889,"src":"4487:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"5158:207:18","statements":[{"id":4555,"nodeType":"UncheckedBlock","src":"5168:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"5306:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"5312:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4544,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"5316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4549,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"5337:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4547,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"5321:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"5321:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4541,"id":4554,"nodeType":"Return","src":"5299:49:18"}]}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"4692:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:18","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"condition","nameLocation":"5093:9:18","nodeType":"VariableDeclaration","scope":4557,"src":"5088:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4532,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"a","nameLocation":"5112:1:18","nodeType":"VariableDeclaration","scope":4557,"src":"5104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"b","nameLocation":"5123:1:18","nodeType":"VariableDeclaration","scope":4557,"src":"5115:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:18"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"5149:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:18"},"scope":5889,"src":"5071:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4575,"nodeType":"Block","src":"5502:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"5527:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4569,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"5534:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5537:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4567,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4566,"id":4574,"nodeType":"Return","src":"5512:27:18"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"5371:59:18","text":" @dev Returns the largest of two numbers."},"id":4576,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:18","nodeType":"FunctionDefinition","parameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"a","nameLocation":"5456:1:18","nodeType":"VariableDeclaration","scope":4576,"src":"5448:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"b","nameLocation":"5467:1:18","nodeType":"VariableDeclaration","scope":4576,"src":"5459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:18"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4576,"src":"5493:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:18"},"scope":5889,"src":"5435:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"5684:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"5709:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"5713:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"5716:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"5719:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4586,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4585,"id":4593,"nodeType":"Return","src":"5694:27:18"}]},"documentation":{"id":4577,"nodeType":"StructuredDocumentation","src":"5552:60:18","text":" @dev Returns the smallest of two numbers."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:18","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"a","nameLocation":"5638:1:18","nodeType":"VariableDeclaration","scope":4595,"src":"5630:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"b","nameLocation":"5649:1:18","nodeType":"VariableDeclaration","scope":4595,"src":"5641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:18"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4595,"src":"5675:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:18"},"scope":5889,"src":"5617:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"5912:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5971:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"5977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4604,"id":4616,"nodeType":"Return","src":"5959:28:18"}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"5734:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:18","nodeType":"FunctionDefinition","parameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"a","nameLocation":"5866:1:18","nodeType":"VariableDeclaration","scope":4618,"src":"5858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"b","nameLocation":"5877:1:18","nodeType":"VariableDeclaration","scope":4618,"src":"5869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:18"},"returnParameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"5903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:18"},"scope":5889,"src":"5841:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4658,"nodeType":"Block","src":"6286:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6300:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4639,"nodeType":"IfStatement","src":"6296:150:18","trueBody":{"id":4638,"nodeType":"Block","src":"6308:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":4634,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"6412:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"6412:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4631,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"6400:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"6400:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"ExpressionStatement","src":"6400:35:18"}]}},{"id":4657,"nodeType":"UncheckedBlock","src":"6829:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"6876:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"6860:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"6860:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"6887:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4627,"id":4656,"nodeType":"Return","src":"6853:49:18"}]}]},"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"6000:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4659,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:18","nodeType":"FunctionDefinition","parameters":{"id":4624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"a","nameLocation":"6240:1:18","nodeType":"VariableDeclaration","scope":4659,"src":"6232:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4623,"mutability":"mutable","name":"b","nameLocation":"6251:1:18","nodeType":"VariableDeclaration","scope":4659,"src":"6243:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:18"},"returnParameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4659,"src":"6277:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:18"},"scope":5889,"src":"6215:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4794,"nodeType":"Block","src":"7340:3585:18","statements":[{"id":4793,"nodeType":"UncheckedBlock","src":"7350:3569:18","statements":[{"assignments":[4672,4674],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"high","nameLocation":"7383:4:18","nodeType":"VariableDeclaration","scope":4793,"src":"7375:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4674,"mutability":"mutable","name":"low","nameLocation":"7397:3:18","nodeType":"VariableDeclaration","scope":4793,"src":"7389:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4679,"initialValue":{"arguments":[{"id":4676,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"7411:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4677,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"7414:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4675,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"7404:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4680,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"7498:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4688,"nodeType":"IfStatement","src":"7494:365:18","trueBody":{"id":4687,"nodeType":"Block","src":"7509:350:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"7827:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4684,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"7833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4670,"id":4686,"nodeType":"Return","src":"7820:24:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"7969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4690,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"7984:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4707,"nodeType":"IfStatement","src":"7965:142:18","trueBody":{"id":4706,"nodeType":"Block","src":"7990:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"8028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4699,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"8046:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4701,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"8070:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4695,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"8020:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4692,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8008:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"8008:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4705,"nodeType":"ExpressionStatement","src":"8008:84:18"}]}},{"assignments":[4709],"declarations":[{"constant":false,"id":4709,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:18","nodeType":"VariableDeclaration","scope":4793,"src":"8359:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4710,"nodeType":"VariableDeclarationStatement","src":"8359:17:18"},{"AST":{"nativeSrc":"8415:283:18","nodeType":"YulBlock","src":"8415:283:18","statements":[{"nativeSrc":"8484:38:18","nodeType":"YulAssignment","src":"8484:38:18","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:18","nodeType":"YulIdentifier","src":"8504:1:18"},{"name":"y","nativeSrc":"8507:1:18","nodeType":"YulIdentifier","src":"8507:1:18"},{"name":"denominator","nativeSrc":"8510:11:18","nodeType":"YulIdentifier","src":"8510:11:18"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:18","nodeType":"YulIdentifier","src":"8497:6:18"},"nativeSrc":"8497:25:18","nodeType":"YulFunctionCall","src":"8497:25:18"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:18","nodeType":"YulIdentifier","src":"8484:9:18"}]},{"nativeSrc":"8604:37:18","nodeType":"YulAssignment","src":"8604:37:18","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:18","nodeType":"YulIdentifier","src":"8616:4:18"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:18","nodeType":"YulIdentifier","src":"8625:9:18"},{"name":"low","nativeSrc":"8636:3:18","nodeType":"YulIdentifier","src":"8636:3:18"}],"functionName":{"name":"gt","nativeSrc":"8622:2:18","nodeType":"YulIdentifier","src":"8622:2:18"},"nativeSrc":"8622:18:18","nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"sub","nativeSrc":"8612:3:18","nodeType":"YulIdentifier","src":"8612:3:18"},"nativeSrc":"8612:29:18","nodeType":"YulFunctionCall","src":"8612:29:18"},"variableNames":[{"name":"high","nativeSrc":"8604:4:18","nodeType":"YulIdentifier","src":"8604:4:18"}]},{"nativeSrc":"8658:26:18","nodeType":"YulAssignment","src":"8658:26:18","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:18","nodeType":"YulIdentifier","src":"8669:3:18"},{"name":"remainder","nativeSrc":"8674:9:18","nodeType":"YulIdentifier","src":"8674:9:18"}],"functionName":{"name":"sub","nativeSrc":"8665:3:18","nodeType":"YulIdentifier","src":"8665:3:18"},"nativeSrc":"8665:19:18","nodeType":"YulFunctionCall","src":"8665:19:18"},"variableNames":[{"name":"low","nativeSrc":"8658:3:18","nodeType":"YulIdentifier","src":"8658:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4666,"isOffset":false,"isSlot":false,"src":"8510:11:18","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"8604:4:18","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"8616:4:18","valueSize":1},{"declaration":4674,"isOffset":false,"isSlot":false,"src":"8636:3:18","valueSize":1},{"declaration":4674,"isOffset":false,"isSlot":false,"src":"8658:3:18","valueSize":1},{"declaration":4674,"isOffset":false,"isSlot":false,"src":"8669:3:18","valueSize":1},{"declaration":4709,"isOffset":false,"isSlot":false,"src":"8484:9:18","valueSize":1},{"declaration":4709,"isOffset":false,"isSlot":false,"src":"8625:9:18","valueSize":1},{"declaration":4709,"isOffset":false,"isSlot":false,"src":"8674:9:18","valueSize":1},{"declaration":4662,"isOffset":false,"isSlot":false,"src":"8504:1:18","valueSize":1},{"declaration":4664,"isOffset":false,"isSlot":false,"src":"8507:1:18","valueSize":1}],"flags":["memory-safe"],"id":4711,"nodeType":"InlineAssembly","src":"8390:308:18"},{"assignments":[4713],"declarations":[{"constant":false,"id":4713,"mutability":"mutable","name":"twos","nameLocation":"8910:4:18","nodeType":"VariableDeclaration","scope":4793,"src":"8902:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4720,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"8917:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4716,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"8936:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:18"},{"AST":{"nativeSrc":"8987:359:18","nodeType":"YulBlock","src":"8987:359:18","statements":[{"nativeSrc":"9052:37:18","nodeType":"YulAssignment","src":"9052:37:18","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:18","nodeType":"YulIdentifier","src":"9071:11:18"},{"name":"twos","nativeSrc":"9084:4:18","nodeType":"YulIdentifier","src":"9084:4:18"}],"functionName":{"name":"div","nativeSrc":"9067:3:18","nodeType":"YulIdentifier","src":"9067:3:18"},"nativeSrc":"9067:22:18","nodeType":"YulFunctionCall","src":"9067:22:18"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:18","nodeType":"YulIdentifier","src":"9052:11:18"}]},{"nativeSrc":"9153:21:18","nodeType":"YulAssignment","src":"9153:21:18","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:18","nodeType":"YulIdentifier","src":"9164:3:18"},{"name":"twos","nativeSrc":"9169:4:18","nodeType":"YulIdentifier","src":"9169:4:18"}],"functionName":{"name":"div","nativeSrc":"9160:3:18","nodeType":"YulIdentifier","src":"9160:3:18"},"nativeSrc":"9160:14:18","nodeType":"YulFunctionCall","src":"9160:14:18"},"variableNames":[{"name":"low","nativeSrc":"9153:3:18","nodeType":"YulIdentifier","src":"9153:3:18"}]},{"nativeSrc":"9293:39:18","nodeType":"YulAssignment","src":"9293:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:18","nodeType":"YulLiteral","src":"9313:1:18","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:18","nodeType":"YulIdentifier","src":"9316:4:18"}],"functionName":{"name":"sub","nativeSrc":"9309:3:18","nodeType":"YulIdentifier","src":"9309:3:18"},"nativeSrc":"9309:12:18","nodeType":"YulFunctionCall","src":"9309:12:18"},{"name":"twos","nativeSrc":"9323:4:18","nodeType":"YulIdentifier","src":"9323:4:18"}],"functionName":{"name":"div","nativeSrc":"9305:3:18","nodeType":"YulIdentifier","src":"9305:3:18"},"nativeSrc":"9305:23:18","nodeType":"YulFunctionCall","src":"9305:23:18"},{"kind":"number","nativeSrc":"9330:1:18","nodeType":"YulLiteral","src":"9330:1:18","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:18","nodeType":"YulIdentifier","src":"9301:3:18"},"nativeSrc":"9301:31:18","nodeType":"YulFunctionCall","src":"9301:31:18"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:18","nodeType":"YulIdentifier","src":"9293:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4666,"isOffset":false,"isSlot":false,"src":"9052:11:18","valueSize":1},{"declaration":4666,"isOffset":false,"isSlot":false,"src":"9071:11:18","valueSize":1},{"declaration":4674,"isOffset":false,"isSlot":false,"src":"9153:3:18","valueSize":1},{"declaration":4674,"isOffset":false,"isSlot":false,"src":"9164:3:18","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"9084:4:18","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"9169:4:18","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"9293:4:18","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"9316:4:18","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"9323:4:18","valueSize":1}],"flags":["memory-safe"],"id":4721,"nodeType":"InlineAssembly","src":"8962:384:18"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"9409:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9416:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4724,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"9423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4727,"nodeType":"ExpressionStatement","src":"9409:18:18"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:18","nodeType":"VariableDeclaration","scope":4793,"src":"9762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4736,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4731,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"9785:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:18"},{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4737,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10018:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10033:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4740,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"10018:36:18"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4745,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4747,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10103:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4748,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10117:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4752,"nodeType":"ExpressionStatement","src":"10088:36:18"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10175:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4756,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"10160:36:18"},{"expression":{"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4761,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10246:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4764,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4768,"nodeType":"ExpressionStatement","src":"10231:36:18"},{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4769,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10304:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10319:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4772,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ExpressionStatement","src":"10304:36:18"},{"expression":{"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4777,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4780,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4784,"nodeType":"ExpressionStatement","src":"10378:36:18"},{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"10859:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"10868:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4787,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10874:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"10859:22:18"},{"expression":{"id":4791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"10902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4670,"id":4792,"nodeType":"Return","src":"10895:13:18"}]}]},"documentation":{"id":4660,"nodeType":"StructuredDocumentation","src":"6925:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4795,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:18","nodeType":"FunctionDefinition","parameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"x","nameLocation":"7266:1:18","nodeType":"VariableDeclaration","scope":4795,"src":"7258:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4664,"mutability":"mutable","name":"y","nameLocation":"7277:1:18","nodeType":"VariableDeclaration","scope":4795,"src":"7269:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4666,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:18","nodeType":"VariableDeclaration","scope":4795,"src":"7280:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:18"},"returnParameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"result","nameLocation":"7332:6:18","nodeType":"VariableDeclaration","scope":4795,"src":"7324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:18"},"scope":5889,"src":"7242:3683:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4831,"nodeType":"Block","src":"11164:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"11188:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4812,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"11191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4813,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"11194:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4810,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4795,4832],"referencedDeclaration":4795,"src":"11181:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4818,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"11242:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":4817,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"11225:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4280_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4821,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"11262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4822,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"11265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4823,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"11268:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4820,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4815,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"11209:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"11209:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4809,"id":4830,"nodeType":"Return","src":"11174:111:18"}]},"documentation":{"id":4796,"nodeType":"StructuredDocumentation","src":"10931:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4832,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:18","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"x","nameLocation":"11078:1:18","nodeType":"VariableDeclaration","scope":4832,"src":"11070:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"y","nameLocation":"11089:1:18","nodeType":"VariableDeclaration","scope":4832,"src":"11081:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:18","nodeType":"VariableDeclaration","scope":4832,"src":"11092:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4805,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:18","nodeType":"VariableDeclaration","scope":4832,"src":"11113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":4804,"nodeType":"UserDefinedTypeName","pathNode":{"id":4803,"name":"Rounding","nameLocations":["11113:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"11113:8:18"},"referencedDeclaration":4280,"src":"11113:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:18"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4832,"src":"11155:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:18"},"scope":5889,"src":"11054:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4881,"nodeType":"Block","src":"11500:245:18","statements":[{"id":4880,"nodeType":"UncheckedBlock","src":"11510:229:18","statements":[{"assignments":[4845,4847],"declarations":[{"constant":false,"id":4845,"mutability":"mutable","name":"high","nameLocation":"11543:4:18","nodeType":"VariableDeclaration","scope":4880,"src":"11535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4847,"mutability":"mutable","name":"low","nameLocation":"11557:3:18","nodeType":"VariableDeclaration","scope":4880,"src":"11549:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"arguments":[{"id":4849,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"11571:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4850,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4848,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"11564:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"11594:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4855,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"11607:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4866,"nodeType":"IfStatement","src":"11590:86:18","trueBody":{"id":4865,"nodeType":"Block","src":"11610:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":4861,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"11640:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"11640:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4858,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"11628:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"11628:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4864,"nodeType":"ExpressionStatement","src":"11628:33:18"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"11697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4869,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"11712:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"11719:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4875,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"11726:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4843,"id":4879,"nodeType":"Return","src":"11689:39:18"}]}]},"documentation":{"id":4833,"nodeType":"StructuredDocumentation","src":"11298:111:18","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4882,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:18","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"x","nameLocation":"11438:1:18","nodeType":"VariableDeclaration","scope":4882,"src":"11430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4837,"mutability":"mutable","name":"y","nameLocation":"11449:1:18","nodeType":"VariableDeclaration","scope":4882,"src":"11441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"n","nameLocation":"11458:1:18","nodeType":"VariableDeclaration","scope":4882,"src":"11452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4838,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:18"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"result","nameLocation":"11492:6:18","nodeType":"VariableDeclaration","scope":4882,"src":"11484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:18"},"scope":5889,"src":"11414:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"11963:113:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4898,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4899,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4900,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"11993:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4897,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4882,4921],"referencedDeclaration":4882,"src":"11980:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4905,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"12031:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":4904,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"12014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4280_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"12051:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4909,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"12054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"12062:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4907,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4902,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"11998:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"11998:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4896,"id":4919,"nodeType":"Return","src":"11973:96:18"}]},"documentation":{"id":4883,"nodeType":"StructuredDocumentation","src":"11751:109:18","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:18","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4885,"mutability":"mutable","name":"x","nameLocation":"11889:1:18","nodeType":"VariableDeclaration","scope":4921,"src":"11881:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4887,"mutability":"mutable","name":"y","nameLocation":"11900:1:18","nodeType":"VariableDeclaration","scope":4921,"src":"11892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4886,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4889,"mutability":"mutable","name":"n","nameLocation":"11909:1:18","nodeType":"VariableDeclaration","scope":4921,"src":"11903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4888,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4892,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:18","nodeType":"VariableDeclaration","scope":4921,"src":"11912:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":4891,"nodeType":"UserDefinedTypeName","pathNode":{"id":4890,"name":"Rounding","nameLocations":["11912:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"11912:8:18"},"referencedDeclaration":4280,"src":"11912:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:18"},"returnParameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4921,"src":"11954:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:18"},"scope":5889,"src":"11865:211:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5017,"nodeType":"Block","src":"12710:1849:18","statements":[{"id":5016,"nodeType":"UncheckedBlock","src":"12720:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"12748:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4936,"nodeType":"IfStatement","src":"12744:20:18","trueBody":{"expression":{"hexValue":"30","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4930,"id":4935,"nodeType":"Return","src":"12756:8:18"}},{"assignments":[4938],"declarations":[{"constant":false,"id":4938,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:18","nodeType":"VariableDeclaration","scope":5016,"src":"13235:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4942,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"13255:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4940,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"13259:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:18"},{"assignments":[4944],"declarations":[{"constant":false,"id":4944,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:18","nodeType":"VariableDeclaration","scope":5016,"src":"13274:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4946,"initialValue":{"id":4945,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"13288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:18"},{"assignments":[4948],"declarations":[{"constant":false,"id":4948,"mutability":"mutable","name":"x","nameLocation":"13432:1:18","nodeType":"VariableDeclaration","scope":5016,"src":"13425:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4947,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4950,"initialValue":{"hexValue":"30","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:18"},{"assignments":[4952],"declarations":[{"constant":false,"id":4952,"mutability":"mutable","name":"y","nameLocation":"13458:1:18","nodeType":"VariableDeclaration","scope":5016,"src":"13451:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4951,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4954,"initialValue":{"hexValue":"31","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:18"},{"body":{"id":4991,"nodeType":"Block","src":"13501:882:18","statements":[{"assignments":[4959],"declarations":[{"constant":false,"id":4959,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:18","nodeType":"VariableDeclaration","scope":4991,"src":"13519:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4963,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"13538:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4961,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13544:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:18"},{"expression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4964,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"13573:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4965,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4966,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4967,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13678:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"13923:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13929:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4970,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"13941:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4975,"nodeType":"ExpressionStatement","src":"13572:395:18"},{"expression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4976,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"13987:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4977,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"13990:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4978,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4979,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"14072:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"14326:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"14330:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4984,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"14341:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4982,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:18","typeDescriptions":{}}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4990,"nodeType":"ExpressionStatement","src":"13986:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13485:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"WhileStatement","src":"13478:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4993,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"14401:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4998,"nodeType":"IfStatement","src":"14397:22:18","trueBody":{"expression":{"hexValue":"30","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4930,"id":4997,"nodeType":"Return","src":"14411:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"14470:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"14477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:18","subExpression":{"id":5006,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"14490:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:18","typeDescriptions":{}}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5012,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"14502:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:18","typeDescriptions":{}}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4999,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"14462:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4930,"id":5015,"nodeType":"Return","src":"14455:50:18"}]}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"12082:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5018,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:18","nodeType":"FunctionDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"a","nameLocation":"12664:1:18","nodeType":"VariableDeclaration","scope":5018,"src":"12656:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4926,"mutability":"mutable","name":"n","nameLocation":"12675:1:18","nodeType":"VariableDeclaration","scope":5018,"src":"12667:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:18"},"returnParameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5018,"src":"12701:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:18"},"scope":5889,"src":"12640:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5038,"nodeType":"Block","src":"15159:82:18","statements":[{"id":5037,"nodeType":"UncheckedBlock","src":"15169:66:18","statements":[{"expression":{"arguments":[{"id":5030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"15212:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"15215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5034,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"15222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5028,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"15200:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5889_$","typeString":"type(library Math)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5075,"src":"15200:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5027,"id":5036,"nodeType":"Return","src":"15193:31:18"}]}]},"documentation":{"id":5019,"nodeType":"StructuredDocumentation","src":"14565:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5039,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:18","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"a","nameLocation":"15113:1:18","nodeType":"VariableDeclaration","scope":5039,"src":"15105:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5023,"mutability":"mutable","name":"p","nameLocation":"15124:1:18","nodeType":"VariableDeclaration","scope":5039,"src":"15116:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:18"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5039,"src":"15150:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:18"},"scope":5889,"src":"15084:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"16011:174:18","statements":[{"assignments":[5052,5054],"declarations":[{"constant":false,"id":5052,"mutability":"mutable","name":"success","nameLocation":"16027:7:18","nodeType":"VariableDeclaration","scope":5074,"src":"16022:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5051,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5054,"mutability":"mutable","name":"result","nameLocation":"16044:6:18","nodeType":"VariableDeclaration","scope":5074,"src":"16036:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5060,"initialValue":{"arguments":[{"id":5056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"16064:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5057,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"16067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5058,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"16070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5055,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5099,5181],"referencedDeclaration":5099,"src":"16054:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:18"},{"condition":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:18","subExpression":{"id":5061,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"16087:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"16082:74:18","trueBody":{"id":5070,"nodeType":"Block","src":"16096:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":5066,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"16122:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"16122:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5063,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"16110:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"16110:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5069,"nodeType":"ExpressionStatement","src":"16110:35:18"}]}},{"expression":{"id":5072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"16172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5050,"id":5073,"nodeType":"Return","src":"16165:13:18"}]},"documentation":{"id":5040,"nodeType":"StructuredDocumentation","src":"15247:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:18","nodeType":"FunctionDefinition","parameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"b","nameLocation":"15954:1:18","nodeType":"VariableDeclaration","scope":5075,"src":"15946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5044,"mutability":"mutable","name":"e","nameLocation":"15965:1:18","nodeType":"VariableDeclaration","scope":5075,"src":"15957:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5046,"mutability":"mutable","name":"m","nameLocation":"15976:1:18","nodeType":"VariableDeclaration","scope":5075,"src":"15968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:18"},"returnParameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5075,"src":"16002:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5048,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:18"},"scope":5889,"src":"15930:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5098,"nodeType":"Block","src":"17039:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"17053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"nodeType":"IfStatement","src":"17049:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5088,"id":5095,"nodeType":"Return","src":"17061:17:18"}},{"AST":{"nativeSrc":"17113:1413:18","nodeType":"YulBlock","src":"17113:1413:18","statements":[{"nativeSrc":"17127:22:18","nodeType":"YulVariableDeclaration","src":"17127:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:18","nodeType":"YulLiteral","src":"17144:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:18","nodeType":"YulIdentifier","src":"17138:5:18"},"nativeSrc":"17138:11:18","nodeType":"YulFunctionCall","src":"17138:11:18"},"variables":[{"name":"ptr","nativeSrc":"17131:3:18","nodeType":"YulTypedName","src":"17131:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:18","nodeType":"YulIdentifier","src":"18057:3:18"},{"kind":"number","nativeSrc":"18062:4:18","nodeType":"YulLiteral","src":"18062:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:18","nodeType":"YulIdentifier","src":"18050:6:18"},"nativeSrc":"18050:17:18","nodeType":"YulFunctionCall","src":"18050:17:18"},"nativeSrc":"18050:17:18","nodeType":"YulExpressionStatement","src":"18050:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:18","nodeType":"YulIdentifier","src":"18091:3:18"},{"kind":"number","nativeSrc":"18096:4:18","nodeType":"YulLiteral","src":"18096:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:18","nodeType":"YulIdentifier","src":"18087:3:18"},"nativeSrc":"18087:14:18","nodeType":"YulFunctionCall","src":"18087:14:18"},{"kind":"number","nativeSrc":"18103:4:18","nodeType":"YulLiteral","src":"18103:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:18","nodeType":"YulIdentifier","src":"18080:6:18"},"nativeSrc":"18080:28:18","nodeType":"YulFunctionCall","src":"18080:28:18"},"nativeSrc":"18080:28:18","nodeType":"YulExpressionStatement","src":"18080:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:18","nodeType":"YulIdentifier","src":"18132:3:18"},{"kind":"number","nativeSrc":"18137:4:18","nodeType":"YulLiteral","src":"18137:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:18","nodeType":"YulIdentifier","src":"18128:3:18"},"nativeSrc":"18128:14:18","nodeType":"YulFunctionCall","src":"18128:14:18"},{"kind":"number","nativeSrc":"18144:4:18","nodeType":"YulLiteral","src":"18144:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:18","nodeType":"YulIdentifier","src":"18121:6:18"},"nativeSrc":"18121:28:18","nodeType":"YulFunctionCall","src":"18121:28:18"},"nativeSrc":"18121:28:18","nodeType":"YulExpressionStatement","src":"18121:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:18","nodeType":"YulIdentifier","src":"18173:3:18"},{"kind":"number","nativeSrc":"18178:4:18","nodeType":"YulLiteral","src":"18178:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:18","nodeType":"YulIdentifier","src":"18169:3:18"},"nativeSrc":"18169:14:18","nodeType":"YulFunctionCall","src":"18169:14:18"},{"name":"b","nativeSrc":"18185:1:18","nodeType":"YulIdentifier","src":"18185:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:18","nodeType":"YulIdentifier","src":"18162:6:18"},"nativeSrc":"18162:25:18","nodeType":"YulFunctionCall","src":"18162:25:18"},"nativeSrc":"18162:25:18","nodeType":"YulExpressionStatement","src":"18162:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:18","nodeType":"YulIdentifier","src":"18211:3:18"},{"kind":"number","nativeSrc":"18216:4:18","nodeType":"YulLiteral","src":"18216:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:18","nodeType":"YulIdentifier","src":"18207:3:18"},"nativeSrc":"18207:14:18","nodeType":"YulFunctionCall","src":"18207:14:18"},{"name":"e","nativeSrc":"18223:1:18","nodeType":"YulIdentifier","src":"18223:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:18","nodeType":"YulIdentifier","src":"18200:6:18"},"nativeSrc":"18200:25:18","nodeType":"YulFunctionCall","src":"18200:25:18"},"nativeSrc":"18200:25:18","nodeType":"YulExpressionStatement","src":"18200:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:18","nodeType":"YulIdentifier","src":"18249:3:18"},{"kind":"number","nativeSrc":"18254:4:18","nodeType":"YulLiteral","src":"18254:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:18","nodeType":"YulIdentifier","src":"18245:3:18"},"nativeSrc":"18245:14:18","nodeType":"YulFunctionCall","src":"18245:14:18"},{"name":"m","nativeSrc":"18261:1:18","nodeType":"YulIdentifier","src":"18261:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:18","nodeType":"YulIdentifier","src":"18238:6:18"},"nativeSrc":"18238:25:18","nodeType":"YulFunctionCall","src":"18238:25:18"},"nativeSrc":"18238:25:18","nodeType":"YulExpressionStatement","src":"18238:25:18"},{"nativeSrc":"18425:57:18","nodeType":"YulAssignment","src":"18425:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:18","nodeType":"YulIdentifier","src":"18447:3:18"},"nativeSrc":"18447:5:18","nodeType":"YulFunctionCall","src":"18447:5:18"},{"kind":"number","nativeSrc":"18454:4:18","nodeType":"YulLiteral","src":"18454:4:18","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:18","nodeType":"YulIdentifier","src":"18460:3:18"},{"kind":"number","nativeSrc":"18465:4:18","nodeType":"YulLiteral","src":"18465:4:18","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:18","nodeType":"YulLiteral","src":"18471:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:18","nodeType":"YulLiteral","src":"18477:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:18","nodeType":"YulIdentifier","src":"18436:10:18"},"nativeSrc":"18436:46:18","nodeType":"YulFunctionCall","src":"18436:46:18"},"variableNames":[{"name":"success","nativeSrc":"18425:7:18","nodeType":"YulIdentifier","src":"18425:7:18"}]},{"nativeSrc":"18495:21:18","nodeType":"YulAssignment","src":"18495:21:18","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:18","nodeType":"YulLiteral","src":"18511:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:18","nodeType":"YulIdentifier","src":"18505:5:18"},"nativeSrc":"18505:11:18","nodeType":"YulFunctionCall","src":"18505:11:18"},"variableNames":[{"name":"result","nativeSrc":"18495:6:18","nodeType":"YulIdentifier","src":"18495:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5078,"isOffset":false,"isSlot":false,"src":"18185:1:18","valueSize":1},{"declaration":5080,"isOffset":false,"isSlot":false,"src":"18223:1:18","valueSize":1},{"declaration":5082,"isOffset":false,"isSlot":false,"src":"18261:1:18","valueSize":1},{"declaration":5087,"isOffset":false,"isSlot":false,"src":"18495:6:18","valueSize":1},{"declaration":5085,"isOffset":false,"isSlot":false,"src":"18425:7:18","valueSize":1}],"flags":["memory-safe"],"id":5097,"nodeType":"InlineAssembly","src":"17088:1438:18"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"16191:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:18","nodeType":"FunctionDefinition","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"b","nameLocation":"16961:1:18","nodeType":"VariableDeclaration","scope":5099,"src":"16953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5080,"mutability":"mutable","name":"e","nameLocation":"16972:1:18","nodeType":"VariableDeclaration","scope":5099,"src":"16964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5082,"mutability":"mutable","name":"m","nameLocation":"16983:1:18","nodeType":"VariableDeclaration","scope":5099,"src":"16975:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:18"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"success","nameLocation":"17014:7:18","nodeType":"VariableDeclaration","scope":5099,"src":"17009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5084,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"result","nameLocation":"17031:6:18","nodeType":"VariableDeclaration","scope":5099,"src":"17023:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:18"},"scope":5889,"src":"16934:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5134,"nodeType":"Block","src":"18729:179:18","statements":[{"assignments":[5112,5114],"declarations":[{"constant":false,"id":5112,"mutability":"mutable","name":"success","nameLocation":"18745:7:18","nodeType":"VariableDeclaration","scope":5134,"src":"18740:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5111,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5114,"mutability":"mutable","name":"result","nameLocation":"18767:6:18","nodeType":"VariableDeclaration","scope":5134,"src":"18754:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5113,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5120,"initialValue":{"arguments":[{"id":5116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"18787:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5117,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5118,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"18793:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5115,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5099,5181],"referencedDeclaration":5181,"src":"18777:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:18"},{"condition":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:18","subExpression":{"id":5121,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"18810:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5131,"nodeType":"IfStatement","src":"18805:74:18","trueBody":{"id":5130,"nodeType":"Block","src":"18819:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":5126,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"18845:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"18845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5123,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"18833:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2854_$","typeString":"type(library Panic)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"18833:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5129,"nodeType":"ExpressionStatement","src":"18833:35:18"}]}},{"expression":{"id":5132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"18895:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5110,"id":5133,"nodeType":"Return","src":"18888:13:18"}]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"18538:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:18","nodeType":"FunctionDefinition","parameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"b","nameLocation":"18657:1:18","nodeType":"VariableDeclaration","scope":5135,"src":"18644:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5101,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"e","nameLocation":"18673:1:18","nodeType":"VariableDeclaration","scope":5135,"src":"18660:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5103,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5106,"mutability":"mutable","name":"m","nameLocation":"18689:1:18","nodeType":"VariableDeclaration","scope":5135,"src":"18676:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5105,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:18"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"18715:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5108,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:18"},"scope":5889,"src":"18628:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5180,"nodeType":"Block","src":"19162:771:18","statements":[{"condition":{"arguments":[{"id":5150,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"19187:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5149,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"19176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5159,"nodeType":"IfStatement","src":"19172:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5153,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5148,"id":5158,"nodeType":"Return","src":"19191:28:18"}},{"assignments":[5161],"declarations":[{"constant":false,"id":5161,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:18","nodeType":"VariableDeclaration","scope":5180,"src":"19230:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5164,"initialValue":{"expression":{"id":5162,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"19245:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:18","memberName":"length","nodeType":"MemberAccess","src":"19245:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:18"},{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"19335:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5168,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"19361:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:18","memberName":"length","nodeType":"MemberAccess","src":"19361:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5170,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"19371:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:18","memberName":"length","nodeType":"MemberAccess","src":"19371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5172,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"19381:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"19387:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5174,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5175,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"19393:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5166,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5178,"nodeType":"ExpressionStatement","src":"19335:60:18"},{"AST":{"nativeSrc":"19431:496:18","nodeType":"YulBlock","src":"19431:496:18","statements":[{"nativeSrc":"19445:32:18","nodeType":"YulVariableDeclaration","src":"19445:32:18","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:18","nodeType":"YulIdentifier","src":"19464:6:18"},{"kind":"number","nativeSrc":"19472:4:18","nodeType":"YulLiteral","src":"19472:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:18","nodeType":"YulIdentifier","src":"19460:3:18"},"nativeSrc":"19460:17:18","nodeType":"YulFunctionCall","src":"19460:17:18"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:18","nodeType":"YulTypedName","src":"19449:7:18","type":""}]},{"nativeSrc":"19567:73:18","nodeType":"YulAssignment","src":"19567:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:18","nodeType":"YulIdentifier","src":"19589:3:18"},"nativeSrc":"19589:5:18","nodeType":"YulFunctionCall","src":"19589:5:18"},{"kind":"number","nativeSrc":"19596:4:18","nodeType":"YulLiteral","src":"19596:4:18","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:18","nodeType":"YulIdentifier","src":"19602:7:18"},{"arguments":[{"name":"result","nativeSrc":"19617:6:18","nodeType":"YulIdentifier","src":"19617:6:18"}],"functionName":{"name":"mload","nativeSrc":"19611:5:18","nodeType":"YulIdentifier","src":"19611:5:18"},"nativeSrc":"19611:13:18","nodeType":"YulFunctionCall","src":"19611:13:18"},{"name":"dataPtr","nativeSrc":"19626:7:18","nodeType":"YulIdentifier","src":"19626:7:18"},{"name":"mLen","nativeSrc":"19635:4:18","nodeType":"YulIdentifier","src":"19635:4:18"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:18","nodeType":"YulIdentifier","src":"19578:10:18"},"nativeSrc":"19578:62:18","nodeType":"YulFunctionCall","src":"19578:62:18"},"variableNames":[{"name":"success","nativeSrc":"19567:7:18","nodeType":"YulIdentifier","src":"19567:7:18"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:18","nodeType":"YulIdentifier","src":"19796:6:18"},{"name":"mLen","nativeSrc":"19804:4:18","nodeType":"YulIdentifier","src":"19804:4:18"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:18","nodeType":"YulIdentifier","src":"19789:6:18"},"nativeSrc":"19789:20:18","nodeType":"YulFunctionCall","src":"19789:20:18"},"nativeSrc":"19789:20:18","nodeType":"YulExpressionStatement","src":"19789:20:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:18","nodeType":"YulLiteral","src":"19892:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:18","nodeType":"YulIdentifier","src":"19902:7:18"},{"name":"mLen","nativeSrc":"19911:4:18","nodeType":"YulIdentifier","src":"19911:4:18"}],"functionName":{"name":"add","nativeSrc":"19898:3:18","nodeType":"YulIdentifier","src":"19898:3:18"},"nativeSrc":"19898:18:18","nodeType":"YulFunctionCall","src":"19898:18:18"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:18","nodeType":"YulIdentifier","src":"19885:6:18"},"nativeSrc":"19885:32:18","nodeType":"YulFunctionCall","src":"19885:32:18"},"nativeSrc":"19885:32:18","nodeType":"YulExpressionStatement","src":"19885:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":5161,"isOffset":false,"isSlot":false,"src":"19635:4:18","valueSize":1},{"declaration":5161,"isOffset":false,"isSlot":false,"src":"19804:4:18","valueSize":1},{"declaration":5161,"isOffset":false,"isSlot":false,"src":"19911:4:18","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"19464:6:18","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"19617:6:18","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"19796:6:18","valueSize":1},{"declaration":5145,"isOffset":false,"isSlot":false,"src":"19567:7:18","valueSize":1}],"flags":["memory-safe"],"id":5179,"nodeType":"InlineAssembly","src":"19406:521:18"}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"18914:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5181,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:18","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"b","nameLocation":"19048:1:18","nodeType":"VariableDeclaration","scope":5181,"src":"19035:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5137,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5140,"mutability":"mutable","name":"e","nameLocation":"19072:1:18","nodeType":"VariableDeclaration","scope":5181,"src":"19059:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5139,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"m","nameLocation":"19096:1:18","nodeType":"VariableDeclaration","scope":5181,"src":"19083:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5141,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:18"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"success","nameLocation":"19132:7:18","nodeType":"VariableDeclaration","scope":5181,"src":"19127:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5144,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"result","nameLocation":"19154:6:18","nodeType":"VariableDeclaration","scope":5181,"src":"19141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5146,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:18"},"scope":5889,"src":"19007:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5213,"nodeType":"Block","src":"20088:176:18","statements":[{"body":{"id":5209,"nodeType":"Block","src":"20145:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5200,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"20163:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5202,"indexExpression":{"id":5201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"20173:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5208,"nodeType":"IfStatement","src":"20159:68:18","trueBody":{"id":5207,"nodeType":"Block","src":"20182:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5188,"id":5206,"nodeType":"Return","src":"20200:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"20118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5194,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"20122:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:18","memberName":"length","nodeType":"MemberAccess","src":"20122:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"initializationExpression":{"assignments":[5190],"declarations":[{"constant":false,"id":5190,"mutability":"mutable","name":"i","nameLocation":"20111:1:18","nodeType":"VariableDeclaration","scope":5210,"src":"20103:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5192,"initialValue":{"hexValue":"30","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:18","subExpression":{"id":5197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"20142:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5199,"nodeType":"ExpressionStatement","src":"20140:3:18"},"nodeType":"ForStatement","src":"20098:139:18"},{"expression":{"hexValue":"74727565","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5188,"id":5212,"nodeType":"Return","src":"20246:11:18"}]},"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"19939:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":5214,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:18","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:18","nodeType":"VariableDeclaration","scope":5214,"src":"20036:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5183,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:18"},"returnParameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5214,"src":"20082:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5186,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:18"},"scope":5889,"src":"20016:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5432,"nodeType":"Block","src":"20624:5124:18","statements":[{"id":5431,"nodeType":"UncheckedBlock","src":"20634:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"20728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5228,"nodeType":"IfStatement","src":"20724:53:18","trueBody":{"id":5227,"nodeType":"Block","src":"20736:41:18","statements":[{"expression":{"id":5225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"20761:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5221,"id":5226,"nodeType":"Return","src":"20754:8:18"}]}},{"assignments":[5230],"declarations":[{"constant":false,"id":5230,"mutability":"mutable","name":"aa","nameLocation":"21712:2:18","nodeType":"VariableDeclaration","scope":5431,"src":"21704:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5232,"initialValue":{"id":5231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"21717:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:18"},{"assignments":[5234],"declarations":[{"constant":false,"id":5234,"mutability":"mutable","name":"xn","nameLocation":"21740:2:18","nodeType":"VariableDeclaration","scope":5431,"src":"21732:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5236,"initialValue":{"hexValue":"31","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"21765:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"21761:92:18","trueBody":{"id":5251,"nodeType":"Block","src":"21783:70:18","statements":[{"expression":{"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5243,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"21801:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5246,"nodeType":"ExpressionStatement","src":"21801:10:18"},{"expression":{"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5247,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5250,"nodeType":"ExpressionStatement","src":"21829:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"21870:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5268,"nodeType":"IfStatement","src":"21866:90:18","trueBody":{"id":5267,"nodeType":"Block","src":"21887:69:18","statements":[{"expression":{"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5259,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"21905:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5262,"nodeType":"ExpressionStatement","src":"21905:9:18"},{"expression":{"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5263,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21932:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5266,"nodeType":"ExpressionStatement","src":"21932:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"21973:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5284,"nodeType":"IfStatement","src":"21969:90:18","trueBody":{"id":5283,"nodeType":"Block","src":"21990:69:18","statements":[{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5275,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22008:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"22008:9:18"},{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5279,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22035:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5282,"nodeType":"ExpressionStatement","src":"22035:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5285,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22076:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5300,"nodeType":"IfStatement","src":"22072:89:18","trueBody":{"id":5299,"nodeType":"Block","src":"22093:68:18","statements":[{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22111:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"22111:9:18"},{"expression":{"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5295,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22138:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5298,"nodeType":"ExpressionStatement","src":"22138:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22178:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5316,"nodeType":"IfStatement","src":"22174:87:18","trueBody":{"id":5315,"nodeType":"Block","src":"22194:67:18","statements":[{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5307,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22212:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5310,"nodeType":"ExpressionStatement","src":"22212:8:18"},{"expression":{"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5311,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22238:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5314,"nodeType":"ExpressionStatement","src":"22238:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5317,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5332,"nodeType":"IfStatement","src":"22274:87:18","trueBody":{"id":5331,"nodeType":"Block","src":"22294:67:18","statements":[{"expression":{"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5323,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5326,"nodeType":"ExpressionStatement","src":"22312:8:18"},{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5327,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22338:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5330,"nodeType":"ExpressionStatement","src":"22338:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5333,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5344,"nodeType":"IfStatement","src":"22374:61:18","trueBody":{"id":5343,"nodeType":"Block","src":"22394:41:18","statements":[{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22412:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5342,"nodeType":"ExpressionStatement","src":"22412:8:18"}]}},{"expression":{"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5345,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22855:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5347,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"22865:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5353,"nodeType":"ExpressionStatement","src":"22855:18:18"},{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24760:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24766:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"24771:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5357,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24775:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5364,"nodeType":"ExpressionStatement","src":"24760:23:18"},{"expression":{"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24869:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24875:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"24880:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5368,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24884:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5375,"nodeType":"ExpressionStatement","src":"24869:23:18"},{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5376,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24980:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24986:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"24991:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5379,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"24995:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5386,"nodeType":"ExpressionStatement","src":"24980:23:18"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25089:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25095:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"25100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25104:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"25089:23:18"},{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25199:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25205:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"25210:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5401,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25214:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5408,"nodeType":"ExpressionStatement","src":"25199:23:18"},{"expression":{"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25309:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25315:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"25320:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5412,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25324:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5419,"nodeType":"ExpressionStatement","src":"25309:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25698:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25719:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"25724:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5425,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5421,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"25703:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"25703:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5221,"id":5430,"nodeType":"Return","src":"25691:40:18"}]}]},"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"20270:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:18","nodeType":"FunctionDefinition","parameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"a","nameLocation":"20589:1:18","nodeType":"VariableDeclaration","scope":5433,"src":"20581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5216,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:18"},"returnParameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"20615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5219,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:18"},"scope":5889,"src":"20567:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5466,"nodeType":"Block","src":"25921:171:18","statements":[{"id":5465,"nodeType":"UncheckedBlock","src":"25931:155:18","statements":[{"assignments":[5445],"declarations":[{"constant":false,"id":5445,"mutability":"mutable","name":"result","nameLocation":"25963:6:18","nodeType":"VariableDeclaration","scope":5465,"src":"25955:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5444,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5449,"initialValue":{"arguments":[{"id":5447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"25977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5446,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5433,5467],"referencedDeclaration":5433,"src":"25972:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26000:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5454,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"26042:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":5453,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"26025:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4280_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26055:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26064:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"26073:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26009:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26009:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5443,"id":5464,"nodeType":"Return","src":"25993:82:18"}]}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"25754:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:18","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"a","nameLocation":"25867:1:18","nodeType":"VariableDeclaration","scope":5467,"src":"25859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:18","nodeType":"VariableDeclaration","scope":5467,"src":"25870:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":5438,"nodeType":"UserDefinedTypeName","pathNode":{"id":5437,"name":"Rounding","nameLocations":["25870:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"25870:8:18"},"referencedDeclaration":4280,"src":"25870:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:18"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5467,"src":"25912:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5441,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:18"},"scope":5889,"src":"25845:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5557,"nodeType":"Block","src":"26281:2334:18","statements":[{"expression":{"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26363:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"26383:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5476,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26367:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26367:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5485,"nodeType":"ExpressionStatement","src":"26363:64:18"},{"expression":{"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5486,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26503:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"26525:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5490,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26530:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5487,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26508:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26508:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5499,"nodeType":"ExpressionStatement","src":"26503:56:18"},{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26634:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"26656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5504,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5501,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26639:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26639:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"26634:48:18"},{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5514,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26757:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"26779:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5518,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26784:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5515,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26762:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26762:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5527,"nodeType":"ExpressionStatement","src":"26757:44:18"},{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5528,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26874:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5531,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"26896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5532,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26901:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26879:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26879:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"nodeType":"ExpressionStatement","src":"26874:42:18"},{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5542,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"26988:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"27010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5546,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"27015:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5543,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"26993:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"26993:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ExpressionStatement","src":"26988:41:18"},{"AST":{"nativeSrc":"28490:119:18","nodeType":"YulBlock","src":"28490:119:18","statements":[{"nativeSrc":"28504:95:18","nodeType":"YulAssignment","src":"28504:95:18","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:18","nodeType":"YulIdentifier","src":"28512:1:18"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:18","nodeType":"YulIdentifier","src":"28524:1:18"},{"name":"x","nativeSrc":"28527:1:18","nodeType":"YulIdentifier","src":"28527:1:18"}],"functionName":{"name":"shr","nativeSrc":"28520:3:18","nodeType":"YulIdentifier","src":"28520:3:18"},"nativeSrc":"28520:9:18","nodeType":"YulFunctionCall","src":"28520:9:18"},{"kind":"number","nativeSrc":"28531:66:18","nodeType":"YulLiteral","src":"28531:66:18","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:18","nodeType":"YulIdentifier","src":"28515:4:18"},"nativeSrc":"28515:83:18","nodeType":"YulFunctionCall","src":"28515:83:18"}],"functionName":{"name":"or","nativeSrc":"28509:2:18","nodeType":"YulIdentifier","src":"28509:2:18"},"nativeSrc":"28509:90:18","nodeType":"YulFunctionCall","src":"28509:90:18"},"variableNames":[{"name":"r","nativeSrc":"28504:1:18","nodeType":"YulIdentifier","src":"28504:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5473,"isOffset":false,"isSlot":false,"src":"28504:1:18","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"28512:1:18","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"28524:1:18","valueSize":1},{"declaration":5470,"isOffset":false,"isSlot":false,"src":"28527:1:18","valueSize":1}],"flags":["memory-safe"],"id":5556,"nodeType":"InlineAssembly","src":"28465:144:18"}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"26098:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5558,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:18","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"x","nameLocation":"26244:1:18","nodeType":"VariableDeclaration","scope":5558,"src":"26236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:18"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"r","nameLocation":"26278:1:18","nodeType":"VariableDeclaration","scope":5558,"src":"26270:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:18"},"scope":5889,"src":"26222:2393:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"28848:175:18","statements":[{"id":5590,"nodeType":"UncheckedBlock","src":"28858:159:18","statements":[{"assignments":[5570],"declarations":[{"constant":false,"id":5570,"mutability":"mutable","name":"result","nameLocation":"28890:6:18","nodeType":"VariableDeclaration","scope":5590,"src":"28882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5574,"initialValue":{"arguments":[{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"28904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5571,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5558,5592],"referencedDeclaration":5558,"src":"28899:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"28931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5579,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"28973:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":5578,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"28956:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4280_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"28991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"29000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"28940:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"28940:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5568,"id":5589,"nodeType":"Return","src":"28924:82:18"}]}]},"documentation":{"id":5559,"nodeType":"StructuredDocumentation","src":"28621:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:18","nodeType":"FunctionDefinition","parameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"value","nameLocation":"28790:5:18","nodeType":"VariableDeclaration","scope":5592,"src":"28782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5564,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:18","nodeType":"VariableDeclaration","scope":5592,"src":"28797:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":5563,"nodeType":"UserDefinedTypeName","pathNode":{"id":5562,"name":"Rounding","nameLocations":["28797:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"28797:8:18"},"referencedDeclaration":4280,"src":"28797:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:18"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5592,"src":"28839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:18"},"scope":5889,"src":"28768:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"29216:854:18","statements":[{"assignments":[5601],"declarations":[{"constant":false,"id":5601,"mutability":"mutable","name":"result","nameLocation":"29234:6:18","nodeType":"VariableDeclaration","scope":5720,"src":"29226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5603,"initialValue":{"hexValue":"30","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:18"},{"id":5717,"nodeType":"UncheckedBlock","src":"29254:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29282:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5620,"nodeType":"IfStatement","src":"29278:103:18","trueBody":{"id":5619,"nodeType":"Block","src":"29301:80:18","statements":[{"expression":{"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29319:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5614,"nodeType":"ExpressionStatement","src":"29319:17:18"},{"expression":{"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5618,"nodeType":"ExpressionStatement","src":"29354:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5637,"nodeType":"IfStatement","src":"29394:103:18","trueBody":{"id":5636,"nodeType":"Block","src":"29417:80:18","statements":[{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29435:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5631,"nodeType":"ExpressionStatement","src":"29435:17:18"},{"expression":{"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29470:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5635,"nodeType":"ExpressionStatement","src":"29470:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"29510:103:18","trueBody":{"id":5653,"nodeType":"Block","src":"29533:80:18","statements":[{"expression":{"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5648,"nodeType":"ExpressionStatement","src":"29551:17:18"},{"expression":{"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5652,"nodeType":"ExpressionStatement","src":"29586:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"29626:100:18","trueBody":{"id":5670,"nodeType":"Block","src":"29648:78:18","statements":[{"expression":{"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ExpressionStatement","src":"29666:16:18"},{"expression":{"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29700:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5669,"nodeType":"ExpressionStatement","src":"29700:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5688,"nodeType":"IfStatement","src":"29739:100:18","trueBody":{"id":5687,"nodeType":"Block","src":"29761:78:18","statements":[{"expression":{"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29779:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5682,"nodeType":"ExpressionStatement","src":"29779:16:18"},{"expression":{"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29813:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5686,"nodeType":"ExpressionStatement","src":"29813:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29856:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5705,"nodeType":"IfStatement","src":"29852:100:18","trueBody":{"id":5704,"nodeType":"Block","src":"29874:78:18","statements":[{"expression":{"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29892:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5699,"nodeType":"ExpressionStatement","src":"29892:16:18"},{"expression":{"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29926:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"nodeType":"ExpressionStatement","src":"29926:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"29969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"29965:66:18","trueBody":{"id":5715,"nodeType":"Block","src":"29987:44:18","statements":[{"expression":{"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"30005:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5714,"nodeType":"ExpressionStatement","src":"30005:11:18"}]}}]},{"expression":{"id":5718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"30057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5599,"id":5719,"nodeType":"Return","src":"30050:13:18"}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"29029:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:18","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"29177:5:18","nodeType":"VariableDeclaration","scope":5721,"src":"29169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:18"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5721,"src":"29207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:18"},"scope":5889,"src":"29154:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5754,"nodeType":"Block","src":"30305:177:18","statements":[{"id":5753,"nodeType":"UncheckedBlock","src":"30315:161:18","statements":[{"assignments":[5733],"declarations":[{"constant":false,"id":5733,"mutability":"mutable","name":"result","nameLocation":"30347:6:18","nodeType":"VariableDeclaration","scope":5753,"src":"30339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5737,"initialValue":{"arguments":[{"id":5735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5734,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5721,5755],"referencedDeclaration":5721,"src":"30356:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"30389:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5742,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"30431:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":5741,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"30414:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4280_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"30450:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"30459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"30398:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"30398:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5731,"id":5752,"nodeType":"Return","src":"30382:83:18"}]}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"30076:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5755,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:18","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"30247:5:18","nodeType":"VariableDeclaration","scope":5755,"src":"30239:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5727,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:18","nodeType":"VariableDeclaration","scope":5755,"src":"30254:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":5726,"nodeType":"UserDefinedTypeName","pathNode":{"id":5725,"name":"Rounding","nameLocations":["30254:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"30254:8:18"},"referencedDeclaration":4280,"src":"30254:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:18"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5755,"src":"30296:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:18"},"scope":5889,"src":"30224:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5831,"nodeType":"Block","src":"30800:675:18","statements":[{"expression":{"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5763,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"30882:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"30902:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5764,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"30886:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"30886:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5773,"nodeType":"ExpressionStatement","src":"30882:64:18"},{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5774,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"31044:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5778,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5775,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"31027:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"31027:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5787,"nodeType":"ExpressionStatement","src":"31022:56:18"},{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5788,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31153:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"31175:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5792,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31180:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5789,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"31158:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"31158:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5801,"nodeType":"ExpressionStatement","src":"31153:48:18"},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5802,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31276:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"31298:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5806,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31303:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5803,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"31281:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"31281:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5815,"nodeType":"ExpressionStatement","src":"31276:44:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5816,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31426:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"31453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5823,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"31458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"31436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"31436:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5762,"id":5830,"nodeType":"Return","src":"31418:50:18"}]},"documentation":{"id":5756,"nodeType":"StructuredDocumentation","src":"30488:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5832,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:18","nodeType":"FunctionDefinition","parameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"mutability":"mutable","name":"x","nameLocation":"30763:1:18","nodeType":"VariableDeclaration","scope":5832,"src":"30755:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5757,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:18"},"returnParameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"r","nameLocation":"30797:1:18","nodeType":"VariableDeclaration","scope":5832,"src":"30789:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5760,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:18"},"scope":5889,"src":"30739:736:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5868,"nodeType":"Block","src":"31712:184:18","statements":[{"id":5867,"nodeType":"UncheckedBlock","src":"31722:168:18","statements":[{"assignments":[5844],"declarations":[{"constant":false,"id":5844,"mutability":"mutable","name":"result","nameLocation":"31754:6:18","nodeType":"VariableDeclaration","scope":5867,"src":"31746:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5848,"initialValue":{"arguments":[{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"31770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5845,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5832,5869],"referencedDeclaration":5832,"src":"31763:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"31797:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5853,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"31839:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":5852,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"31822:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4280_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"31873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5850,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"31806:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"31806:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5842,"id":5866,"nodeType":"Return","src":"31790:89:18"}]}]},"documentation":{"id":5833,"nodeType":"StructuredDocumentation","src":"31481:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5869,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:18","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"value","nameLocation":"31654:5:18","nodeType":"VariableDeclaration","scope":5869,"src":"31646:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:18","nodeType":"VariableDeclaration","scope":5869,"src":"31661:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":5837,"nodeType":"UserDefinedTypeName","pathNode":{"id":5836,"name":"Rounding","nameLocations":["31661:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"31661:8:18"},"referencedDeclaration":4280,"src":"31661:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:18"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5869,"src":"31703:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:18"},"scope":5889,"src":"31630:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"32094:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5880,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"32117:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}],"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5878,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:18","typeDescriptions":{}}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5877,"id":5886,"nodeType":"Return","src":"32104:31:18"}]},"documentation":{"id":5870,"nodeType":"StructuredDocumentation","src":"31902:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:18","nodeType":"FunctionDefinition","parameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5873,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:18","nodeType":"VariableDeclaration","scope":5888,"src":"32046:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"},"typeName":{"id":5872,"nodeType":"UserDefinedTypeName","pathNode":{"id":5871,"name":"Rounding","nameLocations":["32046:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4280,"src":"32046:8:18"},"referencedDeclaration":4280,"src":"32046:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:18"},"returnParameters":{"id":5877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"32088:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5875,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:18"},"scope":5889,"src":"32020:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5890,"src":"281:31863:18","usedErrors":[],"usedEvents":[]}],"src":"103:32042:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7654]},"id":7655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5891,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7654,"linearizedBaseContracts":[7654],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5893,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5899,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5895,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":5899,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5894,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5897,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":5899,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5896,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5904,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":5904,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5901,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":5905,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5911,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":5911,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5906,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5909,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":5911,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5908,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":5912,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5916,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":5916,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":5943,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5926,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5925,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5937,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":5936,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5931,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5935,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5938,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5923,"id":5942,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":5917,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5944,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":5944,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5944,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5921,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":7654,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5971,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5954,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5953,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5965,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":5964,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5959,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5963,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5966,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5951,"id":5970,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":5945,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5972,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":5972,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5972,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5949,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":7654,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5982,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5981,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5993,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":5992,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5987,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5991,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5994,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5979,"id":5998,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":5973,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":6000,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6000,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5977,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":7654,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6027,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6010,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":6020,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6015,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6019,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6022,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6007,"id":6026,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6028,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":6028,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6028,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6005,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":7654,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6055,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6038,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6049,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":6048,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6043,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6047,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6050,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6035,"id":6054,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6056,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":6056,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6056,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6033,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":7654,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6083,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6066,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6065,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6077,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":6076,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6071,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6075,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6078,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6063,"id":6082,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":6057,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6084,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":6084,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6084,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6061,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":7654,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6111,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6094,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6093,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6105,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":6104,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6099,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6103,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6106,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6091,"id":6110,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":6085,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6112,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":6112,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6112,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6089,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":7654,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6139,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6122,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6121,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6133,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":6132,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6127,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6131,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6134,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6119,"id":6138,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6140,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":6140,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6140,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6117,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":7654,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6167,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6150,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6161,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":6160,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6155,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6159,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6162,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6147,"id":6166,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":6141,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6168,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":6168,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6168,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6145,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":7654,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6195,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6178,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6177,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6189,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":6188,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6183,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6187,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6190,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6175,"id":6194,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":6169,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6196,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":6196,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6196,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6173,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":7654,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6223,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6206,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6205,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":6216,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6211,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6215,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6218,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6203,"id":6222,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":6197,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":6224,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6224,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6201,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":7654,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6234,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6233,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6245,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":6244,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6239,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6243,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6246,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6231,"id":6250,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":6252,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6226,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6252,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6229,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":7654,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6279,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6262,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6261,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6273,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":6272,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6267,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6271,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6274,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6259,"id":6278,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6280,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":6280,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6280,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6257,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":7654,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6307,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6290,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6301,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":6300,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6295,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6299,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6302,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6287,"id":6306,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":6281,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6308,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":6308,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6308,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6285,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":7654,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6335,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6318,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6317,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6329,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":6328,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6323,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6327,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6330,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6315,"id":6334,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6336,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":6336,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6310,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6336,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6313,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":7654,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6363,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6346,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6345,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6357,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":6356,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6351,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6355,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6358,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6343,"id":6362,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":6337,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":6364,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6338,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6341,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":7654,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6391,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6374,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6373,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6385,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":6384,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6379,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6383,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6386,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6371,"id":6390,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":6392,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6392,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6369,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":7654,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6419,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6402,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6401,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6413,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":6412,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6407,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6411,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6414,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6399,"id":6418,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6420,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":6420,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6394,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6420,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6397,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":7654,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6447,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6430,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6429,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6441,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":6440,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6435,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6439,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6442,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6427,"id":6446,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":6421,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6448,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":6448,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6448,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6425,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":7654,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6475,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6458,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6457,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6469,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":6468,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6463,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6467,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6470,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6455,"id":6474,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":6449,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6476,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":6476,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6450,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6476,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6453,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":7654,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6503,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6486,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6485,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6497,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":6496,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6491,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6495,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6498,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6483,"id":6502,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":6477,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6504,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":6504,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6504,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6481,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":7654,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6531,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6514,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6513,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6525,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":6524,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6519,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6523,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6526,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6511,"id":6530,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":6505,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6532,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":6532,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6532,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6509,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":7654,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6559,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6542,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6541,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6553,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":6552,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6547,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6551,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6554,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6539,"id":6558,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":6533,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6560,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":6560,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6534,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6560,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6537,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":7654,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6570,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6569,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6581,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":6580,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6575,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6579,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6582,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6567,"id":6586,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":6561,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":6588,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6562,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6588,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6565,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":7654,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6615,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6598,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6597,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6609,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":6608,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6603,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6607,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6610,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6595,"id":6614,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6616,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":6616,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6616,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6593,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":7654,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6643,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6626,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6625,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6637,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":6636,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6631,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6635,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6638,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6623,"id":6642,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6644,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":6644,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6618,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6644,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6621,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":7654,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6671,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6654,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6653,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6665,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":6664,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6659,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6663,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6666,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6651,"id":6670,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":6645,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6672,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":6672,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6672,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6649,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":7654,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6699,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6682,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6681,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6693,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":6692,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6687,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6691,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6694,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6679,"id":6698,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":6673,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6700,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":6700,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6674,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6700,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6677,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":7654,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6727,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6710,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6721,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":6720,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6715,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6719,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6722,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6707,"id":6726,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":6701,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6728,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6703,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":6728,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6702,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6728,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6705,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":7654,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6755,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6738,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6737,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6749,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":6748,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6743,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6747,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6750,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6735,"id":6754,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":6729,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6756,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":6756,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6730,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6756,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6733,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":7654,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6783,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6766,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6765,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6777,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":6776,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6771,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6775,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6778,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6763,"id":6782,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":6757,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6784,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":6784,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6758,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":6763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6784,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6761,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":7654,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6806,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":6799,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6795,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6798,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6791,"id":6805,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":6785,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":6788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":6807,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6786,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6807,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6789,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":7654,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6832,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6816,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6821,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6822,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6831,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":6830,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6825,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6829,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":6808,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6833,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6810,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":6833,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6809,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":6833,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6812,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":7654,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6858,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6842,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6847,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6857,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":6856,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6851,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6855,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":6834,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6859,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":6859,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6835,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6839,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":6859,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6838,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":7654,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6884,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6868,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6873,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6874,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6883,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":6882,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6877,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6881,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":6860,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6885,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6862,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":6885,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6861,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":6885,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6864,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":7654,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6910,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6894,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6899,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6900,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6909,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":6908,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6903,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6907,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":6886,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6911,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":6889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6888,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":6911,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6887,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":6911,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6890,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":7654,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6936,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6920,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6925,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6926,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6935,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":6934,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6929,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6933,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":6912,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":6915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6914,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":6937,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6913,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":6937,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6916,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":7654,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6962,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6946,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6951,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6961,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":6960,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6955,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6959,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":6963,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6939,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":6963,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6942,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":7654,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6988,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6972,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6977,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6987,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":6986,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6981,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6985,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6989,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":6989,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6965,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":6989,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6968,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":7654,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7014,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6998,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7003,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7004,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7013,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":7012,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7007,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7011,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":6990,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7015,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":7015,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6991,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":7015,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6994,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":7654,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7040,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7024,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7029,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7039,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":7038,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7033,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7037,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":7016,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7041,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":7041,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7017,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":7041,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7020,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":7654,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7066,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7050,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7055,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7056,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7065,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":7064,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7059,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7063,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7067,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":7067,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7043,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":7067,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7046,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":7654,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7092,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7076,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7081,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7091,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":7090,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7085,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7089,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":7068,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7093,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":7093,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7069,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":7074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":7093,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7072,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":7654,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7118,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7102,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7107,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7117,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":7116,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7111,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7115,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":7094,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7119,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":7119,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7095,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":7119,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7098,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":7654,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7144,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7128,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7133,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7143,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":7142,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7137,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7141,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":7120,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7145,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":7145,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7121,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":7126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7125,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":7145,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7124,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":7654,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7170,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7154,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7159,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7169,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":7168,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7163,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7167,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":7146,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":7149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":7171,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7147,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":7171,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7150,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":7654,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7196,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7180,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7185,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7195,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":7194,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7189,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7193,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":7172,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7197,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":7197,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7173,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":7197,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7176,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":7654,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7222,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7206,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7211,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7221,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":7220,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7215,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7219,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":7198,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7223,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":7223,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7199,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":7204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":7223,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7202,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":7654,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7248,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7232,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7237,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7247,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":7246,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7241,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7245,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":7224,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7249,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":7227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7226,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":7249,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7225,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":7249,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7228,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":7654,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7274,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7258,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7263,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7273,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":7272,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7267,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7271,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":7250,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":7275,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7251,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7255,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":7275,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7254,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":7654,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7300,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7284,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7289,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7299,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":7298,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7293,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7297,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":7276,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":7301,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7277,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7281,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":7301,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7280,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":7654,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7326,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7310,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7315,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7325,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":7324,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7319,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7323,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7327,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":7327,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7303,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":7327,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7306,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":7654,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7352,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7336,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7341,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7351,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":7350,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7345,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7349,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":7328,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7353,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":7353,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7329,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":7353,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7332,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":7654,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7378,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7362,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7367,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7377,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":7376,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7371,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7375,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":7354,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7379,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":7357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":7379,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7355,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7359,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":7379,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7358,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":7654,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7404,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7388,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7393,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7403,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":7402,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7397,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7401,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":7380,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7405,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":7383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7382,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":7405,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7381,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":7386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7385,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":7405,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7384,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":7654,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7430,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7414,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7419,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7429,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":7428,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7423,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7427,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":7406,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7431,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":7431,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7407,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":7431,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7410,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":7654,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7456,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7440,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7445,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7455,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":7454,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7449,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7453,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":7432,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7457,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":7435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7434,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":7457,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7433,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":7457,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7436,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":7654,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7482,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7466,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7471,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7481,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":7480,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7475,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7479,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":7458,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7483,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":7483,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7459,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":7483,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7462,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":7654,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7508,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7492,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7497,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7507,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":7506,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7501,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7505,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":7484,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7509,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7486,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":7509,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7485,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7489,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":7509,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7488,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":7654,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7534,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7518,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7523,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7533,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":7532,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7527,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7531,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":7510,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7535,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":7535,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7511,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":7535,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7514,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":7654,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7560,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7544,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7549,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7559,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":7558,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7553,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7557,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":7536,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7561,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":7561,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7537,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":7561,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7540,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":7654,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7586,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7570,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7575,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7585,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":7584,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7579,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7583,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":7562,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7587,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":7587,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7563,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":7587,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7566,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":7654,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7612,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7596,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7601,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7611,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":7610,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7605,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7609,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":7588,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7613,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":7613,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7589,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":7613,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7592,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":7654,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7642,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7625,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7622,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7636,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":7635,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7631,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7634,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":7639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7637,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7620,"id":7641,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":7614,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":7643,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7643,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7618,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":7654,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7652,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nativeSrc":"34888:46:19","nodeType":"YulBlock","src":"34888:46:19","statements":[{"nativeSrc":"34902:22:19","nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:19","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:19","nodeType":"YulIdentifier","src":"34914:6:19"},"nativeSrc":"34914:9:19","nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:19","nodeType":"YulIdentifier","src":"34907:6:19"},"nativeSrc":"34907:17:19","nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nativeSrc":"34902:1:19","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7646,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":7649,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":7651,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":7644,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7653,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":7647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":7653,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7645,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7649,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":7653,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7648,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":7654,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7655,"src":"769:34173:19","usedErrors":[5899,5904,5911,5916],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7654],"SignedMath":[7798]},"id":7799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7799,"sourceUnit":7655,"src":"135:40:20","symbolAliases":[{"foreign":{"id":7657,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"143:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7659,"nodeType":"StructuredDocumentation","src":"177:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7798,"linearizedBaseContracts":[7798],"name":"SignedMath","nameLocation":"266:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":7688,"nodeType":"Block","src":"746:215:20","statements":[{"id":7687,"nodeType":"UncheckedBlock","src":"756:199:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"900:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7673,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"904:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7680,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"932:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7678,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"916:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7654_$","typeString":"type(library SafeCast)"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7653,"src":"916:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7676,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:20","typeDescriptions":{}}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7670,"id":7686,"nodeType":"Return","src":"887:57:20"}]}]},"documentation":{"id":7660,"nodeType":"StructuredDocumentation","src":"283:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7689,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:20","nodeType":"FunctionDefinition","parameters":{"id":7667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7662,"mutability":"mutable","name":"condition","nameLocation":"684:9:20","nodeType":"VariableDeclaration","scope":7689,"src":"679:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7661,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7664,"mutability":"mutable","name":"a","nameLocation":"702:1:20","nodeType":"VariableDeclaration","scope":7689,"src":"695:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7663,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7666,"mutability":"mutable","name":"b","nameLocation":"712:1:20","nodeType":"VariableDeclaration","scope":7689,"src":"705:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7665,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:20"},"returnParameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7689,"src":"738:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7668,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:20"},"scope":7798,"src":"662:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7707,"nodeType":"Block","src":"1102:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7692,"src":"1127:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"1131:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7692,"src":"1134:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7699,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"1119:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7698,"id":7706,"nodeType":"Return","src":"1112:27:20"}]},"documentation":{"id":7690,"nodeType":"StructuredDocumentation","src":"967:66:20","text":" @dev Returns the largest of two signed numbers."},"id":7708,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:20","nodeType":"FunctionDefinition","parameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7692,"mutability":"mutable","name":"a","nameLocation":"1058:1:20","nodeType":"VariableDeclaration","scope":7708,"src":"1051:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7691,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7694,"mutability":"mutable","name":"b","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":7708,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7693,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:20"},"returnParameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7708,"src":"1094:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7696,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:20"},"scope":7798,"src":"1038:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7726,"nodeType":"Block","src":"1288:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"1313:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"1317:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"1320:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"1323:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7718,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"1305:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7717,"id":7725,"nodeType":"Return","src":"1298:27:20"}]},"documentation":{"id":7709,"nodeType":"StructuredDocumentation","src":"1152:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":7727,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:20","nodeType":"FunctionDefinition","parameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7711,"mutability":"mutable","name":"a","nameLocation":"1244:1:20","nodeType":"VariableDeclaration","scope":7727,"src":"1237:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7710,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7713,"mutability":"mutable","name":"b","nameLocation":"1254:1:20","nodeType":"VariableDeclaration","scope":7727,"src":"1247:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7712,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:20"},"returnParameters":{"id":7717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7727,"src":"1280:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7715,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:20"},"scope":7798,"src":"1224:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7770,"nodeType":"Block","src":"1537:162:20","statements":[{"assignments":[7738],"declarations":[{"constant":false,"id":7738,"mutability":"mutable","name":"x","nameLocation":"1606:1:20","nodeType":"VariableDeclaration","scope":7770,"src":"1599:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7737,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7751,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"1611:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"1615:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"1622:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"1626:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7757,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"1671:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{}}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7753,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:20","typeDescriptions":{}}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"1685:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7736,"id":7769,"nodeType":"Return","src":"1644:48:20"}]},"documentation":{"id":7728,"nodeType":"StructuredDocumentation","src":"1338:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7771,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:20","nodeType":"FunctionDefinition","parameters":{"id":7733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7730,"mutability":"mutable","name":"a","nameLocation":"1493:1:20","nodeType":"VariableDeclaration","scope":7771,"src":"1486:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7729,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7732,"mutability":"mutable","name":"b","nameLocation":"1503:1:20","nodeType":"VariableDeclaration","scope":7771,"src":"1496:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7731,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:20"},"returnParameters":{"id":7736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7771,"src":"1529:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7734,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:20"},"scope":7798,"src":"1469:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7796,"nodeType":"Block","src":"1843:767:20","statements":[{"id":7795,"nodeType":"UncheckedBlock","src":"1853:751:20","statements":[{"assignments":[7780],"declarations":[{"constant":false,"id":7780,"mutability":"mutable","name":"mask","nameLocation":"2424:4:20","nodeType":"VariableDeclaration","scope":7795,"src":"2417:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7779,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7784,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7781,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7787,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"2576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7788,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2580:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7791,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2588:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:20","typeDescriptions":{}}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7778,"id":7794,"nodeType":"Return","src":"2560:33:20"}]}]},"documentation":{"id":7772,"nodeType":"StructuredDocumentation","src":"1705:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7797,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:20","nodeType":"FunctionDefinition","parameters":{"id":7775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7774,"mutability":"mutable","name":"n","nameLocation":"1808:1:20","nodeType":"VariableDeclaration","scope":7797,"src":"1801:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7773,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:20"},"returnParameters":{"id":7778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7797,"src":"1834:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:20"},"scope":7798,"src":"1788:822:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7799,"src":"258:2354:20","usedErrors":[],"usedEvents":[]}],"src":"109:2504:20"},"id":20},"contracts/Claim.sol":{"ast":{"absolutePath":"contracts/Claim.sol","exportedSymbols":{"Claim":[8220],"ContextUpgradeable":[1588],"ICustomNFT":[7810],"IERC20":[2506],"IWhitelist":[7823],"Initializable":[462],"OwnableUpgradeable":[194]},"id":8221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8221,"sourceUnit":2507,"src":"58:56:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":7802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8221,"sourceUnit":195,"src":"115:75:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICustomNFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7810,"linearizedBaseContracts":[7810],"name":"ICustomNFT","nameLocation":"202:10:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6a627842","id":7809,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"228:4:21","nodeType":"FunctionDefinition","parameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"to","nameLocation":"241:2:21","nodeType":"VariableDeclaration","scope":7809,"src":"233:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7803,"name":"address","nodeType":"ElementaryTypeName","src":"233:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"232:12:21"},"returnParameters":{"id":7808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7809,"src":"263:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"262:9:21"},"scope":7810,"src":"219:53:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8221,"src":"192:82:21","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IWhitelist","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7823,"linearizedBaseContracts":[7823],"name":"IWhitelist","nameLocation":"286:10:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3af32abf","id":7817,"implemented":false,"kind":"function","modifiers":[],"name":"isWhitelisted","nameLocation":"312:13:21","nodeType":"FunctionDefinition","parameters":{"id":7813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7812,"mutability":"mutable","name":"user","nameLocation":"334:4:21","nodeType":"VariableDeclaration","scope":7817,"src":"326:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7811,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"325:14:21"},"returnParameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7817,"src":"363:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7814,"name":"bool","nodeType":"ElementaryTypeName","src":"363:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"362:6:21"},"scope":7823,"src":"303:66:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e43252d7","id":7822,"implemented":false,"kind":"function","modifiers":[],"name":"addToWhitelist","nameLocation":"383:14:21","nodeType":"FunctionDefinition","parameters":{"id":7820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7819,"mutability":"mutable","name":"user","nameLocation":"406:4:21","nodeType":"VariableDeclaration","scope":7822,"src":"398:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7818,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"397:14:21"},"returnParameters":{"id":7821,"nodeType":"ParameterList","parameters":[],"src":"420:0:21"},"scope":7823,"src":"374:47:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8221,"src":"276:147:21","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":7824,"name":"OwnableUpgradeable","nameLocations":["443:18:21"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"443:18:21"},"id":7825,"nodeType":"InheritanceSpecifier","src":"443:18:21"}],"canonicalName":"Claim","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8220,"linearizedBaseContracts":[8220,194,1588,462],"name":"Claim","nameLocation":"434:5:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":7828,"mutability":"mutable","name":"token","nameLocation":"482:5:21","nodeType":"VariableDeclaration","scope":8220,"src":"468:19:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"},"typeName":{"id":7827,"nodeType":"UserDefinedTypeName","pathNode":{"id":7826,"name":"IERC20","nameLocations":["468:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2506,"src":"468:6:21"},"referencedDeclaration":2506,"src":"468:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"47ccca02","id":7831,"mutability":"mutable","name":"nft","nameLocation":"511:3:21","nodeType":"VariableDeclaration","scope":8220,"src":"493:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICustomNFT_$7810","typeString":"contract ICustomNFT"},"typeName":{"id":7830,"nodeType":"UserDefinedTypeName","pathNode":{"id":7829,"name":"ICustomNFT","nameLocations":["493:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":7810,"src":"493:10:21"},"referencedDeclaration":7810,"src":"493:10:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICustomNFT_$7810","typeString":"contract ICustomNFT"}},"visibility":"public"},{"constant":false,"functionSelector":"93e59dc1","id":7834,"mutability":"mutable","name":"whitelist","nameLocation":"538:9:21","nodeType":"VariableDeclaration","scope":8220,"src":"520:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWhitelist_$7823","typeString":"contract IWhitelist"},"typeName":{"id":7833,"nodeType":"UserDefinedTypeName","pathNode":{"id":7832,"name":"IWhitelist","nameLocations":["520:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":7823,"src":"520:10:21"},"referencedDeclaration":7823,"src":"520:10:21","typeDescriptions":{"typeIdentifier":"t_contract$_IWhitelist_$7823","typeString":"contract IWhitelist"}},"visibility":"public"},{"constant":false,"functionSelector":"cebe09c9","id":7836,"mutability":"mutable","name":"quota","nameLocation":"568:5:21","nodeType":"VariableDeclaration","scope":8220,"src":"553:20:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c884ef83","id":7840,"mutability":"mutable","name":"claimed","nameLocation":"612:7:21","nodeType":"VariableDeclaration","scope":8220,"src":"580:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7839,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7837,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"580:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7838,"name":"bool","nodeType":"ElementaryTypeName","src":"599:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":7846,"name":"Deposited","nameLocation":"632:9:21","nodeType":"EventDefinition","parameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7842,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"658:4:21","nodeType":"VariableDeclaration","scope":7846,"src":"642:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7841,"name":"address","nodeType":"ElementaryTypeName","src":"642:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7844,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"672:6:21","nodeType":"VariableDeclaration","scope":7846,"src":"664:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7843,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"641:38:21"},"src":"626:54:21"},{"anonymous":false,"eventSelector":"987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a","id":7854,"name":"Claimed","nameLocation":"691:7:21","nodeType":"EventDefinition","parameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7848,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"715:7:21","nodeType":"VariableDeclaration","scope":7854,"src":"699:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7847,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7850,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"732:11:21","nodeType":"VariableDeclaration","scope":7854,"src":"724:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7849,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7852,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"753:7:21","nodeType":"VariableDeclaration","scope":7854,"src":"745:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7851,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:63:21"},"src":"685:77:21"},{"anonymous":false,"eventSelector":"19d6318afb32eea58ef4a200d5730cc282d7e0bd791a8ced865532f1ac4b9b0f","id":7860,"name":"QuotaUpdated","nameLocation":"773:12:21","nodeType":"EventDefinition","parameters":{"id":7859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7856,"indexed":false,"mutability":"mutable","name":"oldQuota","nameLocation":"794:8:21","nodeType":"VariableDeclaration","scope":7860,"src":"786:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7855,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7858,"indexed":false,"mutability":"mutable","name":"newQuota","nameLocation":"812:8:21","nodeType":"VariableDeclaration","scope":7860,"src":"804:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7857,"name":"uint256","nodeType":"ElementaryTypeName","src":"804:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:36:21"},"src":"767:55:21"},{"constant":true,"id":7871,"mutability":"constant","name":"TRANSFER_SELECTOR","nameLocation":"852:17:21","nodeType":"VariableDeclaration","scope":8220,"src":"828:97:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7861,"name":"bytes4","nodeType":"ElementaryTypeName","src":"828:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7472616e7366657228616464726573732c75696e7432353629","id":7867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"895:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""},"value":"transfer(address,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""}],"id":7866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"889:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7865,"name":"bytes","nodeType":"ElementaryTypeName","src":"889:5:21","typeDescriptions":{}}},"id":7868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"889:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7864,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"879:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"879:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"872:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":7862,"name":"bytes4","nodeType":"ElementaryTypeName","src":"872:6:21","typeDescriptions":{}}},"id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"872:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":true,"id":7882,"mutability":"constant","name":"TRANSFER_FROM_SELECTOR","nameLocation":"955:22:21","nodeType":"VariableDeclaration","scope":8220,"src":"931:114:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7872,"name":"bytes4","nodeType":"ElementaryTypeName","src":"931:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1003:39:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b","typeString":"literal_string \"transferFrom(address,address,uint256)\""},"value":"transferFrom(address,address,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b","typeString":"literal_string \"transferFrom(address,address,uint256)\""}],"id":7877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"997:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7876,"name":"bytes","nodeType":"ElementaryTypeName","src":"997:5:21","typeDescriptions":{}}},"id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"997:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7875,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"987:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"987:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"980:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":7873,"name":"bytes4","nodeType":"ElementaryTypeName","src":"980:6:21","typeDescriptions":{}}},"id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"980:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"body":{"id":7923,"nodeType":"Block","src":"1240:192:21","statements":[{"expression":{"arguments":[{"id":7898,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"1265:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7897,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1250:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1250:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7900,"nodeType":"ExpressionStatement","src":"1250:28:21"},{"expression":{"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"1288:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7903,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"1303:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7902,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"1296:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2506_$","typeString":"type(contract IERC20)"}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}},"src":"1288:28:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}},"id":7906,"nodeType":"ExpressionStatement","src":"1288:28:21"},{"expression":{"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7907,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"1326:3:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICustomNFT_$7810","typeString":"contract ICustomNFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7909,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"1343:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7908,"name":"ICustomNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"1332:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICustomNFT_$7810_$","typeString":"type(contract ICustomNFT)"}},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1332:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICustomNFT_$7810","typeString":"contract ICustomNFT"}},"src":"1326:28:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICustomNFT_$7810","typeString":"contract ICustomNFT"}},"id":7912,"nodeType":"ExpressionStatement","src":"1326:28:21"},{"expression":{"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7913,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"1364:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IWhitelist_$7823","typeString":"contract IWhitelist"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7915,"name":"whitelistAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"1387:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7914,"name":"IWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"1376:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWhitelist_$7823_$","typeString":"type(contract IWhitelist)"}},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWhitelist_$7823","typeString":"contract IWhitelist"}},"src":"1364:37:21","typeDescriptions":{"typeIdentifier":"t_contract$_IWhitelist_$7823","typeString":"contract IWhitelist"}},"id":7918,"nodeType":"ExpressionStatement","src":"1364:37:21"},{"expression":{"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7919,"name":"quota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"1411:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7920,"name":"quota_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"1419:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1411:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7922,"nodeType":"ExpressionStatement","src":"1411:14:21"}]},"functionSelector":"f7013ef6","id":7924,"implemented":true,"kind":"function","modifiers":[{"id":7895,"kind":"modifierInvocation","modifierName":{"id":7894,"name":"initializer","nameLocations":["1228:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1228:11:21"},"nodeType":"ModifierInvocation","src":"1228:11:21"}],"name":"initialize","nameLocation":"1061:10:21","nodeType":"FunctionDefinition","parameters":{"id":7893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7884,"mutability":"mutable","name":"initialOwner","nameLocation":"1089:12:21","nodeType":"VariableDeclaration","scope":7924,"src":"1081:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7883,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7886,"mutability":"mutable","name":"tokenAddress","nameLocation":"1119:12:21","nodeType":"VariableDeclaration","scope":7924,"src":"1111:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7885,"name":"address","nodeType":"ElementaryTypeName","src":"1111:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7888,"mutability":"mutable","name":"nftAddress","nameLocation":"1149:10:21","nodeType":"VariableDeclaration","scope":7924,"src":"1141:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7887,"name":"address","nodeType":"ElementaryTypeName","src":"1141:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7890,"mutability":"mutable","name":"whitelistAddr","nameLocation":"1177:13:21","nodeType":"VariableDeclaration","scope":7924,"src":"1169:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7889,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7892,"mutability":"mutable","name":"quota_","nameLocation":"1208:6:21","nodeType":"VariableDeclaration","scope":7924,"src":"1200:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:149:21"},"returnParameters":{"id":7896,"nodeType":"ParameterList","parameters":[],"src":"1240:0:21"},"scope":8220,"src":"1052:380:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7977,"nodeType":"Block","src":"1490:319:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"1508:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1517:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1508:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":7935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1520:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":7931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1500:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7937,"nodeType":"ExpressionStatement","src":"1500:41:21"},{"assignments":[7939],"declarations":[{"constant":false,"id":7939,"mutability":"mutable","name":"allowance","nameLocation":"1560:9:21","nodeType":"VariableDeclaration","scope":7977,"src":"1552:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7949,"initialValue":{"arguments":[{"expression":{"id":7942,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1588:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1592:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1588:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7946,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1608:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}],"id":7945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1600:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7944,"name":"address","nodeType":"ElementaryTypeName","src":"1600:7:21","typeDescriptions":{}}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1600:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7940,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"1572:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1578:9:21","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2483,"src":"1572:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1572:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1552:62:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7951,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"1632:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7952,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"1645:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1632:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":7954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1653:24:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":7950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1624:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1624:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7956,"nodeType":"ExpressionStatement","src":"1624:54:21"},{"expression":{"arguments":[{"arguments":[{"id":7960,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"1715:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}],"id":7959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1707:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7958,"name":"address","nodeType":"ElementaryTypeName","src":"1707:7:21","typeDescriptions":{}}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1707:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1723:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1727:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1723:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7966,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1743:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}],"id":7965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1735:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7964,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:21","typeDescriptions":{}}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"1750:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7957,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"1689:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1689:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7970,"nodeType":"ExpressionStatement","src":"1689:68:21"},{"eventCall":{"arguments":[{"expression":{"id":7972,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1783:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1787:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1783:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7974,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"1795:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7971,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"1773:9:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7976,"nodeType":"EmitStatement","src":"1768:34:21"}]},"functionSelector":"b6b55f25","id":7978,"implemented":true,"kind":"function","modifiers":[{"id":7929,"kind":"modifierInvocation","modifierName":{"id":7928,"name":"onlyOwner","nameLocations":["1480:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1480:9:21"},"nodeType":"ModifierInvocation","src":"1480:9:21"}],"name":"deposit","nameLocation":"1447:7:21","nodeType":"FunctionDefinition","parameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"amount","nameLocation":"1463:6:21","nodeType":"VariableDeclaration","scope":7978,"src":"1455:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1454:16:21"},"returnParameters":{"id":7930,"nodeType":"ParameterList","parameters":[],"src":"1490:0:21"},"scope":8220,"src":"1438:371:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8057,"nodeType":"Block","src":"1841:524:21","statements":[{"expression":{"arguments":[{"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1859:20:21","subExpression":{"baseExpression":{"id":7982,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"1860:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7985,"indexExpression":{"expression":{"id":7983,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1868:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1872:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1868:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1860:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1881:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":7981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1851:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1851:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7989,"nodeType":"ExpressionStatement","src":"1851:48:21"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1941:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1945:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1941:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7991,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"1917:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IWhitelist_$7823","typeString":"contract IWhitelist"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1927:13:21","memberName":"isWhitelisted","nodeType":"MemberAccess","referencedDeclaration":7817,"src":"1917:23:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1917:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742077686974656c6973746564","id":7996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1954:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0","typeString":"literal_string \"Not whitelisted\""},"value":"Not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0","typeString":"literal_string \"Not whitelisted\""}],"id":7990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1909:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7998,"nodeType":"ExpressionStatement","src":"1909:63:21"},{"assignments":[8000],"declarations":[{"constant":false,"id":8000,"mutability":"mutable","name":"tokenId","nameLocation":"1991:7:21","nodeType":"VariableDeclaration","scope":8057,"src":"1983:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8001,"nodeType":"VariableDeclarationStatement","src":"1983:15:21"},{"clauses":[{"block":{"id":8014,"nodeType":"Block","src":"2054:37:21","statements":[{"expression":{"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8010,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"2068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8011,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"2078:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2068:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8013,"nodeType":"ExpressionStatement","src":"2068:12:21"}]},"errorName":"","id":8015,"nodeType":"TryCatchClause","parameters":{"id":8009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8008,"mutability":"mutable","name":"id","nameLocation":"2050:2:21","nodeType":"VariableDeclaration","scope":8015,"src":"2042:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:12:21"},"src":"2033:58:21"},{"block":{"id":8030,"nodeType":"Block","src":"2126:86:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"4e4654206d696e74206661696c65643a20","id":8024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2171:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc","typeString":"literal_string \"NFT mint failed: \""},"value":"NFT mint failed: "},{"id":8025,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"2192:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc","typeString":"literal_string \"NFT mint failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8022,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2154:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2158:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2154:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8020,"name":"string","nodeType":"ElementaryTypeName","src":"2147:6:21","typeDescriptions":{}}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8019,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2140:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2140:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8029,"nodeType":"ExpressionStatement","src":"2140:61:21"}]},"errorName":"Error","id":8031,"nodeType":"TryCatchClause","parameters":{"id":8018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8017,"mutability":"mutable","name":"reason","nameLocation":"2118:6:21","nodeType":"VariableDeclaration","scope":8031,"src":"2104:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8016,"name":"string","nodeType":"ElementaryTypeName","src":"2104:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2103:22:21"},"src":"2092:120:21"}],"externalCall":{"arguments":[{"expression":{"id":8004,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2021:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2025:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2021:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8002,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"2012:3:21","typeDescriptions":{"typeIdentifier":"t_contract$_ICustomNFT_$7810","typeString":"contract ICustomNFT"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2016:4:21","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"2012:8:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) external returns (uint256)"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:20:21","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8032,"nodeType":"TryStatement","src":"2008:204:21"},{"expression":{"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8033,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"2222:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8036,"indexExpression":{"expression":{"id":8034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2230:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2234:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2230:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2222:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2244:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2222:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8039,"nodeType":"ExpressionStatement","src":"2222:26:21"},{"expression":{"arguments":[{"arguments":[{"id":8043,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"2281:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}],"id":8042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8041,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:21","typeDescriptions":{}}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2289:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2293:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2289:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8047,"name":"quota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"2301:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8040,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"2259:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8049,"nodeType":"ExpressionStatement","src":"2259:48:21"},{"eventCall":{"arguments":[{"expression":{"id":8051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2331:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2335:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2331:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8053,"name":"quota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"2350:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8050,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"2323:7:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8056,"nodeType":"EmitStatement","src":"2318:40:21"}]},"functionSelector":"4e71d92d","id":8058,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1824:5:21","nodeType":"FunctionDefinition","parameters":{"id":7979,"nodeType":"ParameterList","parameters":[],"src":"1829:2:21"},"returnParameters":{"id":7980,"nodeType":"ParameterList","parameters":[],"src":"1841:0:21"},"scope":8220,"src":"1815:550:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8085,"nodeType":"Block","src":"2429:156:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8066,"name":"newQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"2447:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2458:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2447:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"51756f7461206d757374206265203e2030","id":8069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2461:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337","typeString":"literal_string \"Quota must be > 0\""},"value":"Quota must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337","typeString":"literal_string \"Quota must be > 0\""}],"id":8065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2439:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8071,"nodeType":"ExpressionStatement","src":"2439:42:21"},{"assignments":[8073],"declarations":[{"constant":false,"id":8073,"mutability":"mutable","name":"old","nameLocation":"2499:3:21","nodeType":"VariableDeclaration","scope":8085,"src":"2491:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8075,"initialValue":{"id":8074,"name":"quota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"2505:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2491:19:21"},{"expression":{"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8076,"name":"quota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"2520:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8077,"name":"newQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"2528:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8079,"nodeType":"ExpressionStatement","src":"2520:16:21"},{"eventCall":{"arguments":[{"id":8081,"name":"old","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"2564:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8082,"name":"newQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"2569:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8080,"name":"QuotaUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"2551:12:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8084,"nodeType":"EmitStatement","src":"2546:32:21"}]},"functionSelector":"41107b64","id":8086,"implemented":true,"kind":"function","modifiers":[{"id":8063,"kind":"modifierInvocation","modifierName":{"id":8062,"name":"onlyOwner","nameLocations":["2419:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2419:9:21"},"nodeType":"ModifierInvocation","src":"2419:9:21"}],"name":"updateQuota","nameLocation":"2380:11:21","nodeType":"FunctionDefinition","parameters":{"id":8061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8060,"mutability":"mutable","name":"newQuota","nameLocation":"2400:8:21","nodeType":"VariableDeclaration","scope":8086,"src":"2392:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2392:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2391:18:21"},"returnParameters":{"id":8064,"nodeType":"ParameterList","parameters":[],"src":"2429:0:21"},"scope":8220,"src":"2371:214:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8127,"nodeType":"Block","src":"2653:229:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"2671:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2680:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2671:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":8097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2683:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":8093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2663:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8099,"nodeType":"ExpressionStatement","src":"2663:41:21"},{"assignments":[8101],"declarations":[{"constant":false,"id":8101,"mutability":"mutable","name":"bal","nameLocation":"2723:3:21","nodeType":"VariableDeclaration","scope":8127,"src":"2715:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8109,"initialValue":{"arguments":[{"arguments":[{"id":8106,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2753:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}],"id":8105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2745:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8104,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:21","typeDescriptions":{}}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2745:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8102,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"2729:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2735:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2463,"src":"2729:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:44:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8111,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"2777:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8112,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"2784:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2777:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":8114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2792:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":8110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2769:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2769:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8116,"nodeType":"ExpressionStatement","src":"2769:46:21"},{"expression":{"arguments":[{"arguments":[{"id":8120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"2848:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2506","typeString":"contract IERC20"}],"id":8119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2840:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8118,"name":"address","nodeType":"ElementaryTypeName","src":"2840:7:21","typeDescriptions":{}}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2840:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2856:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2860:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2856:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"2868:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8117,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"2826:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8126,"nodeType":"ExpressionStatement","src":"2826:49:21"}]},"functionSelector":"5312ea8e","id":8128,"implemented":true,"kind":"function","modifiers":[{"id":8091,"kind":"modifierInvocation","modifierName":{"id":8090,"name":"onlyOwner","nameLocations":["2643:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2643:9:21"},"nodeType":"ModifierInvocation","src":"2643:9:21"}],"name":"emergencyWithdraw","nameLocation":"2600:17:21","nodeType":"FunctionDefinition","parameters":{"id":8089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8088,"mutability":"mutable","name":"amount","nameLocation":"2626:6:21","nodeType":"VariableDeclaration","scope":8128,"src":"2618:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2617:16:21"},"returnParameters":{"id":8092,"nodeType":"ParameterList","parameters":[],"src":"2653:0:21"},"scope":8220,"src":"2591:291:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8171,"nodeType":"Block","src":"3012:249:21","statements":[{"assignments":[8139,8141],"declarations":[{"constant":false,"id":8139,"mutability":"mutable","name":"success","nameLocation":"3028:7:21","nodeType":"VariableDeclaration","scope":8171,"src":"3023:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8138,"name":"bool","nodeType":"ElementaryTypeName","src":"3023:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8141,"mutability":"mutable","name":"data","nameLocation":"3050:4:21","nodeType":"VariableDeclaration","scope":8171,"src":"3037:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8140,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8151,"initialValue":{"arguments":[{"arguments":[{"id":8146,"name":"TRANSFER_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"3106:17:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"3125:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"3129:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8144,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3083:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3087:18:21","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3083:22:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8142,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"3058:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:4:21","memberName":"call","nodeType":"MemberAccess","src":"3058:11:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3058:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3022:123:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"3163:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8154,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"3175:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3180:6:21","memberName":"length","nodeType":"MemberAccess","src":"3175:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3190:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3175:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":8160,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"3206:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3213:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":8161,"name":"bool","nodeType":"ElementaryTypeName","src":"3213:4:21","typeDescriptions":{}}}],"id":8163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3212:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":8158,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3195:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3199:6:21","memberName":"decode","nodeType":"MemberAccess","src":"3195:10:21","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3195:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3175:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3174:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3163:57:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166655472616e736665723a205452414e534645525f4641494c4544","id":8168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3222:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d89a2979883566442be80f0ed877da6c14ac8580d723a60c5d3958b55bf598a8","typeString":"literal_string \"SafeTransfer: TRANSFER_FAILED\""},"value":"SafeTransfer: TRANSFER_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d89a2979883566442be80f0ed877da6c14ac8580d723a60c5d3958b55bf598a8","typeString":"literal_string \"SafeTransfer: TRANSFER_FAILED\""}],"id":8152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3155:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3155:99:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8170,"nodeType":"ExpressionStatement","src":"3155:99:21"}]},"documentation":{"id":8129,"nodeType":"StructuredDocumentation","src":"2888:45:21","text":"@dev 安全转账，适配非标准 ERC20"},"id":8172,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"2947:13:21","nodeType":"FunctionDefinition","parameters":{"id":8136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8131,"mutability":"mutable","name":"token_","nameLocation":"2969:6:21","nodeType":"VariableDeclaration","scope":8172,"src":"2961:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8130,"name":"address","nodeType":"ElementaryTypeName","src":"2961:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8133,"mutability":"mutable","name":"to","nameLocation":"2985:2:21","nodeType":"VariableDeclaration","scope":8172,"src":"2977:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8132,"name":"address","nodeType":"ElementaryTypeName","src":"2977:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8135,"mutability":"mutable","name":"value","nameLocation":"2997:5:21","nodeType":"VariableDeclaration","scope":8172,"src":"2989:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2960:43:21"},"returnParameters":{"id":8137,"nodeType":"ParameterList","parameters":[],"src":"3012:0:21"},"scope":8220,"src":"2938:323:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8218,"nodeType":"Block","src":"3413:264:21","statements":[{"assignments":[8185,8187],"declarations":[{"constant":false,"id":8185,"mutability":"mutable","name":"success","nameLocation":"3429:7:21","nodeType":"VariableDeclaration","scope":8218,"src":"3424:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8184,"name":"bool","nodeType":"ElementaryTypeName","src":"3424:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8187,"mutability":"mutable","name":"data","nameLocation":"3451:4:21","nodeType":"VariableDeclaration","scope":8218,"src":"3438:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8186,"name":"bytes","nodeType":"ElementaryTypeName","src":"3438:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8198,"initialValue":{"arguments":[{"arguments":[{"id":8192,"name":"TRANSFER_FROM_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"3507:22:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8193,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"3531:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8194,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"3537:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"3541:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8190,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3484:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3488:18:21","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3484:22:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3484:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8188,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8175,"src":"3459:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3466:4:21","memberName":"call","nodeType":"MemberAccess","src":"3459:11:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3459:98:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3423:134:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8200,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"3575:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8201,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"3587:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3592:6:21","memberName":"length","nodeType":"MemberAccess","src":"3587:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3602:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3587:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":8207,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"3618:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3625:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":8208,"name":"bool","nodeType":"ElementaryTypeName","src":"3625:4:21","typeDescriptions":{}}}],"id":8210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3624:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":8205,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3607:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3611:6:21","memberName":"decode","nodeType":"MemberAccess","src":"3607:10:21","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3607:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3587:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3586:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3575:57:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166655472616e7366657246726f6d3a205452414e534645525f4641494c4544","id":8215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3634:35:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_02976719d8645cd6cf8c6ef1ffe433708562981f118190e2ded774c1462eed8c","typeString":"literal_string \"SafeTransferFrom: TRANSFER_FAILED\""},"value":"SafeTransferFrom: TRANSFER_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_02976719d8645cd6cf8c6ef1ffe433708562981f118190e2ded774c1462eed8c","typeString":"literal_string \"SafeTransferFrom: TRANSFER_FAILED\""}],"id":8199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3567:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:103:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8217,"nodeType":"ExpressionStatement","src":"3567:103:21"}]},"documentation":{"id":8173,"nodeType":"StructuredDocumentation","src":"3267:49:21","text":"@dev 安全转账From，适配非标准 ERC20"},"id":8219,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"3330:17:21","nodeType":"FunctionDefinition","parameters":{"id":8182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8175,"mutability":"mutable","name":"token_","nameLocation":"3356:6:21","nodeType":"VariableDeclaration","scope":8219,"src":"3348:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8174,"name":"address","nodeType":"ElementaryTypeName","src":"3348:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8177,"mutability":"mutable","name":"from","nameLocation":"3372:4:21","nodeType":"VariableDeclaration","scope":8219,"src":"3364:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8176,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8179,"mutability":"mutable","name":"to","nameLocation":"3386:2:21","nodeType":"VariableDeclaration","scope":8219,"src":"3378:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8178,"name":"address","nodeType":"ElementaryTypeName","src":"3378:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8181,"mutability":"mutable","name":"value","nameLocation":"3398:5:21","nodeType":"VariableDeclaration","scope":8219,"src":"3390:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8180,"name":"uint256","nodeType":"ElementaryTypeName","src":"3390:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3347:57:21"},"returnParameters":{"id":8183,"nodeType":"ParameterList","parameters":[],"src":"3413:0:21"},"scope":8220,"src":"3321:356:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":8221,"src":"425:3254:21","usedErrors":[30,35,211,214],"usedEvents":[41,219,7846,7854,7860]}],"src":"32:3648:21"},"id":21},"contracts/CustomNFT.sol":{"ast":{"absolutePath":"contracts/CustomNFT.sol","exportedSymbols":{"ContextUpgradeable":[1588],"CustomNFT":[8335],"ERC165Upgradeable":[1628],"ERC721Upgradeable":[1542],"ERC721Utils":[2772],"IERC165":[4268],"IERC721":[2649],"IERC721Errors":[1866],"IERC721Metadata":[2695],"Initializable":[462],"Strings":[4256]},"id":8336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":8223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8336,"sourceUnit":1543,"src":"57:80:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8336,"sourceUnit":463,"src":"138:75:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8226,"name":"Initializable","nameLocations":["333:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"333:13:22"},"id":8227,"nodeType":"InheritanceSpecifier","src":"333:13:22"},{"baseName":{"id":8228,"name":"ERC721Upgradeable","nameLocations":["348:17:22"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"348:17:22"},"id":8229,"nodeType":"InheritanceSpecifier","src":"348:17:22"}],"canonicalName":"CustomNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":8225,"nodeType":"StructuredDocumentation","src":"215:95:22","text":" @title CustomNFT\n @notice ERC721 NFT with minting restricted to the Claim contract"},"fullyImplemented":true,"id":8335,"linearizedBaseContracts":[8335,1542,1866,2695,2649,1628,4268,1588,462],"name":"CustomNFT","nameLocation":"320:9:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8231,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"387:13:22","nodeType":"VariableDeclaration","scope":8335,"src":"372:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8230,"name":"string","nodeType":"ElementaryTypeName","src":"372:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"66345da4","id":8233,"mutability":"mutable","name":"claimContract","nameLocation":"421:13:22","nodeType":"VariableDeclaration","scope":8335,"src":"406:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8232,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":8235,"mutability":"mutable","name":"_tokenIdTracker","nameLocation":"456:15:22","nodeType":"VariableDeclaration","scope":8335,"src":"440:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8234,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":8246,"nodeType":"Block","src":"499:96:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"517:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"521:6:22","memberName":"sender","nodeType":"MemberAccess","src":"517:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8240,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"531:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"517:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420636c61696d20636f6e7472616374","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"546:30:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a2b06c872673ea36eb1847032004b38488ea190b880826ef29c3bf30179c5c9","typeString":"literal_string \"Caller is not claim contract\""},"value":"Caller is not claim contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a2b06c872673ea36eb1847032004b38488ea190b880826ef29c3bf30179c5c9","typeString":"literal_string \"Caller is not claim contract\""}],"id":8237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"509:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"509:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8244,"nodeType":"ExpressionStatement","src":"509:68:22"},{"id":8245,"nodeType":"PlaceholderStatement","src":"587:1:22"}]},"id":8247,"name":"onlyClaim","nameLocation":"487:9:22","nodeType":"ModifierDefinition","parameters":{"id":8236,"nodeType":"ParameterList","parameters":[],"src":"496:2:22"},"src":"478:117:22","virtual":false,"visibility":"internal"},{"body":{"id":8278,"nodeType":"Block","src":"1002:149:22","statements":[{"expression":{"arguments":[{"id":8262,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"1026:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8263,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"1033:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8261,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1012:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1012:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8265,"nodeType":"ExpressionStatement","src":"1012:29:22"},{"expression":{"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8266,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"1051:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8267,"name":"baseURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"1067:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1051:24:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8269,"nodeType":"ExpressionStatement","src":"1051:24:22"},{"expression":{"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8270,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"1085:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8271,"name":"claimContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"1101:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1085:30:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8273,"nodeType":"ExpressionStatement","src":"1085:30:22"},{"expression":{"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8274,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"1125:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":8275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1143:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1125:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8277,"nodeType":"ExpressionStatement","src":"1125:19:22"}]},"documentation":{"id":8248,"nodeType":"StructuredDocumentation","src":"601:227:22","text":" @notice Initializes the NFT contract\n @param name_ Token name\n @param symbol_ Token symbol\n @param baseURI_ Base URI for all tokens\n @param claimContract_ Address of the Claim contract"},"functionSelector":"5c6d8da1","id":8279,"implemented":true,"kind":"function","modifiers":[{"id":8259,"kind":"modifierInvocation","modifierName":{"id":8258,"name":"initializer","nameLocations":["990:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"990:11:22"},"nodeType":"ModifierInvocation","src":"990:11:22"}],"name":"initialize","nameLocation":"842:10:22","nodeType":"FunctionDefinition","parameters":{"id":8257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8250,"mutability":"mutable","name":"name_","nameLocation":"876:5:22","nodeType":"VariableDeclaration","scope":8279,"src":"862:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8249,"name":"string","nodeType":"ElementaryTypeName","src":"862:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8252,"mutability":"mutable","name":"symbol_","nameLocation":"905:7:22","nodeType":"VariableDeclaration","scope":8279,"src":"891:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8251,"name":"string","nodeType":"ElementaryTypeName","src":"891:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8254,"mutability":"mutable","name":"baseURI_","nameLocation":"936:8:22","nodeType":"VariableDeclaration","scope":8279,"src":"922:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8253,"name":"string","nodeType":"ElementaryTypeName","src":"922:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8256,"mutability":"mutable","name":"claimContract_","nameLocation":"962:14:22","nodeType":"VariableDeclaration","scope":8279,"src":"954:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8255,"name":"address","nodeType":"ElementaryTypeName","src":"954:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:130:22"},"returnParameters":{"id":8260,"nodeType":"ParameterList","parameters":[],"src":"1002:0:22"},"scope":8335,"src":"833:318:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8303,"nodeType":"Block","src":"1356:133:22","statements":[{"assignments":[8290],"declarations":[{"constant":false,"id":8290,"mutability":"mutable","name":"tokenId","nameLocation":"1374:7:22","nodeType":"VariableDeclaration","scope":8303,"src":"1366:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8292,"initialValue":{"id":8291,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"1384:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1366:33:22"},{"expression":{"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1409:17:22","subExpression":{"id":8293,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"1409:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8295,"nodeType":"ExpressionStatement","src":"1409:17:22"},{"expression":{"arguments":[{"id":8297,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"1446:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"1450:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8296,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1204,"src":"1436:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1436:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8300,"nodeType":"ExpressionStatement","src":"1436:22:22"},{"expression":{"id":8301,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"1475:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8288,"id":8302,"nodeType":"Return","src":"1468:14:22"}]},"documentation":{"id":8280,"nodeType":"StructuredDocumentation","src":"1157:131:22","text":" @notice Mint a new NFT to an address\n @param to Recipient address\n @return tokenId of the minted NFT"},"functionSelector":"6a627842","id":8304,"implemented":true,"kind":"function","modifiers":[{"id":8285,"kind":"modifierInvocation","modifierName":{"id":8284,"name":"onlyClaim","nameLocations":["1328:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":8247,"src":"1328:9:22"},"nodeType":"ModifierInvocation","src":"1328:9:22"}],"name":"mint","nameLocation":"1302:4:22","nodeType":"FunctionDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"to","nameLocation":"1315:2:22","nodeType":"VariableDeclaration","scope":8304,"src":"1307:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8281,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1306:12:22"},"returnParameters":{"id":8288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8304,"src":"1347:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1346:9:22"},"scope":8335,"src":"1293:196:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8324,"nodeType":"Block","src":"1693:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8311,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"1711:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1728:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8312,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:22","typeDescriptions":{}}},"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1728:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1711:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20636f6e747261637420616c726561647920736574","id":8317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1740:28:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b088184b95d3a833e7091eeb0162c048f8937d56896dab2ddbe6be00c0339c45","typeString":"literal_string \"Claim contract already set\""},"value":"Claim contract already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b088184b95d3a833e7091eeb0162c048f8937d56896dab2ddbe6be00c0339c45","typeString":"literal_string \"Claim contract already set\""}],"id":8310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1703:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1703:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8319,"nodeType":"ExpressionStatement","src":"1703:66:22"},{"expression":{"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8320,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"1779:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8321,"name":"_claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"1795:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1779:30:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8323,"nodeType":"ExpressionStatement","src":"1779:30:22"}]},"documentation":{"id":8305,"nodeType":"StructuredDocumentation","src":"1496:133:22","text":" @notice Set the Claim contract address (for future use)\n @param _claimContract Address of the Claim contract"},"functionSelector":"4a30d3eb","id":8325,"implemented":true,"kind":"function","modifiers":[],"name":"setClaimContract","nameLocation":"1643:16:22","nodeType":"FunctionDefinition","parameters":{"id":8308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8307,"mutability":"mutable","name":"_claimContract","nameLocation":"1668:14:22","nodeType":"VariableDeclaration","scope":8325,"src":"1660:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8306,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1659:24:22"},"returnParameters":{"id":8309,"nodeType":"ParameterList","parameters":[],"src":"1693:0:22"},"scope":8335,"src":"1634:182:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[733],"body":{"id":8333,"nodeType":"Block","src":"1889:37:22","statements":[{"expression":{"id":8331,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"1906:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8330,"id":8332,"nodeType":"Return","src":"1899:20:22"}]},"id":8334,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1831:8:22","nodeType":"FunctionDefinition","overrides":{"id":8327,"nodeType":"OverrideSpecifier","overrides":[],"src":"1856:8:22"},"parameters":{"id":8326,"nodeType":"ParameterList","parameters":[],"src":"1839:2:22"},"returnParameters":{"id":8330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8334,"src":"1874:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8328,"name":"string","nodeType":"ElementaryTypeName","src":"1874:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1873:15:22"},"scope":8335,"src":"1822:104:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":8336,"src":"311:1619:22","usedErrors":[211,214,1824,1829,1838,1843,1848,1855,1860,1865],"usedEvents":[219,2548,2557,2566]}],"src":"32:1900:22"},"id":22},"contracts/Factory3.sol":{"ast":{"absolutePath":"contracts/Factory3.sol","exportedSymbols":{"Claim":[8220],"ContextUpgradeable":[1588],"CustomNFT":[8335],"ERC165Upgradeable":[1628],"ERC721Upgradeable":[1542],"ERC721Utils":[2772],"Factory3":[8577],"ICustomNFT":[7810],"IERC165":[4268],"IERC20":[2506],"IERC721":[2649],"IERC721Errors":[1866],"IERC721Metadata":[2695],"IWhitelist":[7823],"Initializable":[462],"OwnableUpgradeable":[194],"Strings":[4256],"Whitelist":[8784]},"id":8578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"contracts/Whitelist.sol","file":"./Whitelist.sol","id":8338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8578,"sourceUnit":8785,"src":"57:25:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CustomNFT.sol","file":"./CustomNFT.sol","id":8339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8578,"sourceUnit":8336,"src":"83:25:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Claim.sol","file":"./Claim.sol","id":8340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8578,"sourceUnit":8221,"src":"109:21:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Factory3","contractDependencies":[8220,8335,8784],"contractKind":"contract","fullyImplemented":true,"id":8577,"linearizedBaseContracts":[8577],"name":"Factory3","nameLocation":"141:8:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Factory3.ProjectInfo","id":8349,"members":[{"constant":false,"id":8342,"mutability":"mutable","name":"whitelist","nameLocation":"193:9:23","nodeType":"VariableDeclaration","scope":8349,"src":"185:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8341,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8344,"mutability":"mutable","name":"nft","nameLocation":"220:3:23","nodeType":"VariableDeclaration","scope":8349,"src":"212:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8343,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8346,"mutability":"mutable","name":"claim","nameLocation":"241:5:23","nodeType":"VariableDeclaration","scope":8349,"src":"233:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8345,"name":"address","nodeType":"ElementaryTypeName","src":"233:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8348,"mutability":"mutable","name":"exists","nameLocation":"261:6:23","nodeType":"VariableDeclaration","scope":8349,"src":"256:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8347,"name":"bool","nodeType":"ElementaryTypeName","src":"256:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ProjectInfo","nameLocation":"163:11:23","nodeType":"StructDefinition","scope":8577,"src":"156:118:23","visibility":"public"},{"constant":false,"functionSelector":"b96ea12d","id":8354,"mutability":"mutable","name":"projects","nameLocation":"319:8:23","nodeType":"VariableDeclaration","scope":8577,"src":"280:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ProjectInfo_$8349_storage_$","typeString":"mapping(bytes32 => struct Factory3.ProjectInfo)"},"typeName":{"id":8353,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"288:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"280:31:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ProjectInfo_$8349_storage_$","typeString":"mapping(bytes32 => struct Factory3.ProjectInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8352,"nodeType":"UserDefinedTypeName","pathNode":{"id":8351,"name":"ProjectInfo","nameLocations":["299:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8349,"src":"299:11:23"},"referencedDeclaration":8349,"src":"299:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectInfo_$8349_storage_ptr","typeString":"struct Factory3.ProjectInfo"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"252140508571b30a9b5a0127624e23960717e21758b1750e83207023ff3c0eaa","id":8364,"name":"ProjectDeployed","nameLocation":"340:15:23","nodeType":"EventDefinition","parameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8356,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"381:9:23","nodeType":"VariableDeclaration","scope":8364,"src":"365:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"365:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8358,"indexed":false,"mutability":"mutable","name":"whitelistContract","nameLocation":"408:17:23","nodeType":"VariableDeclaration","scope":8364,"src":"400:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8357,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8360,"indexed":false,"mutability":"mutable","name":"nftContract","nameLocation":"443:11:23","nodeType":"VariableDeclaration","scope":8364,"src":"435:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8359,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8362,"indexed":false,"mutability":"mutable","name":"claimContract","nameLocation":"472:13:23","nodeType":"VariableDeclaration","scope":8364,"src":"464:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8361,"name":"address","nodeType":"ElementaryTypeName","src":"464:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"355:136:23"},"src":"334:158:23"},{"body":{"id":8575,"nodeType":"Block","src":"978:2183:23","statements":[{"expression":{"arguments":[{"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"996:27:23","subExpression":{"expression":{"baseExpression":{"id":8387,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"997:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ProjectInfo_$8349_storage_$","typeString":"mapping(bytes32 => struct Factory3.ProjectInfo storage ref)"}},"id":8389,"indexExpression":{"id":8388,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"1006:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"997:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectInfo_$8349_storage","typeString":"struct Factory3.ProjectInfo storage ref"}},"id":8390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1017:6:23","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":8348,"src":"997:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a65637420494420657869737473","id":8392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1025:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c09682283f2f9884e0ca47f0e0660b6f79192bc0c7211f33fec920217ff4bcef","typeString":"literal_string \"Project ID exists\""},"value":"Project ID exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c09682283f2f9884e0ca47f0e0660b6f79192bc0c7211f33fec920217ff4bcef","typeString":"literal_string \"Project ID exists\""}],"id":8386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"988:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8394,"nodeType":"ExpressionStatement","src":"988:57:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8396,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"1063:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1079:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8397,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:23","typeDescriptions":{}}},"id":8400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1079:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1063:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1091:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":8395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1055:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8404,"nodeType":"ExpressionStatement","src":"1055:60:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8408,"name":"nftName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"1139:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1133:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8406,"name":"bytes","nodeType":"ElementaryTypeName","src":"1133:5:23","typeDescriptions":{}}},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1133:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1148:6:23","memberName":"length","nodeType":"MemberAccess","src":"1133:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1133:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d707479204e4654206e616d65","id":8413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1160:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4adfa440da5a380b98aecdd79231a3fc616ccb7aae303b6a6d83f6b5159d693","typeString":"literal_string \"Empty NFT name\""},"value":"Empty NFT name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4adfa440da5a380b98aecdd79231a3fc616ccb7aae303b6a6d83f6b5159d693","typeString":"literal_string \"Empty NFT name\""}],"id":8405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1125:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8415,"nodeType":"ExpressionStatement","src":"1125:52:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8419,"name":"nftSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"1201:9:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1195:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8417,"name":"bytes","nodeType":"ElementaryTypeName","src":"1195:5:23","typeDescriptions":{}}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1212:6:23","memberName":"length","nodeType":"MemberAccess","src":"1195:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1221:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1195:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d707479204e46542073796d626f6c","id":8424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1224:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a07340163f27fcae402e0c887e21c4542a001efe5445ab4fc7f783edba82e756","typeString":"literal_string \"Empty NFT symbol\""},"value":"Empty NFT symbol"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a07340163f27fcae402e0c887e21c4542a001efe5445ab4fc7f783edba82e756","typeString":"literal_string \"Empty NFT symbol\""}],"id":8416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1187:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1187:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8426,"nodeType":"ExpressionStatement","src":"1187:56:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8428,"name":"claimQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"1261:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1274:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1261:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"51756f7461206d757374206265203e2030","id":8431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1277:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337","typeString":"literal_string \"Quota must be > 0\""},"value":"Quota must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337","typeString":"literal_string \"Quota must be > 0\""}],"id":8427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1253:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1253:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8433,"nodeType":"ExpressionStatement","src":"1253:44:23"},{"id":8467,"nodeType":"Block","src":"1351:372:23","statements":[{"assignments":[8435],"declarations":[{"constant":false,"id":8435,"mutability":"mutable","name":"wlCode","nameLocation":"1378:6:23","nodeType":"VariableDeclaration","scope":8467,"src":"1365:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8434,"name":"bytes","nodeType":"ElementaryTypeName","src":"1365:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8440,"initialValue":{"expression":{"arguments":[{"id":8437,"name":"Whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8784,"src":"1392:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Whitelist_$8784_$","typeString":"type(contract Whitelist)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Whitelist_$8784_$","typeString":"type(contract Whitelist)"}],"id":8436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1387:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1387:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Whitelist_$8784","typeString":"type(contract Whitelist)"}},"id":8439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1403:12:23","memberName":"creationCode","nodeType":"MemberAccess","src":"1387:28:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1365:50:23"},{"assignments":[8442],"declarations":[{"constant":false,"id":8442,"mutability":"mutable","name":"addr","nameLocation":"1445:4:23","nodeType":"VariableDeclaration","scope":8467,"src":"1429:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8441,"name":"address","nodeType":"ElementaryTypeName","src":"1429:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":8443,"nodeType":"VariableDeclarationStatement","src":"1429:20:23"},{"AST":{"nativeSrc":"1472:83:23","nodeType":"YulBlock","src":"1472:83:23","statements":[{"nativeSrc":"1490:51:23","nodeType":"YulAssignment","src":"1490:51:23","value":{"arguments":[{"kind":"number","nativeSrc":"1505:1:23","nodeType":"YulLiteral","src":"1505:1:23","type":"","value":"0"},{"arguments":[{"name":"wlCode","nativeSrc":"1512:6:23","nodeType":"YulIdentifier","src":"1512:6:23"},{"kind":"number","nativeSrc":"1520:4:23","nodeType":"YulLiteral","src":"1520:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1508:3:23","nodeType":"YulIdentifier","src":"1508:3:23"},"nativeSrc":"1508:17:23","nodeType":"YulFunctionCall","src":"1508:17:23"},{"arguments":[{"name":"wlCode","nativeSrc":"1533:6:23","nodeType":"YulIdentifier","src":"1533:6:23"}],"functionName":{"name":"mload","nativeSrc":"1527:5:23","nodeType":"YulIdentifier","src":"1527:5:23"},"nativeSrc":"1527:13:23","nodeType":"YulFunctionCall","src":"1527:13:23"}],"functionName":{"name":"create","nativeSrc":"1498:6:23","nodeType":"YulIdentifier","src":"1498:6:23"},"nativeSrc":"1498:43:23","nodeType":"YulFunctionCall","src":"1498:43:23"},"variableNames":[{"name":"addr","nativeSrc":"1490:4:23","nodeType":"YulIdentifier","src":"1490:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8442,"isOffset":false,"isSlot":false,"src":"1490:4:23","valueSize":1},{"declaration":8435,"isOffset":false,"isSlot":false,"src":"1512:6:23","valueSize":1},{"declaration":8435,"isOffset":false,"isSlot":false,"src":"1533:6:23","valueSize":1}],"id":8444,"nodeType":"InlineAssembly","src":"1463:92:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8446,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"1576:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1592:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1584:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8447,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:23","typeDescriptions":{}}},"id":8450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1576:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57686974656c697374206465706c6f79206661696c6564","id":8452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1596:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_51a33edf6c53ac64407bbad4a95f4ef56f6b4dea5e575a14b604e2b90ec7c7e4","typeString":"literal_string \"Whitelist deploy failed\""},"value":"Whitelist deploy failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51a33edf6c53ac64407bbad4a95f4ef56f6b4dea5e575a14b604e2b90ec7c7e4","typeString":"literal_string \"Whitelist deploy failed\""}],"id":8445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1568:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8454,"nodeType":"ExpressionStatement","src":"1568:54:23"},{"expression":{"arguments":[{"expression":{"id":8459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1663:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1667:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1663:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8456,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"1646:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8455,"name":"Whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8784,"src":"1636:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Whitelist_$8784_$","typeString":"type(contract Whitelist)"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Whitelist_$8784","typeString":"contract Whitelist"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1652:10:23","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":8695,"src":"1636:26:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8462,"nodeType":"ExpressionStatement","src":"1636:38:23"},{"expression":{"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8463,"name":"whitelistContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"1688:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8464,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"1708:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1688:24:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8466,"nodeType":"ExpressionStatement","src":"1688:24:23"}]},{"id":8506,"nodeType":"Block","src":"1806:392:23","statements":[{"assignments":[8469],"declarations":[{"constant":false,"id":8469,"mutability":"mutable","name":"nftCode","nameLocation":"1833:7:23","nodeType":"VariableDeclaration","scope":8506,"src":"1820:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8468,"name":"bytes","nodeType":"ElementaryTypeName","src":"1820:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8474,"initialValue":{"expression":{"arguments":[{"id":8471,"name":"CustomNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"1848:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CustomNFT_$8335_$","typeString":"type(contract CustomNFT)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_CustomNFT_$8335_$","typeString":"type(contract CustomNFT)"}],"id":8470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1843:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_CustomNFT_$8335","typeString":"type(contract CustomNFT)"}},"id":8473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1859:12:23","memberName":"creationCode","nodeType":"MemberAccess","src":"1843:28:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1820:51:23"},{"assignments":[8476],"declarations":[{"constant":false,"id":8476,"mutability":"mutable","name":"addr","nameLocation":"1901:4:23","nodeType":"VariableDeclaration","scope":8506,"src":"1885:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8475,"name":"address","nodeType":"ElementaryTypeName","src":"1885:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":8477,"nodeType":"VariableDeclarationStatement","src":"1885:20:23"},{"AST":{"nativeSrc":"1928:85:23","nodeType":"YulBlock","src":"1928:85:23","statements":[{"nativeSrc":"1946:53:23","nodeType":"YulAssignment","src":"1946:53:23","value":{"arguments":[{"kind":"number","nativeSrc":"1961:1:23","nodeType":"YulLiteral","src":"1961:1:23","type":"","value":"0"},{"arguments":[{"name":"nftCode","nativeSrc":"1968:7:23","nodeType":"YulIdentifier","src":"1968:7:23"},{"kind":"number","nativeSrc":"1977:4:23","nodeType":"YulLiteral","src":"1977:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1964:3:23","nodeType":"YulIdentifier","src":"1964:3:23"},"nativeSrc":"1964:18:23","nodeType":"YulFunctionCall","src":"1964:18:23"},{"arguments":[{"name":"nftCode","nativeSrc":"1990:7:23","nodeType":"YulIdentifier","src":"1990:7:23"}],"functionName":{"name":"mload","nativeSrc":"1984:5:23","nodeType":"YulIdentifier","src":"1984:5:23"},"nativeSrc":"1984:14:23","nodeType":"YulFunctionCall","src":"1984:14:23"}],"functionName":{"name":"create","nativeSrc":"1954:6:23","nodeType":"YulIdentifier","src":"1954:6:23"},"nativeSrc":"1954:45:23","nodeType":"YulFunctionCall","src":"1954:45:23"},"variableNames":[{"name":"addr","nativeSrc":"1946:4:23","nodeType":"YulIdentifier","src":"1946:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8476,"isOffset":false,"isSlot":false,"src":"1946:4:23","valueSize":1},{"declaration":8469,"isOffset":false,"isSlot":false,"src":"1968:7:23","valueSize":1},{"declaration":8469,"isOffset":false,"isSlot":false,"src":"1990:7:23","valueSize":1}],"id":8478,"nodeType":"InlineAssembly","src":"1919:94:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8480,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"2034:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2050:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2042:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8481,"name":"address","nodeType":"ElementaryTypeName","src":"2042:7:23","typeDescriptions":{}}},"id":8484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2034:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4654206465706c6f79206661696c6564","id":8486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2054:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a22ec9ee55772ba2eb44070b1a6346c13cf75f7221c9dcc91f977ae929e1a583","typeString":"literal_string \"NFT deploy failed\""},"value":"NFT deploy failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a22ec9ee55772ba2eb44070b1a6346c13cf75f7221c9dcc91f977ae929e1a583","typeString":"literal_string \"NFT deploy failed\""}],"id":8479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2026:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2026:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8488,"nodeType":"ExpressionStatement","src":"2026:48:23"},{"expression":{"arguments":[{"id":8493,"name":"nftName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"2115:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8494,"name":"nftSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"2124:9:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8495,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"2135:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"hexValue":"30","id":8498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2144:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8496,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:23","typeDescriptions":{}}},"id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2144:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8490,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"2098:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8489,"name":"CustomNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"2088:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CustomNFT_$8335_$","typeString":"type(contract CustomNFT)"}},"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2088:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CustomNFT_$8335","typeString":"contract CustomNFT"}},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2104:10:23","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":8279,"src":"2088:26:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,string memory,string memory,address) external"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2088:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8501,"nodeType":"ExpressionStatement","src":"2088:67:23"},{"expression":{"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8502,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"2169:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8503,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"2183:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2169:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8505,"nodeType":"ExpressionStatement","src":"2169:18:23"}]},{"id":8544,"nodeType":"Block","src":"2273:414:23","statements":[{"assignments":[8508],"declarations":[{"constant":false,"id":8508,"mutability":"mutable","name":"clCode","nameLocation":"2300:6:23","nodeType":"VariableDeclaration","scope":8544,"src":"2287:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8507,"name":"bytes","nodeType":"ElementaryTypeName","src":"2287:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8513,"initialValue":{"expression":{"arguments":[{"id":8510,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2314:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Claim_$8220_$","typeString":"type(contract Claim)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Claim_$8220_$","typeString":"type(contract Claim)"}],"id":8509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2309:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Claim_$8220","typeString":"type(contract Claim)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:12:23","memberName":"creationCode","nodeType":"MemberAccess","src":"2309:24:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2287:46:23"},{"assignments":[8515],"declarations":[{"constant":false,"id":8515,"mutability":"mutable","name":"addr","nameLocation":"2363:4:23","nodeType":"VariableDeclaration","scope":8544,"src":"2347:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8514,"name":"address","nodeType":"ElementaryTypeName","src":"2347:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":8516,"nodeType":"VariableDeclarationStatement","src":"2347:20:23"},{"AST":{"nativeSrc":"2390:83:23","nodeType":"YulBlock","src":"2390:83:23","statements":[{"nativeSrc":"2408:51:23","nodeType":"YulAssignment","src":"2408:51:23","value":{"arguments":[{"kind":"number","nativeSrc":"2423:1:23","nodeType":"YulLiteral","src":"2423:1:23","type":"","value":"0"},{"arguments":[{"name":"clCode","nativeSrc":"2430:6:23","nodeType":"YulIdentifier","src":"2430:6:23"},{"kind":"number","nativeSrc":"2438:4:23","nodeType":"YulLiteral","src":"2438:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:23","nodeType":"YulIdentifier","src":"2426:3:23"},"nativeSrc":"2426:17:23","nodeType":"YulFunctionCall","src":"2426:17:23"},{"arguments":[{"name":"clCode","nativeSrc":"2451:6:23","nodeType":"YulIdentifier","src":"2451:6:23"}],"functionName":{"name":"mload","nativeSrc":"2445:5:23","nodeType":"YulIdentifier","src":"2445:5:23"},"nativeSrc":"2445:13:23","nodeType":"YulFunctionCall","src":"2445:13:23"}],"functionName":{"name":"create","nativeSrc":"2416:6:23","nodeType":"YulIdentifier","src":"2416:6:23"},"nativeSrc":"2416:43:23","nodeType":"YulFunctionCall","src":"2416:43:23"},"variableNames":[{"name":"addr","nativeSrc":"2408:4:23","nodeType":"YulIdentifier","src":"2408:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8515,"isOffset":false,"isSlot":false,"src":"2408:4:23","valueSize":1},{"declaration":8508,"isOffset":false,"isSlot":false,"src":"2430:6:23","valueSize":1},{"declaration":8508,"isOffset":false,"isSlot":false,"src":"2451:6:23","valueSize":1}],"id":8517,"nodeType":"InlineAssembly","src":"2381:92:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8519,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"2494:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2502:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8520,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:23","typeDescriptions":{}}},"id":8523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2494:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d206465706c6f79206661696c6564","id":8525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2514:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4e05df31fd91431268821f95a90fe655758d028b190dea5d874d8f56bc432cb3","typeString":"literal_string \"Claim deploy failed\""},"value":"Claim deploy failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4e05df31fd91431268821f95a90fe655758d028b190dea5d874d8f56bc432cb3","typeString":"literal_string \"Claim deploy failed\""}],"id":8518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2486:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8527,"nodeType":"ExpressionStatement","src":"2486:50:23"},{"expression":{"arguments":[{"expression":{"id":8532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2573:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2577:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2573:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8534,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"2585:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8535,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"2599:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8536,"name":"whitelistContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"2612:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8537,"name":"claimQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"2631:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8529,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"2556:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8528,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Claim_$8220_$","typeString":"type(contract Claim)"}},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Claim_$8220","typeString":"contract Claim"}},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2562:10:23","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":7924,"src":"2550:22:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,address,uint256) external"}},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:92:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8539,"nodeType":"ExpressionStatement","src":"2550:92:23"},{"expression":{"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8540,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"2656:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8541,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"2672:4:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2656:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8543,"nodeType":"ExpressionStatement","src":"2656:20:23"}]},{"expression":{"arguments":[{"id":8549,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"2772:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8546,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"2742:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8545,"name":"CustomNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"2732:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CustomNFT_$8335_$","typeString":"type(contract CustomNFT)"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CustomNFT_$8335","typeString":"contract CustomNFT"}},"id":8548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:16:23","memberName":"setClaimContract","nodeType":"MemberAccess","referencedDeclaration":8325,"src":"2732:39:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8551,"nodeType":"ExpressionStatement","src":"2732:54:23"},{"expression":{"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8552,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"2824:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ProjectInfo_$8349_storage_$","typeString":"mapping(bytes32 => struct Factory3.ProjectInfo storage ref)"}},"id":8554,"indexExpression":{"id":8553,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"2833:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2824:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectInfo_$8349_storage","typeString":"struct Factory3.ProjectInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8556,"name":"whitelistContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"2883:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8557,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"2919:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8558,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"2951:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2986:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8555,"name":"ProjectInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"2846:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProjectInfo_$8349_storage_ptr_$","typeString":"type(struct Factory3.ProjectInfo storage pointer)"}},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2872:9:23","2914:3:23","2944:5:23","2978:6:23"],"names":["whitelist","nft","claim","exists"],"nodeType":"FunctionCall","src":"2846:155:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProjectInfo_$8349_memory_ptr","typeString":"struct Factory3.ProjectInfo memory"}},"src":"2824:177:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectInfo_$8349_storage","typeString":"struct Factory3.ProjectInfo storage ref"}},"id":8562,"nodeType":"ExpressionStatement","src":"2824:177:23"},{"eventCall":{"arguments":[{"id":8564,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"3033:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8565,"name":"whitelistContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"3044:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8566,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"3063:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8567,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"3076:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8563,"name":"ProjectDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"3017:15:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address,address)"}},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8569,"nodeType":"EmitStatement","src":"3012:78:23"},{"expression":{"components":[{"id":8570,"name":"whitelistContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"3108:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8571,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"3127:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8572,"name":"claimContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"3140:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3107:47:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$","typeString":"tuple(address,address,address)"}},"functionReturnParameters":8385,"id":8574,"nodeType":"Return","src":"3100:54:23"}]},"documentation":{"id":8365,"nodeType":"StructuredDocumentation","src":"498:111:23","text":" @notice 创建一个新的项目，部署并初始化 Whitelist、CustomNFT 和 Claim 合约"},"functionSelector":"02df1f61","id":8576,"implemented":true,"kind":"function","modifiers":[],"name":"createProject","nameLocation":"623:13:23","nodeType":"FunctionDefinition","parameters":{"id":8378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8367,"mutability":"mutable","name":"projectId","nameLocation":"654:9:23","nodeType":"VariableDeclaration","scope":8576,"src":"646:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"646:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8369,"mutability":"mutable","name":"tokenAddress","nameLocation":"681:12:23","nodeType":"VariableDeclaration","scope":8576,"src":"673:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8368,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8371,"mutability":"mutable","name":"nftName","nameLocation":"717:7:23","nodeType":"VariableDeclaration","scope":8576,"src":"703:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8370,"name":"string","nodeType":"ElementaryTypeName","src":"703:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8373,"mutability":"mutable","name":"nftSymbol","nameLocation":"748:9:23","nodeType":"VariableDeclaration","scope":8576,"src":"734:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8372,"name":"string","nodeType":"ElementaryTypeName","src":"734:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8375,"mutability":"mutable","name":"baseURI","nameLocation":"781:7:23","nodeType":"VariableDeclaration","scope":8576,"src":"767:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8374,"name":"string","nodeType":"ElementaryTypeName","src":"767:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8377,"mutability":"mutable","name":"claimQuota","nameLocation":"806:10:23","nodeType":"VariableDeclaration","scope":8576,"src":"798:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8376,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:186:23"},"returnParameters":{"id":8385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8380,"mutability":"mutable","name":"whitelistContract","nameLocation":"878:17:23","nodeType":"VariableDeclaration","scope":8576,"src":"870:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8379,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8382,"mutability":"mutable","name":"nftContract","nameLocation":"917:11:23","nodeType":"VariableDeclaration","scope":8576,"src":"909:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8381,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8384,"mutability":"mutable","name":"claimContract","nameLocation":"950:13:23","nodeType":"VariableDeclaration","scope":8576,"src":"942:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8383,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"856:117:23"},"scope":8577,"src":"614:2547:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8578,"src":"132:3031:23","usedErrors":[],"usedEvents":[8364]}],"src":"32:3132:23"},"id":23},"contracts/Mytoken.sol":{"ast":{"absolutePath":"contracts/Mytoken.sol","exportedSymbols":{"Context":[2802],"ERC20":[2428],"IERC20":[2506],"IERC20Errors":[1818],"IERC20Metadata":[2532],"MyToken":[8656],"Ownable":[1776]},"id":8657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8579,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8657,"sourceUnit":2429,"src":"58:55:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8657,"sourceUnit":1777,"src":"114:52:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8582,"name":"ERC20","nameLocations":["188:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"188:5:24"},"id":8583,"nodeType":"InheritanceSpecifier","src":"188:5:24"},{"baseName":{"id":8584,"name":"Ownable","nameLocations":["195:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"195:7:24"},"id":8585,"nodeType":"InheritanceSpecifier","src":"195:7:24"}],"canonicalName":"MyToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8656,"linearizedBaseContracts":[8656,1776,2428,1818,2532,2506,2802],"name":"MyToken","nameLocation":"177:7:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8587,"mutability":"mutable","name":"_customDecimals","nameLocation":"223:15:24","nodeType":"VariableDeclaration","scope":8656,"src":"209:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8586,"name":"uint8","nodeType":"ElementaryTypeName","src":"209:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":8616,"nodeType":"Block","src":"422:87:24","statements":[{"expression":{"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8606,"name":"_customDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"432:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8607,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8593,"src":"450:9:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"432:27:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8609,"nodeType":"ExpressionStatement","src":"432:27:24"},{"expression":{"arguments":[{"expression":{"id":8611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"475:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"479:6:24","memberName":"sender","nodeType":"MemberAccess","src":"475:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8613,"name":"initialSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"487:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8610,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"469:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"469:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8615,"nodeType":"ExpressionStatement","src":"469:33:24"}]},"id":8617,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8598,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8589,"src":"386:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8599,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"393:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8600,"kind":"baseConstructorSpecifier","modifierName":{"id":8597,"name":"ERC20","nameLocations":["380:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"380:5:24"},"nodeType":"ModifierInvocation","src":"380:21:24"},{"arguments":[{"expression":{"id":8602,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"410:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"414:6:24","memberName":"sender","nodeType":"MemberAccess","src":"410:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8604,"kind":"baseConstructorSpecifier","modifierName":{"id":8601,"name":"Ownable","nameLocations":["402:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"402:7:24"},"nodeType":"ModifierInvocation","src":"402:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8589,"mutability":"mutable","name":"name_","nameLocation":"280:5:24","nodeType":"VariableDeclaration","scope":8617,"src":"266:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8588,"name":"string","nodeType":"ElementaryTypeName","src":"266:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8591,"mutability":"mutable","name":"symbol_","nameLocation":"309:7:24","nodeType":"VariableDeclaration","scope":8617,"src":"295:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8590,"name":"string","nodeType":"ElementaryTypeName","src":"295:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8593,"mutability":"mutable","name":"decimals_","nameLocation":"332:9:24","nodeType":"VariableDeclaration","scope":8617,"src":"326:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8592,"name":"uint8","nodeType":"ElementaryTypeName","src":"326:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8595,"mutability":"mutable","name":"initialSupply_","nameLocation":"359:14:24","nodeType":"VariableDeclaration","scope":8617,"src":"351:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8594,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"256:123:24"},"returnParameters":{"id":8605,"nodeType":"ParameterList","parameters":[],"src":"422:0:24"},"scope":8656,"src":"245:264:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1992],"body":{"id":8625,"nodeType":"Block","src":"619:39:24","statements":[{"expression":{"id":8623,"name":"_customDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"636:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8622,"id":8624,"nodeType":"Return","src":"629:22:24"}]},"functionSelector":"313ce567","id":8626,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"571:8:24","nodeType":"FunctionDefinition","overrides":{"id":8619,"nodeType":"OverrideSpecifier","overrides":[],"src":"594:8:24"},"parameters":{"id":8618,"nodeType":"ParameterList","parameters":[],"src":"579:2:24"},"returnParameters":{"id":8622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8626,"src":"612:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8620,"name":"uint8","nodeType":"ElementaryTypeName","src":"612:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"611:7:24"},"scope":8656,"src":"562:96:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8640,"nodeType":"Block","src":"725:34:24","statements":[{"expression":{"arguments":[{"id":8636,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"741:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8637,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"745:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8635,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"735:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"735:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8639,"nodeType":"ExpressionStatement","src":"735:17:24"}]},"functionSelector":"40c10f19","id":8641,"implemented":true,"kind":"function","modifiers":[{"id":8633,"kind":"modifierInvocation","modifierName":{"id":8632,"name":"onlyOwner","nameLocations":["715:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"715:9:24"},"nodeType":"ModifierInvocation","src":"715:9:24"}],"name":"mint","nameLocation":"673:4:24","nodeType":"FunctionDefinition","parameters":{"id":8631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8628,"mutability":"mutable","name":"to","nameLocation":"686:2:24","nodeType":"VariableDeclaration","scope":8641,"src":"678:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8627,"name":"address","nodeType":"ElementaryTypeName","src":"678:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8630,"mutability":"mutable","name":"amount","nameLocation":"698:6:24","nodeType":"VariableDeclaration","scope":8641,"src":"690:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8629,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"677:28:24"},"returnParameters":{"id":8634,"nodeType":"ParameterList","parameters":[],"src":"725:0:24"},"scope":8656,"src":"664:95:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8654,"nodeType":"Block","src":"814:42:24","statements":[{"expression":{"arguments":[{"expression":{"id":8649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"830:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"834:6:24","memberName":"sender","nodeType":"MemberAccess","src":"830:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"842:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8648,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"824:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"824:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8653,"nodeType":"ExpressionStatement","src":"824:25:24"}]},"functionSelector":"42966c68","id":8655,"implemented":true,"kind":"function","modifiers":[{"id":8646,"kind":"modifierInvocation","modifierName":{"id":8645,"name":"onlyOwner","nameLocations":["804:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"804:9:24"},"nodeType":"ModifierInvocation","src":"804:9:24"}],"name":"burn","nameLocation":"774:4:24","nodeType":"FunctionDefinition","parameters":{"id":8644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8643,"mutability":"mutable","name":"amount","nameLocation":"787:6:24","nodeType":"VariableDeclaration","scope":8655,"src":"779:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8642,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"778:16:24"},"returnParameters":{"id":8647,"nodeType":"ParameterList","parameters":[],"src":"814:0:24"},"scope":8656,"src":"765:91:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8657,"src":"168:690:24","usedErrors":[1642,1647,1788,1793,1798,1807,1812,1817],"usedEvents":[1653,2440,2449]}],"src":"32:827:24"},"id":24},"contracts/Whitelist.sol":{"ast":{"absolutePath":"contracts/Whitelist.sol","exportedSymbols":{"ContextUpgradeable":[1588],"Initializable":[462],"OwnableUpgradeable":[194],"Whitelist":[8784]},"id":8785,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8658,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":8659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8785,"sourceUnit":195,"src":"196:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8785,"sourceUnit":463,"src":"272:75:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8662,"name":"Initializable","nameLocations":["447:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"447:13:25"},"id":8663,"nodeType":"InheritanceSpecifier","src":"447:13:25"},{"baseName":{"id":8664,"name":"OwnableUpgradeable","nameLocations":["462:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"462:18:25"},"id":8665,"nodeType":"InheritanceSpecifier","src":"462:18:25"}],"canonicalName":"Whitelist","contractDependencies":[],"contractKind":"contract","documentation":{"id":8661,"nodeType":"StructuredDocumentation","src":"349:75:25","text":" @title Whitelist\n @notice Manages a list of approved addresses"},"fullyImplemented":true,"id":8784,"linearizedBaseContracts":[8784,194,1588,462],"name":"Whitelist","nameLocation":"434:9:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8669,"mutability":"mutable","name":"_whitelisted","nameLocation":"520:12:25","nodeType":"VariableDeclaration","scope":8784,"src":"487:45:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8668,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8666,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"487:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8667,"name":"bool","nodeType":"ElementaryTypeName","src":"506:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"a226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f","id":8673,"name":"AddressAdded","nameLocation":"545:12:25","nodeType":"EventDefinition","parameters":{"id":8672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8671,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"574:7:25","nodeType":"VariableDeclaration","scope":8673,"src":"558:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8670,"name":"address","nodeType":"ElementaryTypeName","src":"558:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"557:25:25"},"src":"539:44:25"},{"anonymous":false,"eventSelector":"24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb","id":8677,"name":"AddressRemoved","nameLocation":"594:14:25","nodeType":"EventDefinition","parameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"625:7:25","nodeType":"VariableDeclaration","scope":8677,"src":"609:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8674,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:25:25"},"src":"588:46:25"},{"body":{"id":8694,"nodeType":"Block","src":"823:79:25","statements":[{"expression":{"arguments":[{"expression":{"id":8686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"849:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"853:6:25","memberName":"sender","nodeType":"MemberAccess","src":"849:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8685,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"834:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"834:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8689,"nodeType":"ExpressionStatement","src":"834:26:25"},{"expression":{"arguments":[{"id":8691,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"888:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8690,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"870:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"870:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8693,"nodeType":"ExpressionStatement","src":"870:25:25"}]},"documentation":{"id":8678,"nodeType":"StructuredDocumentation","src":"640:123:25","text":" @notice Initializes the contract setting the initial owner\n @param owner_ The address of the owner"},"functionSelector":"c4d66de8","id":8695,"implemented":true,"kind":"function","modifiers":[{"id":8683,"kind":"modifierInvocation","modifierName":{"id":8682,"name":"initializer","nameLocations":["811:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"811:11:25"},"nodeType":"ModifierInvocation","src":"811:11:25"}],"name":"initialize","nameLocation":"777:10:25","nodeType":"FunctionDefinition","parameters":{"id":8681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8680,"mutability":"mutable","name":"owner_","nameLocation":"796:6:25","nodeType":"VariableDeclaration","scope":8695,"src":"788:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8679,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"787:16:25"},"returnParameters":{"id":8684,"nodeType":"ParameterList","parameters":[],"src":"823:0:25"},"scope":8784,"src":"768:134:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8713,"nodeType":"Block","src":"1072:81:25","statements":[{"expression":{"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8703,"name":"_whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"1082:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8705,"indexExpression":{"id":8704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"1095:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1082:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1106:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1082:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8708,"nodeType":"ExpressionStatement","src":"1082:28:25"},{"eventCall":{"arguments":[{"id":8710,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"1138:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8709,"name":"AddressAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8673,"src":"1125:12:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8712,"nodeType":"EmitStatement","src":"1120:26:25"}]},"documentation":{"id":8696,"nodeType":"StructuredDocumentation","src":"908:99:25","text":" @notice Add an address to the whitelist\n @param account The address to add"},"functionSelector":"e43252d7","id":8714,"implemented":true,"kind":"function","modifiers":[{"id":8701,"kind":"modifierInvocation","modifierName":{"id":8700,"name":"onlyOwner","nameLocations":["1062:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1062:9:25"},"nodeType":"ModifierInvocation","src":"1062:9:25"}],"name":"addToWhitelist","nameLocation":"1021:14:25","nodeType":"FunctionDefinition","parameters":{"id":8699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8698,"mutability":"mutable","name":"account","nameLocation":"1044:7:25","nodeType":"VariableDeclaration","scope":8714,"src":"1036:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8697,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1035:17:25"},"returnParameters":{"id":8702,"nodeType":"ParameterList","parameters":[],"src":"1072:0:25"},"scope":8784,"src":"1012:141:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8750,"nodeType":"Block","src":"1367:163:25","statements":[{"body":{"id":8748,"nodeType":"Block","src":"1423:101:25","statements":[{"expression":{"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8734,"name":"_whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"1437:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8738,"indexExpression":{"baseExpression":{"id":8735,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"1450:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8737,"indexExpression":{"id":8736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"1459:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1450:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1437:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1465:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1437:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8741,"nodeType":"ExpressionStatement","src":"1437:32:25"},{"eventCall":{"arguments":[{"baseExpression":{"id":8743,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"1501:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8745,"indexExpression":{"id":8744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"1510:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1501:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8742,"name":"AddressAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8673,"src":"1488:12:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8747,"nodeType":"EmitStatement","src":"1483:30:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"1397:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8728,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"1401:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1410:6:25","memberName":"length","nodeType":"MemberAccess","src":"1401:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1397:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8749,"initializationExpression":{"assignments":[8724],"declarations":[{"constant":false,"id":8724,"mutability":"mutable","name":"i","nameLocation":"1390:1:25","nodeType":"VariableDeclaration","scope":8749,"src":"1382:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8726,"initialValue":{"hexValue":"30","id":8725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1382:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1418:3:25","subExpression":{"id":8731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"1418:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8733,"nodeType":"ExpressionStatement","src":"1418:3:25"},"nodeType":"ForStatement","src":"1377:147:25"}]},"documentation":{"id":8715,"nodeType":"StructuredDocumentation","src":"1160:125:25","text":" @notice Batch add multiple addresses to the whitelist\n @param accounts The array of addresses to add"},"functionSelector":"2db6fa36","id":8751,"implemented":true,"kind":"function","modifiers":[{"id":8721,"kind":"modifierInvocation","modifierName":{"id":8720,"name":"onlyOwner","nameLocations":["1357:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1357:9:25"},"nodeType":"ModifierInvocation","src":"1357:9:25"}],"name":"batchAddToWhitelist","nameLocation":"1299:19:25","nodeType":"FunctionDefinition","parameters":{"id":8719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8718,"mutability":"mutable","name":"accounts","nameLocation":"1338:8:25","nodeType":"VariableDeclaration","scope":8751,"src":"1319:27:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8716,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8717,"nodeType":"ArrayTypeName","src":"1319:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1318:29:25"},"returnParameters":{"id":8722,"nodeType":"ParameterList","parameters":[],"src":"1367:0:25"},"scope":8784,"src":"1290:240:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8769,"nodeType":"Block","src":"1713:84:25","statements":[{"expression":{"id":8763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8759,"name":"_whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"1723:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8761,"indexExpression":{"id":8760,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"1736:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1723:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1723:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8764,"nodeType":"ExpressionStatement","src":"1723:29:25"},{"eventCall":{"arguments":[{"id":8766,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"1782:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8765,"name":"AddressRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8677,"src":"1767:14:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8768,"nodeType":"EmitStatement","src":"1762:28:25"}]},"documentation":{"id":8752,"nodeType":"StructuredDocumentation","src":"1536:107:25","text":" @notice Remove an address from the whitelist\n @param account The address to remove"},"functionSelector":"8ab1d681","id":8770,"implemented":true,"kind":"function","modifiers":[{"id":8757,"kind":"modifierInvocation","modifierName":{"id":8756,"name":"onlyOwner","nameLocations":["1703:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1703:9:25"},"nodeType":"ModifierInvocation","src":"1703:9:25"}],"name":"removeFromWhitelist","nameLocation":"1657:19:25","nodeType":"FunctionDefinition","parameters":{"id":8755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8754,"mutability":"mutable","name":"account","nameLocation":"1685:7:25","nodeType":"VariableDeclaration","scope":8770,"src":"1677:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8753,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1676:17:25"},"returnParameters":{"id":8758,"nodeType":"ParameterList","parameters":[],"src":"1713:0:25"},"scope":8784,"src":"1648:149:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8782,"nodeType":"Block","src":"2033:45:25","statements":[{"expression":{"baseExpression":{"id":8778,"name":"_whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"2050:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8780,"indexExpression":{"id":8779,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"2063:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2050:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8777,"id":8781,"nodeType":"Return","src":"2043:28:25"}]},"documentation":{"id":8771,"nodeType":"StructuredDocumentation","src":"1803:156:25","text":" @notice Check if an address is whitelisted\n @param account The address to check\n @return True if whitelisted, false otherwise"},"functionSelector":"3af32abf","id":8783,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelisted","nameLocation":"1973:13:25","nodeType":"FunctionDefinition","parameters":{"id":8774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8773,"mutability":"mutable","name":"account","nameLocation":"1995:7:25","nodeType":"VariableDeclaration","scope":8783,"src":"1987:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8772,"name":"address","nodeType":"ElementaryTypeName","src":"1987:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1986:17:25"},"returnParameters":{"id":8777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8783,"src":"2027:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8775,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:25"},"scope":8784,"src":"1964:114:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8785,"src":"425:1655:25","usedErrors":[30,35,211,214],"usedEvents":[41,219,8673,8677]}],"src":"32:2048:25"},"id":25}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"431:1488:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1488:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"431:1488:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"657:1315:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"297:18980:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"297:18980:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"281:31863:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"281:31863:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"769:34173:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"258:2354:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300081c000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"258:2354:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Claim.sol":{"Claim":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldQuota","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newQuota","type":"uint256"}],"name":"QuotaUpdated","type":"event"},{"inputs":[],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"address","name":"whitelistAddr","type":"address"},{"internalType":"uint256","name":"quota_","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nft","outputs":[{"internalType":"contract ICustomNFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quota","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newQuota","type":"uint256"}],"name":"updateQuota","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"whitelist","outputs":[{"internalType":"contract IWhitelist","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF91 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93E59DC1 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCEBE09C9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCEBE09C9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF7013EF6 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93E59DC1 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41107B64 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x612 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x1CE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x51756F7461206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x19D6318AFB32EEA58EF4A200D5730CC282D7E0BD791A8CED865532F1AC4B9B0F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3AF32ABF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3AF32ABF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6A627842 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x40E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x40B SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x47C JUMPI PUSH2 0x41A PUSH2 0xDD7 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x470 JUMPI POP PUSH2 0x42E PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH2 0x439 JUMPI POP PUSH2 0x472 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x25D SWAP2 PUSH1 0x4 ADD PUSH2 0xF10 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD PUSH1 0x3 SLOAD PUSH2 0x4B3 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x60E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x971 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x61A PUSH2 0x916 JUMP JUMPDEST PUSH2 0x624 PUSH1 0x0 PUSH2 0xABC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x62E PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x749 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x78A PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xABC JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x823 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x879 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x882 DUP11 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x90A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x948 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP8 AND SWAP2 PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xA69 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xA69 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA69 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E736665723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF60 PUSH1 0x25 SWAP2 CODECOPY DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x24 DUP4 ADD MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xC29 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E7366657246726F6D3A205452414E534645525F4641494C45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xCE1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD39 DUP3 PUSH2 0xD02 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP7 PUSH2 0xD02 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6F PUSH1 0x20 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7D PUSH1 0x40 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8B PUSH1 0x60 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0xE3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE66 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE82 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP3 DUP3 ADD PUSH1 0x20 ADD GT ISZERO PUSH2 0xE9C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xEAB PUSH1 0x20 DUP3 DUP6 ADD ADD DUP6 PUSH2 0xDF3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH17 0x27232A1036B4B73A103330B4B632B21D1 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0xF03 DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x11 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF2F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF55 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH21 0x72616E7366657246726F6D28616464726573732C61 PUSH5 0x6472657373 0x2C PUSH22 0x696E7432353629A164736F6C634300081C000A000000 ","sourceMap":"425:3254:21:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_54":{"entryPoint":3207,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":3297,"id":81,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":3224,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":2326,"id":122,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_1570":{"entryPoint":null,"id":1570,"parameterSlots":0,"returnSlots":1},"@_safeTransferFrom_8219":{"entryPoint":2861,"id":8219,"parameterSlots":4,"returnSlots":0},"@_safeTransfer_8172":{"entryPoint":2417,"id":8172,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":2748,"id":193,"parameterSlots":1,"returnSlots":0},"@claim_8058":{"entryPoint":683,"id":8058,"parameterSlots":0,"returnSlots":0},"@claimed_7840":{"entryPoint":null,"id":7840,"parameterSlots":0,"returnSlots":0},"@deposit_7978":{"entryPoint":1574,"id":7978,"parameterSlots":1,"returnSlots":0},"@emergencyWithdraw_8128":{"entryPoint":1268,"id":8128,"parameterSlots":1,"returnSlots":0},"@initialize_7924":{"entryPoint":1984,"id":7924,"parameterSlots":5,"returnSlots":0},"@nft_7831":{"entryPoint":null,"id":7831,"parameterSlots":0,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@quota_7836":{"entryPoint":null,"id":7836,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":1554,"id":136,"parameterSlots":0,"returnSlots":0},"@token_7828":{"entryPoint":null,"id":7828,"parameterSlots":0,"returnSlots":0},"@transferOwnership_164":{"entryPoint":1922,"id":164,"parameterSlots":1,"returnSlots":0},"@updateQuota_8086":{"entryPoint":533,"id":8086,"parameterSlots":1,"returnSlots":0},"@whitelist_7834":{"entryPoint":null,"id":7834,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":3330,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256":{"entryPoint":3392,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ICustomNFT_$7810__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2506__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IWhitelist_$7823__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_02976719d8645cd6cf8c6ef1ffe433708562981f118190e2ded774c1462eed8c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d89a2979883566442be80f0ed877da6c14ac8580d723a60c5d3958b55bf598a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3763,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3571,"id":null,"parameterSlots":2,"returnSlots":0},"return_data_selector":{"entryPoint":3543,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":3630,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:9708:26","nodeType":"YulBlock","src":"0:9708:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"84:156:26","nodeType":"YulBlock","src":"84:156:26","statements":[{"body":{"nativeSrc":"130:16:26","nodeType":"YulBlock","src":"130:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"139:1:26","nodeType":"YulLiteral","src":"139:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"142:1:26","nodeType":"YulLiteral","src":"142:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"132:6:26","nodeType":"YulIdentifier","src":"132:6:26"},"nativeSrc":"132:12:26","nodeType":"YulFunctionCall","src":"132:12:26"},"nativeSrc":"132:12:26","nodeType":"YulExpressionStatement","src":"132:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"105:7:26","nodeType":"YulIdentifier","src":"105:7:26"},{"name":"headStart","nativeSrc":"114:9:26","nodeType":"YulIdentifier","src":"114:9:26"}],"functionName":{"name":"sub","nativeSrc":"101:3:26","nodeType":"YulIdentifier","src":"101:3:26"},"nativeSrc":"101:23:26","nodeType":"YulFunctionCall","src":"101:23:26"},{"kind":"number","nativeSrc":"126:2:26","nodeType":"YulLiteral","src":"126:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"97:3:26","nodeType":"YulIdentifier","src":"97:3:26"},"nativeSrc":"97:32:26","nodeType":"YulFunctionCall","src":"97:32:26"},"nativeSrc":"94:52:26","nodeType":"YulIf","src":"94:52:26"},{"nativeSrc":"155:14:26","nodeType":"YulVariableDeclaration","src":"155:14:26","value":{"kind":"number","nativeSrc":"168:1:26","nodeType":"YulLiteral","src":"168:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"159:5:26","nodeType":"YulTypedName","src":"159:5:26","type":""}]},{"nativeSrc":"178:32:26","nodeType":"YulAssignment","src":"178:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"200:9:26","nodeType":"YulIdentifier","src":"200:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"187:12:26","nodeType":"YulIdentifier","src":"187:12:26"},"nativeSrc":"187:23:26","nodeType":"YulFunctionCall","src":"187:23:26"},"variableNames":[{"name":"value","nativeSrc":"178:5:26","nodeType":"YulIdentifier","src":"178:5:26"}]},{"nativeSrc":"219:15:26","nodeType":"YulAssignment","src":"219:15:26","value":{"name":"value","nativeSrc":"229:5:26","nodeType":"YulIdentifier","src":"229:5:26"},"variableNames":[{"name":"value0","nativeSrc":"219:6:26","nodeType":"YulIdentifier","src":"219:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"14:226:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50:9:26","nodeType":"YulTypedName","src":"50:9:26","type":""},{"name":"dataEnd","nativeSrc":"61:7:26","nodeType":"YulTypedName","src":"61:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"73:6:26","nodeType":"YulTypedName","src":"73:6:26","type":""}],"src":"14:226:26"},{"body":{"nativeSrc":"365:102:26","nodeType":"YulBlock","src":"365:102:26","statements":[{"nativeSrc":"375:26:26","nodeType":"YulAssignment","src":"375:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"387:9:26","nodeType":"YulIdentifier","src":"387:9:26"},{"kind":"number","nativeSrc":"398:2:26","nodeType":"YulLiteral","src":"398:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"383:3:26","nodeType":"YulIdentifier","src":"383:3:26"},"nativeSrc":"383:18:26","nodeType":"YulFunctionCall","src":"383:18:26"},"variableNames":[{"name":"tail","nativeSrc":"375:4:26","nodeType":"YulIdentifier","src":"375:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"417:9:26","nodeType":"YulIdentifier","src":"417:9:26"},{"arguments":[{"name":"value0","nativeSrc":"432:6:26","nodeType":"YulIdentifier","src":"432:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"448:3:26","nodeType":"YulLiteral","src":"448:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"453:1:26","nodeType":"YulLiteral","src":"453:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"444:3:26","nodeType":"YulIdentifier","src":"444:3:26"},"nativeSrc":"444:11:26","nodeType":"YulFunctionCall","src":"444:11:26"},{"kind":"number","nativeSrc":"457:1:26","nodeType":"YulLiteral","src":"457:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"440:3:26","nodeType":"YulIdentifier","src":"440:3:26"},"nativeSrc":"440:19:26","nodeType":"YulFunctionCall","src":"440:19:26"}],"functionName":{"name":"and","nativeSrc":"428:3:26","nodeType":"YulIdentifier","src":"428:3:26"},"nativeSrc":"428:32:26","nodeType":"YulFunctionCall","src":"428:32:26"}],"functionName":{"name":"mstore","nativeSrc":"410:6:26","nodeType":"YulIdentifier","src":"410:6:26"},"nativeSrc":"410:51:26","nodeType":"YulFunctionCall","src":"410:51:26"},"nativeSrc":"410:51:26","nodeType":"YulExpressionStatement","src":"410:51:26"}]},"name":"abi_encode_tuple_t_contract$_ICustomNFT_$7810__to_t_address__fromStack_reversed","nativeSrc":"245:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"334:9:26","nodeType":"YulTypedName","src":"334:9:26","type":""},{"name":"value0","nativeSrc":"345:6:26","nodeType":"YulTypedName","src":"345:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"356:4:26","nodeType":"YulTypedName","src":"356:4:26","type":""}],"src":"245:222:26"},{"body":{"nativeSrc":"573:102:26","nodeType":"YulBlock","src":"573:102:26","statements":[{"nativeSrc":"583:26:26","nodeType":"YulAssignment","src":"583:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"595:9:26","nodeType":"YulIdentifier","src":"595:9:26"},{"kind":"number","nativeSrc":"606:2:26","nodeType":"YulLiteral","src":"606:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"591:3:26","nodeType":"YulIdentifier","src":"591:3:26"},"nativeSrc":"591:18:26","nodeType":"YulFunctionCall","src":"591:18:26"},"variableNames":[{"name":"tail","nativeSrc":"583:4:26","nodeType":"YulIdentifier","src":"583:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"625:9:26","nodeType":"YulIdentifier","src":"625:9:26"},{"arguments":[{"name":"value0","nativeSrc":"640:6:26","nodeType":"YulIdentifier","src":"640:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"656:3:26","nodeType":"YulLiteral","src":"656:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"661:1:26","nodeType":"YulLiteral","src":"661:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"652:3:26","nodeType":"YulIdentifier","src":"652:3:26"},"nativeSrc":"652:11:26","nodeType":"YulFunctionCall","src":"652:11:26"},{"kind":"number","nativeSrc":"665:1:26","nodeType":"YulLiteral","src":"665:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"648:3:26","nodeType":"YulIdentifier","src":"648:3:26"},"nativeSrc":"648:19:26","nodeType":"YulFunctionCall","src":"648:19:26"}],"functionName":{"name":"and","nativeSrc":"636:3:26","nodeType":"YulIdentifier","src":"636:3:26"},"nativeSrc":"636:32:26","nodeType":"YulFunctionCall","src":"636:32:26"}],"functionName":{"name":"mstore","nativeSrc":"618:6:26","nodeType":"YulIdentifier","src":"618:6:26"},"nativeSrc":"618:51:26","nodeType":"YulFunctionCall","src":"618:51:26"},"nativeSrc":"618:51:26","nodeType":"YulExpressionStatement","src":"618:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"472:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"542:9:26","nodeType":"YulTypedName","src":"542:9:26","type":""},{"name":"value0","nativeSrc":"553:6:26","nodeType":"YulTypedName","src":"553:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"564:4:26","nodeType":"YulTypedName","src":"564:4:26","type":""}],"src":"472:203:26"},{"body":{"nativeSrc":"800:102:26","nodeType":"YulBlock","src":"800:102:26","statements":[{"nativeSrc":"810:26:26","nodeType":"YulAssignment","src":"810:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"822:9:26","nodeType":"YulIdentifier","src":"822:9:26"},{"kind":"number","nativeSrc":"833:2:26","nodeType":"YulLiteral","src":"833:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"818:3:26","nodeType":"YulIdentifier","src":"818:3:26"},"nativeSrc":"818:18:26","nodeType":"YulFunctionCall","src":"818:18:26"},"variableNames":[{"name":"tail","nativeSrc":"810:4:26","nodeType":"YulIdentifier","src":"810:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"852:9:26","nodeType":"YulIdentifier","src":"852:9:26"},{"arguments":[{"name":"value0","nativeSrc":"867:6:26","nodeType":"YulIdentifier","src":"867:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"883:3:26","nodeType":"YulLiteral","src":"883:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"888:1:26","nodeType":"YulLiteral","src":"888:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"879:3:26","nodeType":"YulIdentifier","src":"879:3:26"},"nativeSrc":"879:11:26","nodeType":"YulFunctionCall","src":"879:11:26"},{"kind":"number","nativeSrc":"892:1:26","nodeType":"YulLiteral","src":"892:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"875:3:26","nodeType":"YulIdentifier","src":"875:3:26"},"nativeSrc":"875:19:26","nodeType":"YulFunctionCall","src":"875:19:26"}],"functionName":{"name":"and","nativeSrc":"863:3:26","nodeType":"YulIdentifier","src":"863:3:26"},"nativeSrc":"863:32:26","nodeType":"YulFunctionCall","src":"863:32:26"}],"functionName":{"name":"mstore","nativeSrc":"845:6:26","nodeType":"YulIdentifier","src":"845:6:26"},"nativeSrc":"845:51:26","nodeType":"YulFunctionCall","src":"845:51:26"},"nativeSrc":"845:51:26","nodeType":"YulExpressionStatement","src":"845:51:26"}]},"name":"abi_encode_tuple_t_contract$_IWhitelist_$7823__to_t_address__fromStack_reversed","nativeSrc":"680:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"769:9:26","nodeType":"YulTypedName","src":"769:9:26","type":""},{"name":"value0","nativeSrc":"780:6:26","nodeType":"YulTypedName","src":"780:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"791:4:26","nodeType":"YulTypedName","src":"791:4:26","type":""}],"src":"680:222:26"},{"body":{"nativeSrc":"956:124:26","nodeType":"YulBlock","src":"956:124:26","statements":[{"nativeSrc":"966:29:26","nodeType":"YulAssignment","src":"966:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"988:6:26","nodeType":"YulIdentifier","src":"988:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"975:12:26","nodeType":"YulIdentifier","src":"975:12:26"},"nativeSrc":"975:20:26","nodeType":"YulFunctionCall","src":"975:20:26"},"variableNames":[{"name":"value","nativeSrc":"966:5:26","nodeType":"YulIdentifier","src":"966:5:26"}]},{"body":{"nativeSrc":"1058:16:26","nodeType":"YulBlock","src":"1058:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1067:1:26","nodeType":"YulLiteral","src":"1067:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1070:1:26","nodeType":"YulLiteral","src":"1070:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1060:6:26","nodeType":"YulIdentifier","src":"1060:6:26"},"nativeSrc":"1060:12:26","nodeType":"YulFunctionCall","src":"1060:12:26"},"nativeSrc":"1060:12:26","nodeType":"YulExpressionStatement","src":"1060:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1017:5:26","nodeType":"YulIdentifier","src":"1017:5:26"},{"arguments":[{"name":"value","nativeSrc":"1028:5:26","nodeType":"YulIdentifier","src":"1028:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1043:3:26","nodeType":"YulLiteral","src":"1043:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"1048:1:26","nodeType":"YulLiteral","src":"1048:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1039:3:26","nodeType":"YulIdentifier","src":"1039:3:26"},"nativeSrc":"1039:11:26","nodeType":"YulFunctionCall","src":"1039:11:26"},{"kind":"number","nativeSrc":"1052:1:26","nodeType":"YulLiteral","src":"1052:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1035:3:26","nodeType":"YulIdentifier","src":"1035:3:26"},"nativeSrc":"1035:19:26","nodeType":"YulFunctionCall","src":"1035:19:26"}],"functionName":{"name":"and","nativeSrc":"1024:3:26","nodeType":"YulIdentifier","src":"1024:3:26"},"nativeSrc":"1024:31:26","nodeType":"YulFunctionCall","src":"1024:31:26"}],"functionName":{"name":"eq","nativeSrc":"1014:2:26","nodeType":"YulIdentifier","src":"1014:2:26"},"nativeSrc":"1014:42:26","nodeType":"YulFunctionCall","src":"1014:42:26"}],"functionName":{"name":"iszero","nativeSrc":"1007:6:26","nodeType":"YulIdentifier","src":"1007:6:26"},"nativeSrc":"1007:50:26","nodeType":"YulFunctionCall","src":"1007:50:26"},"nativeSrc":"1004:70:26","nodeType":"YulIf","src":"1004:70:26"}]},"name":"abi_decode_address","nativeSrc":"907:173:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"935:6:26","nodeType":"YulTypedName","src":"935:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"946:5:26","nodeType":"YulTypedName","src":"946:5:26","type":""}],"src":"907:173:26"},{"body":{"nativeSrc":"1155:116:26","nodeType":"YulBlock","src":"1155:116:26","statements":[{"body":{"nativeSrc":"1201:16:26","nodeType":"YulBlock","src":"1201:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1210:1:26","nodeType":"YulLiteral","src":"1210:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1213:1:26","nodeType":"YulLiteral","src":"1213:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1203:6:26","nodeType":"YulIdentifier","src":"1203:6:26"},"nativeSrc":"1203:12:26","nodeType":"YulFunctionCall","src":"1203:12:26"},"nativeSrc":"1203:12:26","nodeType":"YulExpressionStatement","src":"1203:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1176:7:26","nodeType":"YulIdentifier","src":"1176:7:26"},{"name":"headStart","nativeSrc":"1185:9:26","nodeType":"YulIdentifier","src":"1185:9:26"}],"functionName":{"name":"sub","nativeSrc":"1172:3:26","nodeType":"YulIdentifier","src":"1172:3:26"},"nativeSrc":"1172:23:26","nodeType":"YulFunctionCall","src":"1172:23:26"},{"kind":"number","nativeSrc":"1197:2:26","nodeType":"YulLiteral","src":"1197:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1168:3:26","nodeType":"YulIdentifier","src":"1168:3:26"},"nativeSrc":"1168:32:26","nodeType":"YulFunctionCall","src":"1168:32:26"},"nativeSrc":"1165:52:26","nodeType":"YulIf","src":"1165:52:26"},{"nativeSrc":"1226:39:26","nodeType":"YulAssignment","src":"1226:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1255:9:26","nodeType":"YulIdentifier","src":"1255:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1236:18:26","nodeType":"YulIdentifier","src":"1236:18:26"},"nativeSrc":"1236:29:26","nodeType":"YulFunctionCall","src":"1236:29:26"},"variableNames":[{"name":"value0","nativeSrc":"1226:6:26","nodeType":"YulIdentifier","src":"1226:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1085:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1121:9:26","nodeType":"YulTypedName","src":"1121:9:26","type":""},{"name":"dataEnd","nativeSrc":"1132:7:26","nodeType":"YulTypedName","src":"1132:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1144:6:26","nodeType":"YulTypedName","src":"1144:6:26","type":""}],"src":"1085:186:26"},{"body":{"nativeSrc":"1371:92:26","nodeType":"YulBlock","src":"1371:92:26","statements":[{"nativeSrc":"1381:26:26","nodeType":"YulAssignment","src":"1381:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1393:9:26","nodeType":"YulIdentifier","src":"1393:9:26"},{"kind":"number","nativeSrc":"1404:2:26","nodeType":"YulLiteral","src":"1404:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1389:3:26","nodeType":"YulIdentifier","src":"1389:3:26"},"nativeSrc":"1389:18:26","nodeType":"YulFunctionCall","src":"1389:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1381:4:26","nodeType":"YulIdentifier","src":"1381:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1423:9:26","nodeType":"YulIdentifier","src":"1423:9:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1448:6:26","nodeType":"YulIdentifier","src":"1448:6:26"}],"functionName":{"name":"iszero","nativeSrc":"1441:6:26","nodeType":"YulIdentifier","src":"1441:6:26"},"nativeSrc":"1441:14:26","nodeType":"YulFunctionCall","src":"1441:14:26"}],"functionName":{"name":"iszero","nativeSrc":"1434:6:26","nodeType":"YulIdentifier","src":"1434:6:26"},"nativeSrc":"1434:22:26","nodeType":"YulFunctionCall","src":"1434:22:26"}],"functionName":{"name":"mstore","nativeSrc":"1416:6:26","nodeType":"YulIdentifier","src":"1416:6:26"},"nativeSrc":"1416:41:26","nodeType":"YulFunctionCall","src":"1416:41:26"},"nativeSrc":"1416:41:26","nodeType":"YulExpressionStatement","src":"1416:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1276:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1340:9:26","nodeType":"YulTypedName","src":"1340:9:26","type":""},{"name":"value0","nativeSrc":"1351:6:26","nodeType":"YulTypedName","src":"1351:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1362:4:26","nodeType":"YulTypedName","src":"1362:4:26","type":""}],"src":"1276:187:26"},{"body":{"nativeSrc":"1569:76:26","nodeType":"YulBlock","src":"1569:76:26","statements":[{"nativeSrc":"1579:26:26","nodeType":"YulAssignment","src":"1579:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1591:9:26","nodeType":"YulIdentifier","src":"1591:9:26"},{"kind":"number","nativeSrc":"1602:2:26","nodeType":"YulLiteral","src":"1602:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1587:3:26","nodeType":"YulIdentifier","src":"1587:3:26"},"nativeSrc":"1587:18:26","nodeType":"YulFunctionCall","src":"1587:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1579:4:26","nodeType":"YulIdentifier","src":"1579:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1621:9:26","nodeType":"YulIdentifier","src":"1621:9:26"},{"name":"value0","nativeSrc":"1632:6:26","nodeType":"YulIdentifier","src":"1632:6:26"}],"functionName":{"name":"mstore","nativeSrc":"1614:6:26","nodeType":"YulIdentifier","src":"1614:6:26"},"nativeSrc":"1614:25:26","nodeType":"YulFunctionCall","src":"1614:25:26"},"nativeSrc":"1614:25:26","nodeType":"YulExpressionStatement","src":"1614:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1468:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1538:9:26","nodeType":"YulTypedName","src":"1538:9:26","type":""},{"name":"value0","nativeSrc":"1549:6:26","nodeType":"YulTypedName","src":"1549:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1560:4:26","nodeType":"YulTypedName","src":"1560:4:26","type":""}],"src":"1468:177:26"},{"body":{"nativeSrc":"1788:386:26","nodeType":"YulBlock","src":"1788:386:26","statements":[{"body":{"nativeSrc":"1835:16:26","nodeType":"YulBlock","src":"1835:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1844:1:26","nodeType":"YulLiteral","src":"1844:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1847:1:26","nodeType":"YulLiteral","src":"1847:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1837:6:26","nodeType":"YulIdentifier","src":"1837:6:26"},"nativeSrc":"1837:12:26","nodeType":"YulFunctionCall","src":"1837:12:26"},"nativeSrc":"1837:12:26","nodeType":"YulExpressionStatement","src":"1837:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1809:7:26","nodeType":"YulIdentifier","src":"1809:7:26"},{"name":"headStart","nativeSrc":"1818:9:26","nodeType":"YulIdentifier","src":"1818:9:26"}],"functionName":{"name":"sub","nativeSrc":"1805:3:26","nodeType":"YulIdentifier","src":"1805:3:26"},"nativeSrc":"1805:23:26","nodeType":"YulFunctionCall","src":"1805:23:26"},{"kind":"number","nativeSrc":"1830:3:26","nodeType":"YulLiteral","src":"1830:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"1801:3:26","nodeType":"YulIdentifier","src":"1801:3:26"},"nativeSrc":"1801:33:26","nodeType":"YulFunctionCall","src":"1801:33:26"},"nativeSrc":"1798:53:26","nodeType":"YulIf","src":"1798:53:26"},{"nativeSrc":"1860:39:26","nodeType":"YulAssignment","src":"1860:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1889:9:26","nodeType":"YulIdentifier","src":"1889:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1870:18:26","nodeType":"YulIdentifier","src":"1870:18:26"},"nativeSrc":"1870:29:26","nodeType":"YulFunctionCall","src":"1870:29:26"},"variableNames":[{"name":"value0","nativeSrc":"1860:6:26","nodeType":"YulIdentifier","src":"1860:6:26"}]},{"nativeSrc":"1908:48:26","nodeType":"YulAssignment","src":"1908:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1941:9:26","nodeType":"YulIdentifier","src":"1941:9:26"},{"kind":"number","nativeSrc":"1952:2:26","nodeType":"YulLiteral","src":"1952:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1937:3:26","nodeType":"YulIdentifier","src":"1937:3:26"},"nativeSrc":"1937:18:26","nodeType":"YulFunctionCall","src":"1937:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1918:18:26","nodeType":"YulIdentifier","src":"1918:18:26"},"nativeSrc":"1918:38:26","nodeType":"YulFunctionCall","src":"1918:38:26"},"variableNames":[{"name":"value1","nativeSrc":"1908:6:26","nodeType":"YulIdentifier","src":"1908:6:26"}]},{"nativeSrc":"1965:48:26","nodeType":"YulAssignment","src":"1965:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1998:9:26","nodeType":"YulIdentifier","src":"1998:9:26"},{"kind":"number","nativeSrc":"2009:2:26","nodeType":"YulLiteral","src":"2009:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1994:3:26","nodeType":"YulIdentifier","src":"1994:3:26"},"nativeSrc":"1994:18:26","nodeType":"YulFunctionCall","src":"1994:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1975:18:26","nodeType":"YulIdentifier","src":"1975:18:26"},"nativeSrc":"1975:38:26","nodeType":"YulFunctionCall","src":"1975:38:26"},"variableNames":[{"name":"value2","nativeSrc":"1965:6:26","nodeType":"YulIdentifier","src":"1965:6:26"}]},{"nativeSrc":"2022:48:26","nodeType":"YulAssignment","src":"2022:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2055:9:26","nodeType":"YulIdentifier","src":"2055:9:26"},{"kind":"number","nativeSrc":"2066:2:26","nodeType":"YulLiteral","src":"2066:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2051:3:26","nodeType":"YulIdentifier","src":"2051:3:26"},"nativeSrc":"2051:18:26","nodeType":"YulFunctionCall","src":"2051:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2032:18:26","nodeType":"YulIdentifier","src":"2032:18:26"},"nativeSrc":"2032:38:26","nodeType":"YulFunctionCall","src":"2032:38:26"},"variableNames":[{"name":"value3","nativeSrc":"2022:6:26","nodeType":"YulIdentifier","src":"2022:6:26"}]},{"nativeSrc":"2079:14:26","nodeType":"YulVariableDeclaration","src":"2079:14:26","value":{"kind":"number","nativeSrc":"2092:1:26","nodeType":"YulLiteral","src":"2092:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2083:5:26","nodeType":"YulTypedName","src":"2083:5:26","type":""}]},{"nativeSrc":"2102:42:26","nodeType":"YulAssignment","src":"2102:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2128:9:26","nodeType":"YulIdentifier","src":"2128:9:26"},{"kind":"number","nativeSrc":"2139:3:26","nodeType":"YulLiteral","src":"2139:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2124:3:26","nodeType":"YulIdentifier","src":"2124:3:26"},"nativeSrc":"2124:19:26","nodeType":"YulFunctionCall","src":"2124:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:26","nodeType":"YulIdentifier","src":"2111:12:26"},"nativeSrc":"2111:33:26","nodeType":"YulFunctionCall","src":"2111:33:26"},"variableNames":[{"name":"value","nativeSrc":"2102:5:26","nodeType":"YulIdentifier","src":"2102:5:26"}]},{"nativeSrc":"2153:15:26","nodeType":"YulAssignment","src":"2153:15:26","value":{"name":"value","nativeSrc":"2163:5:26","nodeType":"YulIdentifier","src":"2163:5:26"},"variableNames":[{"name":"value4","nativeSrc":"2153:6:26","nodeType":"YulIdentifier","src":"2153:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256","nativeSrc":"1650:524:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1722:9:26","nodeType":"YulTypedName","src":"1722:9:26","type":""},{"name":"dataEnd","nativeSrc":"1733:7:26","nodeType":"YulTypedName","src":"1733:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1745:6:26","nodeType":"YulTypedName","src":"1745:6:26","type":""},{"name":"value1","nativeSrc":"1753:6:26","nodeType":"YulTypedName","src":"1753:6:26","type":""},{"name":"value2","nativeSrc":"1761:6:26","nodeType":"YulTypedName","src":"1761:6:26","type":""},{"name":"value3","nativeSrc":"1769:6:26","nodeType":"YulTypedName","src":"1769:6:26","type":""},{"name":"value4","nativeSrc":"1777:6:26","nodeType":"YulTypedName","src":"1777:6:26","type":""}],"src":"1650:524:26"},{"body":{"nativeSrc":"2295:102:26","nodeType":"YulBlock","src":"2295:102:26","statements":[{"nativeSrc":"2305:26:26","nodeType":"YulAssignment","src":"2305:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2317:9:26","nodeType":"YulIdentifier","src":"2317:9:26"},{"kind":"number","nativeSrc":"2328:2:26","nodeType":"YulLiteral","src":"2328:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2313:3:26","nodeType":"YulIdentifier","src":"2313:3:26"},"nativeSrc":"2313:18:26","nodeType":"YulFunctionCall","src":"2313:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2305:4:26","nodeType":"YulIdentifier","src":"2305:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2347:9:26","nodeType":"YulIdentifier","src":"2347:9:26"},{"arguments":[{"name":"value0","nativeSrc":"2362:6:26","nodeType":"YulIdentifier","src":"2362:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2378:3:26","nodeType":"YulLiteral","src":"2378:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2383:1:26","nodeType":"YulLiteral","src":"2383:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2374:3:26","nodeType":"YulIdentifier","src":"2374:3:26"},"nativeSrc":"2374:11:26","nodeType":"YulFunctionCall","src":"2374:11:26"},{"kind":"number","nativeSrc":"2387:1:26","nodeType":"YulLiteral","src":"2387:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2370:3:26","nodeType":"YulIdentifier","src":"2370:3:26"},"nativeSrc":"2370:19:26","nodeType":"YulFunctionCall","src":"2370:19:26"}],"functionName":{"name":"and","nativeSrc":"2358:3:26","nodeType":"YulIdentifier","src":"2358:3:26"},"nativeSrc":"2358:32:26","nodeType":"YulFunctionCall","src":"2358:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2340:6:26","nodeType":"YulIdentifier","src":"2340:6:26"},"nativeSrc":"2340:51:26","nodeType":"YulFunctionCall","src":"2340:51:26"},"nativeSrc":"2340:51:26","nodeType":"YulExpressionStatement","src":"2340:51:26"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2506__to_t_address__fromStack_reversed","nativeSrc":"2179:218:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2264:9:26","nodeType":"YulTypedName","src":"2264:9:26","type":""},{"name":"value0","nativeSrc":"2275:6:26","nodeType":"YulTypedName","src":"2275:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2286:4:26","nodeType":"YulTypedName","src":"2286:4:26","type":""}],"src":"2179:218:26"},{"body":{"nativeSrc":"2576:167:26","nodeType":"YulBlock","src":"2576:167:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2593:9:26","nodeType":"YulIdentifier","src":"2593:9:26"},{"kind":"number","nativeSrc":"2604:2:26","nodeType":"YulLiteral","src":"2604:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2586:6:26","nodeType":"YulIdentifier","src":"2586:6:26"},"nativeSrc":"2586:21:26","nodeType":"YulFunctionCall","src":"2586:21:26"},"nativeSrc":"2586:21:26","nodeType":"YulExpressionStatement","src":"2586:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2627:9:26","nodeType":"YulIdentifier","src":"2627:9:26"},{"kind":"number","nativeSrc":"2638:2:26","nodeType":"YulLiteral","src":"2638:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2623:3:26","nodeType":"YulIdentifier","src":"2623:3:26"},"nativeSrc":"2623:18:26","nodeType":"YulFunctionCall","src":"2623:18:26"},{"kind":"number","nativeSrc":"2643:2:26","nodeType":"YulLiteral","src":"2643:2:26","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"2616:6:26","nodeType":"YulIdentifier","src":"2616:6:26"},"nativeSrc":"2616:30:26","nodeType":"YulFunctionCall","src":"2616:30:26"},"nativeSrc":"2616:30:26","nodeType":"YulExpressionStatement","src":"2616:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2666:9:26","nodeType":"YulIdentifier","src":"2666:9:26"},{"kind":"number","nativeSrc":"2677:2:26","nodeType":"YulLiteral","src":"2677:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2662:3:26","nodeType":"YulIdentifier","src":"2662:3:26"},"nativeSrc":"2662:18:26","nodeType":"YulFunctionCall","src":"2662:18:26"},{"hexValue":"51756f7461206d757374206265203e2030","kind":"string","nativeSrc":"2682:19:26","nodeType":"YulLiteral","src":"2682:19:26","type":"","value":"Quota must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"2655:6:26","nodeType":"YulIdentifier","src":"2655:6:26"},"nativeSrc":"2655:47:26","nodeType":"YulFunctionCall","src":"2655:47:26"},"nativeSrc":"2655:47:26","nodeType":"YulExpressionStatement","src":"2655:47:26"},{"nativeSrc":"2711:26:26","nodeType":"YulAssignment","src":"2711:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2723:9:26","nodeType":"YulIdentifier","src":"2723:9:26"},{"kind":"number","nativeSrc":"2734:2:26","nodeType":"YulLiteral","src":"2734:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2719:3:26","nodeType":"YulIdentifier","src":"2719:3:26"},"nativeSrc":"2719:18:26","nodeType":"YulFunctionCall","src":"2719:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2711:4:26","nodeType":"YulIdentifier","src":"2711:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2402:341:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2553:9:26","nodeType":"YulTypedName","src":"2553:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2567:4:26","nodeType":"YulTypedName","src":"2567:4:26","type":""}],"src":"2402:341:26"},{"body":{"nativeSrc":"2877:119:26","nodeType":"YulBlock","src":"2877:119:26","statements":[{"nativeSrc":"2887:26:26","nodeType":"YulAssignment","src":"2887:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2899:9:26","nodeType":"YulIdentifier","src":"2899:9:26"},{"kind":"number","nativeSrc":"2910:2:26","nodeType":"YulLiteral","src":"2910:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2895:3:26","nodeType":"YulIdentifier","src":"2895:3:26"},"nativeSrc":"2895:18:26","nodeType":"YulFunctionCall","src":"2895:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2887:4:26","nodeType":"YulIdentifier","src":"2887:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2929:9:26","nodeType":"YulIdentifier","src":"2929:9:26"},{"name":"value0","nativeSrc":"2940:6:26","nodeType":"YulIdentifier","src":"2940:6:26"}],"functionName":{"name":"mstore","nativeSrc":"2922:6:26","nodeType":"YulIdentifier","src":"2922:6:26"},"nativeSrc":"2922:25:26","nodeType":"YulFunctionCall","src":"2922:25:26"},"nativeSrc":"2922:25:26","nodeType":"YulExpressionStatement","src":"2922:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2967:9:26","nodeType":"YulIdentifier","src":"2967:9:26"},{"kind":"number","nativeSrc":"2978:2:26","nodeType":"YulLiteral","src":"2978:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2963:3:26","nodeType":"YulIdentifier","src":"2963:3:26"},"nativeSrc":"2963:18:26","nodeType":"YulFunctionCall","src":"2963:18:26"},{"name":"value1","nativeSrc":"2983:6:26","nodeType":"YulIdentifier","src":"2983:6:26"}],"functionName":{"name":"mstore","nativeSrc":"2956:6:26","nodeType":"YulIdentifier","src":"2956:6:26"},"nativeSrc":"2956:34:26","nodeType":"YulFunctionCall","src":"2956:34:26"},"nativeSrc":"2956:34:26","nodeType":"YulExpressionStatement","src":"2956:34:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"2748:248:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2838:9:26","nodeType":"YulTypedName","src":"2838:9:26","type":""},{"name":"value1","nativeSrc":"2849:6:26","nodeType":"YulTypedName","src":"2849:6:26","type":""},{"name":"value0","nativeSrc":"2857:6:26","nodeType":"YulTypedName","src":"2857:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2868:4:26","nodeType":"YulTypedName","src":"2868:4:26","type":""}],"src":"2748:248:26"},{"body":{"nativeSrc":"3175:165:26","nodeType":"YulBlock","src":"3175:165:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3192:9:26","nodeType":"YulIdentifier","src":"3192:9:26"},{"kind":"number","nativeSrc":"3203:2:26","nodeType":"YulLiteral","src":"3203:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3185:6:26","nodeType":"YulIdentifier","src":"3185:6:26"},"nativeSrc":"3185:21:26","nodeType":"YulFunctionCall","src":"3185:21:26"},"nativeSrc":"3185:21:26","nodeType":"YulExpressionStatement","src":"3185:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3226:9:26","nodeType":"YulIdentifier","src":"3226:9:26"},{"kind":"number","nativeSrc":"3237:2:26","nodeType":"YulLiteral","src":"3237:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3222:3:26","nodeType":"YulIdentifier","src":"3222:3:26"},"nativeSrc":"3222:18:26","nodeType":"YulFunctionCall","src":"3222:18:26"},{"kind":"number","nativeSrc":"3242:2:26","nodeType":"YulLiteral","src":"3242:2:26","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"3215:6:26","nodeType":"YulIdentifier","src":"3215:6:26"},"nativeSrc":"3215:30:26","nodeType":"YulFunctionCall","src":"3215:30:26"},"nativeSrc":"3215:30:26","nodeType":"YulExpressionStatement","src":"3215:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3265:9:26","nodeType":"YulIdentifier","src":"3265:9:26"},{"kind":"number","nativeSrc":"3276:2:26","nodeType":"YulLiteral","src":"3276:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3261:3:26","nodeType":"YulIdentifier","src":"3261:3:26"},"nativeSrc":"3261:18:26","nodeType":"YulFunctionCall","src":"3261:18:26"},{"hexValue":"416c726561647920636c61696d6564","kind":"string","nativeSrc":"3281:17:26","nodeType":"YulLiteral","src":"3281:17:26","type":"","value":"Already claimed"}],"functionName":{"name":"mstore","nativeSrc":"3254:6:26","nodeType":"YulIdentifier","src":"3254:6:26"},"nativeSrc":"3254:45:26","nodeType":"YulFunctionCall","src":"3254:45:26"},"nativeSrc":"3254:45:26","nodeType":"YulExpressionStatement","src":"3254:45:26"},{"nativeSrc":"3308:26:26","nodeType":"YulAssignment","src":"3308:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3320:9:26","nodeType":"YulIdentifier","src":"3320:9:26"},{"kind":"number","nativeSrc":"3331:2:26","nodeType":"YulLiteral","src":"3331:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3316:3:26","nodeType":"YulIdentifier","src":"3316:3:26"},"nativeSrc":"3316:18:26","nodeType":"YulFunctionCall","src":"3316:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3308:4:26","nodeType":"YulIdentifier","src":"3308:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3001:339:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3152:9:26","nodeType":"YulTypedName","src":"3152:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3166:4:26","nodeType":"YulTypedName","src":"3166:4:26","type":""}],"src":"3001:339:26"},{"body":{"nativeSrc":"3423:199:26","nodeType":"YulBlock","src":"3423:199:26","statements":[{"body":{"nativeSrc":"3469:16:26","nodeType":"YulBlock","src":"3469:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3478:1:26","nodeType":"YulLiteral","src":"3478:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3481:1:26","nodeType":"YulLiteral","src":"3481:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3471:6:26","nodeType":"YulIdentifier","src":"3471:6:26"},"nativeSrc":"3471:12:26","nodeType":"YulFunctionCall","src":"3471:12:26"},"nativeSrc":"3471:12:26","nodeType":"YulExpressionStatement","src":"3471:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3444:7:26","nodeType":"YulIdentifier","src":"3444:7:26"},{"name":"headStart","nativeSrc":"3453:9:26","nodeType":"YulIdentifier","src":"3453:9:26"}],"functionName":{"name":"sub","nativeSrc":"3440:3:26","nodeType":"YulIdentifier","src":"3440:3:26"},"nativeSrc":"3440:23:26","nodeType":"YulFunctionCall","src":"3440:23:26"},{"kind":"number","nativeSrc":"3465:2:26","nodeType":"YulLiteral","src":"3465:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3436:3:26","nodeType":"YulIdentifier","src":"3436:3:26"},"nativeSrc":"3436:32:26","nodeType":"YulFunctionCall","src":"3436:32:26"},"nativeSrc":"3433:52:26","nodeType":"YulIf","src":"3433:52:26"},{"nativeSrc":"3494:29:26","nodeType":"YulVariableDeclaration","src":"3494:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3513:9:26","nodeType":"YulIdentifier","src":"3513:9:26"}],"functionName":{"name":"mload","nativeSrc":"3507:5:26","nodeType":"YulIdentifier","src":"3507:5:26"},"nativeSrc":"3507:16:26","nodeType":"YulFunctionCall","src":"3507:16:26"},"variables":[{"name":"value","nativeSrc":"3498:5:26","nodeType":"YulTypedName","src":"3498:5:26","type":""}]},{"body":{"nativeSrc":"3576:16:26","nodeType":"YulBlock","src":"3576:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3585:1:26","nodeType":"YulLiteral","src":"3585:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3588:1:26","nodeType":"YulLiteral","src":"3588:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3578:6:26","nodeType":"YulIdentifier","src":"3578:6:26"},"nativeSrc":"3578:12:26","nodeType":"YulFunctionCall","src":"3578:12:26"},"nativeSrc":"3578:12:26","nodeType":"YulExpressionStatement","src":"3578:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3545:5:26","nodeType":"YulIdentifier","src":"3545:5:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3566:5:26","nodeType":"YulIdentifier","src":"3566:5:26"}],"functionName":{"name":"iszero","nativeSrc":"3559:6:26","nodeType":"YulIdentifier","src":"3559:6:26"},"nativeSrc":"3559:13:26","nodeType":"YulFunctionCall","src":"3559:13:26"}],"functionName":{"name":"iszero","nativeSrc":"3552:6:26","nodeType":"YulIdentifier","src":"3552:6:26"},"nativeSrc":"3552:21:26","nodeType":"YulFunctionCall","src":"3552:21:26"}],"functionName":{"name":"eq","nativeSrc":"3542:2:26","nodeType":"YulIdentifier","src":"3542:2:26"},"nativeSrc":"3542:32:26","nodeType":"YulFunctionCall","src":"3542:32:26"}],"functionName":{"name":"iszero","nativeSrc":"3535:6:26","nodeType":"YulIdentifier","src":"3535:6:26"},"nativeSrc":"3535:40:26","nodeType":"YulFunctionCall","src":"3535:40:26"},"nativeSrc":"3532:60:26","nodeType":"YulIf","src":"3532:60:26"},{"nativeSrc":"3601:15:26","nodeType":"YulAssignment","src":"3601:15:26","value":{"name":"value","nativeSrc":"3611:5:26","nodeType":"YulIdentifier","src":"3611:5:26"},"variableNames":[{"name":"value0","nativeSrc":"3601:6:26","nodeType":"YulIdentifier","src":"3601:6:26"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"3345:277:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3389:9:26","nodeType":"YulTypedName","src":"3389:9:26","type":""},{"name":"dataEnd","nativeSrc":"3400:7:26","nodeType":"YulTypedName","src":"3400:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3412:6:26","nodeType":"YulTypedName","src":"3412:6:26","type":""}],"src":"3345:277:26"},{"body":{"nativeSrc":"3801:165:26","nodeType":"YulBlock","src":"3801:165:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3818:9:26","nodeType":"YulIdentifier","src":"3818:9:26"},{"kind":"number","nativeSrc":"3829:2:26","nodeType":"YulLiteral","src":"3829:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3811:6:26","nodeType":"YulIdentifier","src":"3811:6:26"},"nativeSrc":"3811:21:26","nodeType":"YulFunctionCall","src":"3811:21:26"},"nativeSrc":"3811:21:26","nodeType":"YulExpressionStatement","src":"3811:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3852:9:26","nodeType":"YulIdentifier","src":"3852:9:26"},{"kind":"number","nativeSrc":"3863:2:26","nodeType":"YulLiteral","src":"3863:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3848:3:26","nodeType":"YulIdentifier","src":"3848:3:26"},"nativeSrc":"3848:18:26","nodeType":"YulFunctionCall","src":"3848:18:26"},{"kind":"number","nativeSrc":"3868:2:26","nodeType":"YulLiteral","src":"3868:2:26","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"3841:6:26","nodeType":"YulIdentifier","src":"3841:6:26"},"nativeSrc":"3841:30:26","nodeType":"YulFunctionCall","src":"3841:30:26"},"nativeSrc":"3841:30:26","nodeType":"YulExpressionStatement","src":"3841:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3891:9:26","nodeType":"YulIdentifier","src":"3891:9:26"},{"kind":"number","nativeSrc":"3902:2:26","nodeType":"YulLiteral","src":"3902:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3887:3:26","nodeType":"YulIdentifier","src":"3887:3:26"},"nativeSrc":"3887:18:26","nodeType":"YulFunctionCall","src":"3887:18:26"},{"hexValue":"4e6f742077686974656c6973746564","kind":"string","nativeSrc":"3907:17:26","nodeType":"YulLiteral","src":"3907:17:26","type":"","value":"Not whitelisted"}],"functionName":{"name":"mstore","nativeSrc":"3880:6:26","nodeType":"YulIdentifier","src":"3880:6:26"},"nativeSrc":"3880:45:26","nodeType":"YulFunctionCall","src":"3880:45:26"},"nativeSrc":"3880:45:26","nodeType":"YulExpressionStatement","src":"3880:45:26"},{"nativeSrc":"3934:26:26","nodeType":"YulAssignment","src":"3934:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3946:9:26","nodeType":"YulIdentifier","src":"3946:9:26"},{"kind":"number","nativeSrc":"3957:2:26","nodeType":"YulLiteral","src":"3957:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3942:3:26","nodeType":"YulIdentifier","src":"3942:3:26"},"nativeSrc":"3942:18:26","nodeType":"YulFunctionCall","src":"3942:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3934:4:26","nodeType":"YulIdentifier","src":"3934:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3627:339:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3778:9:26","nodeType":"YulTypedName","src":"3778:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3792:4:26","nodeType":"YulTypedName","src":"3792:4:26","type":""}],"src":"3627:339:26"},{"body":{"nativeSrc":"4052:103:26","nodeType":"YulBlock","src":"4052:103:26","statements":[{"body":{"nativeSrc":"4098:16:26","nodeType":"YulBlock","src":"4098:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4107:1:26","nodeType":"YulLiteral","src":"4107:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4110:1:26","nodeType":"YulLiteral","src":"4110:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4100:6:26","nodeType":"YulIdentifier","src":"4100:6:26"},"nativeSrc":"4100:12:26","nodeType":"YulFunctionCall","src":"4100:12:26"},"nativeSrc":"4100:12:26","nodeType":"YulExpressionStatement","src":"4100:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4073:7:26","nodeType":"YulIdentifier","src":"4073:7:26"},{"name":"headStart","nativeSrc":"4082:9:26","nodeType":"YulIdentifier","src":"4082:9:26"}],"functionName":{"name":"sub","nativeSrc":"4069:3:26","nodeType":"YulIdentifier","src":"4069:3:26"},"nativeSrc":"4069:23:26","nodeType":"YulFunctionCall","src":"4069:23:26"},{"kind":"number","nativeSrc":"4094:2:26","nodeType":"YulLiteral","src":"4094:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4065:3:26","nodeType":"YulIdentifier","src":"4065:3:26"},"nativeSrc":"4065:32:26","nodeType":"YulFunctionCall","src":"4065:32:26"},"nativeSrc":"4062:52:26","nodeType":"YulIf","src":"4062:52:26"},{"nativeSrc":"4123:26:26","nodeType":"YulAssignment","src":"4123:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4139:9:26","nodeType":"YulIdentifier","src":"4139:9:26"}],"functionName":{"name":"mload","nativeSrc":"4133:5:26","nodeType":"YulIdentifier","src":"4133:5:26"},"nativeSrc":"4133:16:26","nodeType":"YulFunctionCall","src":"4133:16:26"},"variableNames":[{"name":"value0","nativeSrc":"4123:6:26","nodeType":"YulIdentifier","src":"4123:6:26"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"3971:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4018:9:26","nodeType":"YulTypedName","src":"4018:9:26","type":""},{"name":"dataEnd","nativeSrc":"4029:7:26","nodeType":"YulTypedName","src":"4029:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4041:6:26","nodeType":"YulTypedName","src":"4041:6:26","type":""}],"src":"3971:184:26"},{"body":{"nativeSrc":"4203:136:26","nodeType":"YulBlock","src":"4203:136:26","statements":[{"body":{"nativeSrc":"4248:85:26","nodeType":"YulBlock","src":"4248:85:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4277:1:26","nodeType":"YulLiteral","src":"4277:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4280:1:26","nodeType":"YulLiteral","src":"4280:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4283:1:26","nodeType":"YulLiteral","src":"4283:1:26","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nativeSrc":"4262:14:26","nodeType":"YulIdentifier","src":"4262:14:26"},"nativeSrc":"4262:23:26","nodeType":"YulFunctionCall","src":"4262:23:26"},"nativeSrc":"4262:23:26","nodeType":"YulExpressionStatement","src":"4262:23:26"},{"nativeSrc":"4298:25:26","nodeType":"YulAssignment","src":"4298:25:26","value":{"arguments":[{"kind":"number","nativeSrc":"4309:3:26","nodeType":"YulLiteral","src":"4309:3:26","type":"","value":"224"},{"arguments":[{"kind":"number","nativeSrc":"4320:1:26","nodeType":"YulLiteral","src":"4320:1:26","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"4314:5:26","nodeType":"YulIdentifier","src":"4314:5:26"},"nativeSrc":"4314:8:26","nodeType":"YulFunctionCall","src":"4314:8:26"}],"functionName":{"name":"shr","nativeSrc":"4305:3:26","nodeType":"YulIdentifier","src":"4305:3:26"},"nativeSrc":"4305:18:26","nodeType":"YulFunctionCall","src":"4305:18:26"},"variableNames":[{"name":"sig","nativeSrc":"4298:3:26","nodeType":"YulIdentifier","src":"4298:3:26"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"4219:14:26","nodeType":"YulIdentifier","src":"4219:14:26"},"nativeSrc":"4219:16:26","nodeType":"YulFunctionCall","src":"4219:16:26"},{"kind":"number","nativeSrc":"4237:1:26","nodeType":"YulLiteral","src":"4237:1:26","type":"","value":"3"}],"functionName":{"name":"gt","nativeSrc":"4216:2:26","nodeType":"YulIdentifier","src":"4216:2:26"},"nativeSrc":"4216:23:26","nodeType":"YulFunctionCall","src":"4216:23:26"},"nativeSrc":"4213:120:26","nodeType":"YulIf","src":"4213:120:26"}]},"name":"return_data_selector","nativeSrc":"4160:179:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nativeSrc":"4195:3:26","nodeType":"YulTypedName","src":"4195:3:26","type":""}],"src":"4160:179:26"},{"body":{"nativeSrc":"4391:299:26","nodeType":"YulBlock","src":"4391:299:26","statements":[{"nativeSrc":"4401:58:26","nodeType":"YulVariableDeclaration","src":"4401:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"4423:6:26","nodeType":"YulIdentifier","src":"4423:6:26"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"4439:4:26","nodeType":"YulIdentifier","src":"4439:4:26"},{"kind":"number","nativeSrc":"4445:2:26","nodeType":"YulLiteral","src":"4445:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4435:3:26","nodeType":"YulIdentifier","src":"4435:3:26"},"nativeSrc":"4435:13:26","nodeType":"YulFunctionCall","src":"4435:13:26"},{"arguments":[{"kind":"number","nativeSrc":"4454:2:26","nodeType":"YulLiteral","src":"4454:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4450:3:26","nodeType":"YulIdentifier","src":"4450:3:26"},"nativeSrc":"4450:7:26","nodeType":"YulFunctionCall","src":"4450:7:26"}],"functionName":{"name":"and","nativeSrc":"4431:3:26","nodeType":"YulIdentifier","src":"4431:3:26"},"nativeSrc":"4431:27:26","nodeType":"YulFunctionCall","src":"4431:27:26"}],"functionName":{"name":"add","nativeSrc":"4419:3:26","nodeType":"YulIdentifier","src":"4419:3:26"},"nativeSrc":"4419:40:26","nodeType":"YulFunctionCall","src":"4419:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"4405:10:26","nodeType":"YulTypedName","src":"4405:10:26","type":""}]},{"body":{"nativeSrc":"4542:111:26","nodeType":"YulBlock","src":"4542:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4563:1:26","nodeType":"YulLiteral","src":"4563:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4570:3:26","nodeType":"YulLiteral","src":"4570:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"4575:10:26","nodeType":"YulLiteral","src":"4575:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4566:3:26","nodeType":"YulIdentifier","src":"4566:3:26"},"nativeSrc":"4566:20:26","nodeType":"YulFunctionCall","src":"4566:20:26"}],"functionName":{"name":"mstore","nativeSrc":"4556:6:26","nodeType":"YulIdentifier","src":"4556:6:26"},"nativeSrc":"4556:31:26","nodeType":"YulFunctionCall","src":"4556:31:26"},"nativeSrc":"4556:31:26","nodeType":"YulExpressionStatement","src":"4556:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4607:1:26","nodeType":"YulLiteral","src":"4607:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"4610:4:26","nodeType":"YulLiteral","src":"4610:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"4600:6:26","nodeType":"YulIdentifier","src":"4600:6:26"},"nativeSrc":"4600:15:26","nodeType":"YulFunctionCall","src":"4600:15:26"},"nativeSrc":"4600:15:26","nodeType":"YulExpressionStatement","src":"4600:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4635:1:26","nodeType":"YulLiteral","src":"4635:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4638:4:26","nodeType":"YulLiteral","src":"4638:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4628:6:26","nodeType":"YulIdentifier","src":"4628:6:26"},"nativeSrc":"4628:15:26","nodeType":"YulFunctionCall","src":"4628:15:26"},"nativeSrc":"4628:15:26","nodeType":"YulExpressionStatement","src":"4628:15:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4477:10:26","nodeType":"YulIdentifier","src":"4477:10:26"},{"kind":"number","nativeSrc":"4489:18:26","nodeType":"YulLiteral","src":"4489:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4474:2:26","nodeType":"YulIdentifier","src":"4474:2:26"},"nativeSrc":"4474:34:26","nodeType":"YulFunctionCall","src":"4474:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4513:10:26","nodeType":"YulIdentifier","src":"4513:10:26"},{"name":"memPtr","nativeSrc":"4525:6:26","nodeType":"YulIdentifier","src":"4525:6:26"}],"functionName":{"name":"lt","nativeSrc":"4510:2:26","nodeType":"YulIdentifier","src":"4510:2:26"},"nativeSrc":"4510:22:26","nodeType":"YulFunctionCall","src":"4510:22:26"}],"functionName":{"name":"or","nativeSrc":"4471:2:26","nodeType":"YulIdentifier","src":"4471:2:26"},"nativeSrc":"4471:62:26","nodeType":"YulFunctionCall","src":"4471:62:26"},"nativeSrc":"4468:185:26","nodeType":"YulIf","src":"4468:185:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4669:2:26","nodeType":"YulLiteral","src":"4669:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4673:10:26","nodeType":"YulIdentifier","src":"4673:10:26"}],"functionName":{"name":"mstore","nativeSrc":"4662:6:26","nodeType":"YulIdentifier","src":"4662:6:26"},"nativeSrc":"4662:22:26","nodeType":"YulFunctionCall","src":"4662:22:26"},"nativeSrc":"4662:22:26","nodeType":"YulExpressionStatement","src":"4662:22:26"}]},"name":"finalize_allocation","nativeSrc":"4344:346:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4373:6:26","nodeType":"YulTypedName","src":"4373:6:26","type":""},{"name":"size","nativeSrc":"4381:4:26","nodeType":"YulTypedName","src":"4381:4:26","type":""}],"src":"4344:346:26"},{"body":{"nativeSrc":"4742:581:26","nodeType":"YulBlock","src":"4742:581:26","statements":[{"body":{"nativeSrc":"4782:9:26","nodeType":"YulBlock","src":"4782:9:26","statements":[{"nativeSrc":"4784:5:26","nodeType":"YulLeave","src":"4784:5:26"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"4758:14:26","nodeType":"YulIdentifier","src":"4758:14:26"},"nativeSrc":"4758:16:26","nodeType":"YulFunctionCall","src":"4758:16:26"},{"kind":"number","nativeSrc":"4776:4:26","nodeType":"YulLiteral","src":"4776:4:26","type":"","value":"0x44"}],"functionName":{"name":"lt","nativeSrc":"4755:2:26","nodeType":"YulIdentifier","src":"4755:2:26"},"nativeSrc":"4755:26:26","nodeType":"YulFunctionCall","src":"4755:26:26"},"nativeSrc":"4752:39:26","nodeType":"YulIf","src":"4752:39:26"},{"nativeSrc":"4800:21:26","nodeType":"YulVariableDeclaration","src":"4800:21:26","value":{"arguments":[{"kind":"number","nativeSrc":"4818:2:26","nodeType":"YulLiteral","src":"4818:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"4812:5:26","nodeType":"YulIdentifier","src":"4812:5:26"},"nativeSrc":"4812:9:26","nodeType":"YulFunctionCall","src":"4812:9:26"},"variables":[{"name":"data","nativeSrc":"4804:4:26","nodeType":"YulTypedName","src":"4804:4:26","type":""}]},{"expression":{"arguments":[{"name":"data","nativeSrc":"4845:4:26","nodeType":"YulIdentifier","src":"4845:4:26"},{"kind":"number","nativeSrc":"4851:1:26","nodeType":"YulLiteral","src":"4851:1:26","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"4858:14:26","nodeType":"YulIdentifier","src":"4858:14:26"},"nativeSrc":"4858:16:26","nodeType":"YulFunctionCall","src":"4858:16:26"},{"arguments":[{"kind":"number","nativeSrc":"4880:1:26","nodeType":"YulLiteral","src":"4880:1:26","type":"","value":"3"}],"functionName":{"name":"not","nativeSrc":"4876:3:26","nodeType":"YulIdentifier","src":"4876:3:26"},"nativeSrc":"4876:6:26","nodeType":"YulFunctionCall","src":"4876:6:26"}],"functionName":{"name":"add","nativeSrc":"4854:3:26","nodeType":"YulIdentifier","src":"4854:3:26"},"nativeSrc":"4854:29:26","nodeType":"YulFunctionCall","src":"4854:29:26"}],"functionName":{"name":"returndatacopy","nativeSrc":"4830:14:26","nodeType":"YulIdentifier","src":"4830:14:26"},"nativeSrc":"4830:54:26","nodeType":"YulFunctionCall","src":"4830:54:26"},"nativeSrc":"4830:54:26","nodeType":"YulExpressionStatement","src":"4830:54:26"},{"nativeSrc":"4893:25:26","nodeType":"YulVariableDeclaration","src":"4893:25:26","value":{"arguments":[{"name":"data","nativeSrc":"4913:4:26","nodeType":"YulIdentifier","src":"4913:4:26"}],"functionName":{"name":"mload","nativeSrc":"4907:5:26","nodeType":"YulIdentifier","src":"4907:5:26"},"nativeSrc":"4907:11:26","nodeType":"YulFunctionCall","src":"4907:11:26"},"variables":[{"name":"offset","nativeSrc":"4897:6:26","nodeType":"YulTypedName","src":"4897:6:26","type":""}]},{"body":{"nativeSrc":"5006:9:26","nodeType":"YulBlock","src":"5006:9:26","statements":[{"nativeSrc":"5008:5:26","nodeType":"YulLeave","src":"5008:5:26"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4936:6:26","nodeType":"YulIdentifier","src":"4936:6:26"},{"kind":"number","nativeSrc":"4944:18:26","nodeType":"YulLiteral","src":"4944:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4933:2:26","nodeType":"YulIdentifier","src":"4933:2:26"},"nativeSrc":"4933:30:26","nodeType":"YulFunctionCall","src":"4933:30:26"},{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4972:6:26","nodeType":"YulIdentifier","src":"4972:6:26"},{"kind":"number","nativeSrc":"4980:4:26","nodeType":"YulLiteral","src":"4980:4:26","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"4968:3:26","nodeType":"YulIdentifier","src":"4968:3:26"},"nativeSrc":"4968:17:26","nodeType":"YulFunctionCall","src":"4968:17:26"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"4987:14:26","nodeType":"YulIdentifier","src":"4987:14:26"},"nativeSrc":"4987:16:26","nodeType":"YulFunctionCall","src":"4987:16:26"}],"functionName":{"name":"gt","nativeSrc":"4965:2:26","nodeType":"YulIdentifier","src":"4965:2:26"},"nativeSrc":"4965:39:26","nodeType":"YulFunctionCall","src":"4965:39:26"}],"functionName":{"name":"or","nativeSrc":"4930:2:26","nodeType":"YulIdentifier","src":"4930:2:26"},"nativeSrc":"4930:75:26","nodeType":"YulFunctionCall","src":"4930:75:26"},"nativeSrc":"4927:88:26","nodeType":"YulIf","src":"4927:88:26"},{"nativeSrc":"5024:28:26","nodeType":"YulVariableDeclaration","src":"5024:28:26","value":{"arguments":[{"name":"data","nativeSrc":"5039:4:26","nodeType":"YulIdentifier","src":"5039:4:26"},{"name":"offset","nativeSrc":"5045:6:26","nodeType":"YulIdentifier","src":"5045:6:26"}],"functionName":{"name":"add","nativeSrc":"5035:3:26","nodeType":"YulIdentifier","src":"5035:3:26"},"nativeSrc":"5035:17:26","nodeType":"YulFunctionCall","src":"5035:17:26"},"variables":[{"name":"msg","nativeSrc":"5028:3:26","nodeType":"YulTypedName","src":"5028:3:26","type":""}]},{"nativeSrc":"5061:24:26","nodeType":"YulVariableDeclaration","src":"5061:24:26","value":{"arguments":[{"name":"msg","nativeSrc":"5081:3:26","nodeType":"YulIdentifier","src":"5081:3:26"}],"functionName":{"name":"mload","nativeSrc":"5075:5:26","nodeType":"YulIdentifier","src":"5075:5:26"},"nativeSrc":"5075:10:26","nodeType":"YulFunctionCall","src":"5075:10:26"},"variables":[{"name":"length","nativeSrc":"5065:6:26","nodeType":"YulTypedName","src":"5065:6:26","type":""}]},{"body":{"nativeSrc":"5128:9:26","nodeType":"YulBlock","src":"5128:9:26","statements":[{"nativeSrc":"5130:5:26","nodeType":"YulLeave","src":"5130:5:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5100:6:26","nodeType":"YulIdentifier","src":"5100:6:26"},{"kind":"number","nativeSrc":"5108:18:26","nodeType":"YulLiteral","src":"5108:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5097:2:26","nodeType":"YulIdentifier","src":"5097:2:26"},"nativeSrc":"5097:30:26","nodeType":"YulFunctionCall","src":"5097:30:26"},"nativeSrc":"5094:43:26","nodeType":"YulIf","src":"5094:43:26"},{"body":{"nativeSrc":"5223:9:26","nodeType":"YulBlock","src":"5223:9:26","statements":[{"nativeSrc":"5225:5:26","nodeType":"YulLeave","src":"5225:5:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nativeSrc":"5160:3:26","nodeType":"YulIdentifier","src":"5160:3:26"},{"name":"length","nativeSrc":"5165:6:26","nodeType":"YulIdentifier","src":"5165:6:26"}],"functionName":{"name":"add","nativeSrc":"5156:3:26","nodeType":"YulIdentifier","src":"5156:3:26"},"nativeSrc":"5156:16:26","nodeType":"YulFunctionCall","src":"5156:16:26"},{"kind":"number","nativeSrc":"5174:4:26","nodeType":"YulLiteral","src":"5174:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5152:3:26","nodeType":"YulIdentifier","src":"5152:3:26"},"nativeSrc":"5152:27:26","nodeType":"YulFunctionCall","src":"5152:27:26"},{"arguments":[{"arguments":[{"name":"data","nativeSrc":"5189:4:26","nodeType":"YulIdentifier","src":"5189:4:26"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"5195:14:26","nodeType":"YulIdentifier","src":"5195:14:26"},"nativeSrc":"5195:16:26","nodeType":"YulFunctionCall","src":"5195:16:26"}],"functionName":{"name":"add","nativeSrc":"5185:3:26","nodeType":"YulIdentifier","src":"5185:3:26"},"nativeSrc":"5185:27:26","nodeType":"YulFunctionCall","src":"5185:27:26"},{"arguments":[{"kind":"number","nativeSrc":"5218:1:26","nodeType":"YulLiteral","src":"5218:1:26","type":"","value":"3"}],"functionName":{"name":"not","nativeSrc":"5214:3:26","nodeType":"YulIdentifier","src":"5214:3:26"},"nativeSrc":"5214:6:26","nodeType":"YulFunctionCall","src":"5214:6:26"}],"functionName":{"name":"add","nativeSrc":"5181:3:26","nodeType":"YulIdentifier","src":"5181:3:26"},"nativeSrc":"5181:40:26","nodeType":"YulFunctionCall","src":"5181:40:26"}],"functionName":{"name":"gt","nativeSrc":"5149:2:26","nodeType":"YulIdentifier","src":"5149:2:26"},"nativeSrc":"5149:73:26","nodeType":"YulFunctionCall","src":"5149:73:26"},"nativeSrc":"5146:86:26","nodeType":"YulIf","src":"5146:86:26"},{"expression":{"arguments":[{"name":"data","nativeSrc":"5261:4:26","nodeType":"YulIdentifier","src":"5261:4:26"},{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5275:6:26","nodeType":"YulIdentifier","src":"5275:6:26"},{"name":"length","nativeSrc":"5283:6:26","nodeType":"YulIdentifier","src":"5283:6:26"}],"functionName":{"name":"add","nativeSrc":"5271:3:26","nodeType":"YulIdentifier","src":"5271:3:26"},"nativeSrc":"5271:19:26","nodeType":"YulFunctionCall","src":"5271:19:26"},{"kind":"number","nativeSrc":"5292:4:26","nodeType":"YulLiteral","src":"5292:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5267:3:26","nodeType":"YulIdentifier","src":"5267:3:26"},"nativeSrc":"5267:30:26","nodeType":"YulFunctionCall","src":"5267:30:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"5241:19:26","nodeType":"YulIdentifier","src":"5241:19:26"},"nativeSrc":"5241:57:26","nodeType":"YulFunctionCall","src":"5241:57:26"},"nativeSrc":"5241:57:26","nodeType":"YulExpressionStatement","src":"5241:57:26"},{"nativeSrc":"5307:10:26","nodeType":"YulAssignment","src":"5307:10:26","value":{"name":"msg","nativeSrc":"5314:3:26","nodeType":"YulIdentifier","src":"5314:3:26"},"variableNames":[{"name":"ret","nativeSrc":"5307:3:26","nodeType":"YulIdentifier","src":"5307:3:26"}]}]},"name":"try_decode_error_message","nativeSrc":"4695:628:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"4734:3:26","nodeType":"YulTypedName","src":"4734:3:26","type":""}],"src":"4695:628:26"},{"body":{"nativeSrc":"5394:184:26","nodeType":"YulBlock","src":"5394:184:26","statements":[{"nativeSrc":"5404:10:26","nodeType":"YulVariableDeclaration","src":"5404:10:26","value":{"kind":"number","nativeSrc":"5413:1:26","nodeType":"YulLiteral","src":"5413:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5408:1:26","nodeType":"YulTypedName","src":"5408:1:26","type":""}]},{"body":{"nativeSrc":"5473:63:26","nodeType":"YulBlock","src":"5473:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5498:3:26","nodeType":"YulIdentifier","src":"5498:3:26"},{"name":"i","nativeSrc":"5503:1:26","nodeType":"YulIdentifier","src":"5503:1:26"}],"functionName":{"name":"add","nativeSrc":"5494:3:26","nodeType":"YulIdentifier","src":"5494:3:26"},"nativeSrc":"5494:11:26","nodeType":"YulFunctionCall","src":"5494:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5517:3:26","nodeType":"YulIdentifier","src":"5517:3:26"},{"name":"i","nativeSrc":"5522:1:26","nodeType":"YulIdentifier","src":"5522:1:26"}],"functionName":{"name":"add","nativeSrc":"5513:3:26","nodeType":"YulIdentifier","src":"5513:3:26"},"nativeSrc":"5513:11:26","nodeType":"YulFunctionCall","src":"5513:11:26"}],"functionName":{"name":"mload","nativeSrc":"5507:5:26","nodeType":"YulIdentifier","src":"5507:5:26"},"nativeSrc":"5507:18:26","nodeType":"YulFunctionCall","src":"5507:18:26"}],"functionName":{"name":"mstore","nativeSrc":"5487:6:26","nodeType":"YulIdentifier","src":"5487:6:26"},"nativeSrc":"5487:39:26","nodeType":"YulFunctionCall","src":"5487:39:26"},"nativeSrc":"5487:39:26","nodeType":"YulExpressionStatement","src":"5487:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5434:1:26","nodeType":"YulIdentifier","src":"5434:1:26"},{"name":"length","nativeSrc":"5437:6:26","nodeType":"YulIdentifier","src":"5437:6:26"}],"functionName":{"name":"lt","nativeSrc":"5431:2:26","nodeType":"YulIdentifier","src":"5431:2:26"},"nativeSrc":"5431:13:26","nodeType":"YulFunctionCall","src":"5431:13:26"},"nativeSrc":"5423:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"5445:19:26","nodeType":"YulBlock","src":"5445:19:26","statements":[{"nativeSrc":"5447:15:26","nodeType":"YulAssignment","src":"5447:15:26","value":{"arguments":[{"name":"i","nativeSrc":"5456:1:26","nodeType":"YulIdentifier","src":"5456:1:26"},{"kind":"number","nativeSrc":"5459:2:26","nodeType":"YulLiteral","src":"5459:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5452:3:26","nodeType":"YulIdentifier","src":"5452:3:26"},"nativeSrc":"5452:10:26","nodeType":"YulFunctionCall","src":"5452:10:26"},"variableNames":[{"name":"i","nativeSrc":"5447:1:26","nodeType":"YulIdentifier","src":"5447:1:26"}]}]},"pre":{"nativeSrc":"5427:3:26","nodeType":"YulBlock","src":"5427:3:26","statements":[]},"src":"5423:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5556:3:26","nodeType":"YulIdentifier","src":"5556:3:26"},{"name":"length","nativeSrc":"5561:6:26","nodeType":"YulIdentifier","src":"5561:6:26"}],"functionName":{"name":"add","nativeSrc":"5552:3:26","nodeType":"YulIdentifier","src":"5552:3:26"},"nativeSrc":"5552:16:26","nodeType":"YulFunctionCall","src":"5552:16:26"},{"kind":"number","nativeSrc":"5570:1:26","nodeType":"YulLiteral","src":"5570:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5545:6:26","nodeType":"YulIdentifier","src":"5545:6:26"},"nativeSrc":"5545:27:26","nodeType":"YulFunctionCall","src":"5545:27:26"},"nativeSrc":"5545:27:26","nodeType":"YulExpressionStatement","src":"5545:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5328:250:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"5372:3:26","nodeType":"YulTypedName","src":"5372:3:26","type":""},{"name":"dst","nativeSrc":"5377:3:26","nodeType":"YulTypedName","src":"5377:3:26","type":""},{"name":"length","nativeSrc":"5382:6:26","nodeType":"YulTypedName","src":"5382:6:26","type":""}],"src":"5328:250:26"},{"body":{"nativeSrc":"5823:209:26","nodeType":"YulBlock","src":"5823:209:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5840:3:26","nodeType":"YulIdentifier","src":"5840:3:26"},{"hexValue":"4e4654206d696e74206661696c65643a20","kind":"string","nativeSrc":"5845:19:26","nodeType":"YulLiteral","src":"5845:19:26","type":"","value":"NFT mint failed: "}],"functionName":{"name":"mstore","nativeSrc":"5833:6:26","nodeType":"YulIdentifier","src":"5833:6:26"},"nativeSrc":"5833:32:26","nodeType":"YulFunctionCall","src":"5833:32:26"},"nativeSrc":"5833:32:26","nodeType":"YulExpressionStatement","src":"5833:32:26"},{"nativeSrc":"5874:27:26","nodeType":"YulVariableDeclaration","src":"5874:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"5894:6:26","nodeType":"YulIdentifier","src":"5894:6:26"}],"functionName":{"name":"mload","nativeSrc":"5888:5:26","nodeType":"YulIdentifier","src":"5888:5:26"},"nativeSrc":"5888:13:26","nodeType":"YulFunctionCall","src":"5888:13:26"},"variables":[{"name":"length","nativeSrc":"5878:6:26","nodeType":"YulTypedName","src":"5878:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5949:6:26","nodeType":"YulIdentifier","src":"5949:6:26"},{"kind":"number","nativeSrc":"5957:4:26","nodeType":"YulLiteral","src":"5957:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5945:3:26","nodeType":"YulIdentifier","src":"5945:3:26"},"nativeSrc":"5945:17:26","nodeType":"YulFunctionCall","src":"5945:17:26"},{"arguments":[{"name":"pos","nativeSrc":"5968:3:26","nodeType":"YulIdentifier","src":"5968:3:26"},{"kind":"number","nativeSrc":"5973:2:26","nodeType":"YulLiteral","src":"5973:2:26","type":"","value":"17"}],"functionName":{"name":"add","nativeSrc":"5964:3:26","nodeType":"YulIdentifier","src":"5964:3:26"},"nativeSrc":"5964:12:26","nodeType":"YulFunctionCall","src":"5964:12:26"},{"name":"length","nativeSrc":"5978:6:26","nodeType":"YulIdentifier","src":"5978:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5910:34:26","nodeType":"YulIdentifier","src":"5910:34:26"},"nativeSrc":"5910:75:26","nodeType":"YulFunctionCall","src":"5910:75:26"},"nativeSrc":"5910:75:26","nodeType":"YulExpressionStatement","src":"5910:75:26"},{"nativeSrc":"5994:32:26","nodeType":"YulAssignment","src":"5994:32:26","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"6009:3:26","nodeType":"YulIdentifier","src":"6009:3:26"},{"name":"length","nativeSrc":"6014:6:26","nodeType":"YulIdentifier","src":"6014:6:26"}],"functionName":{"name":"add","nativeSrc":"6005:3:26","nodeType":"YulIdentifier","src":"6005:3:26"},"nativeSrc":"6005:16:26","nodeType":"YulFunctionCall","src":"6005:16:26"},{"kind":"number","nativeSrc":"6023:2:26","nodeType":"YulLiteral","src":"6023:2:26","type":"","value":"17"}],"functionName":{"name":"add","nativeSrc":"6001:3:26","nodeType":"YulIdentifier","src":"6001:3:26"},"nativeSrc":"6001:25:26","nodeType":"YulFunctionCall","src":"6001:25:26"},"variableNames":[{"name":"end","nativeSrc":"5994:3:26","nodeType":"YulIdentifier","src":"5994:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"5583:449:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5799:3:26","nodeType":"YulTypedName","src":"5799:3:26","type":""},{"name":"value0","nativeSrc":"5804:6:26","nodeType":"YulTypedName","src":"5804:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5815:3:26","nodeType":"YulTypedName","src":"5815:3:26","type":""}],"src":"5583:449:26"},{"body":{"nativeSrc":"6158:275:26","nodeType":"YulBlock","src":"6158:275:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6175:9:26","nodeType":"YulIdentifier","src":"6175:9:26"},{"kind":"number","nativeSrc":"6186:2:26","nodeType":"YulLiteral","src":"6186:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6168:6:26","nodeType":"YulIdentifier","src":"6168:6:26"},"nativeSrc":"6168:21:26","nodeType":"YulFunctionCall","src":"6168:21:26"},"nativeSrc":"6168:21:26","nodeType":"YulExpressionStatement","src":"6168:21:26"},{"nativeSrc":"6198:27:26","nodeType":"YulVariableDeclaration","src":"6198:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"6218:6:26","nodeType":"YulIdentifier","src":"6218:6:26"}],"functionName":{"name":"mload","nativeSrc":"6212:5:26","nodeType":"YulIdentifier","src":"6212:5:26"},"nativeSrc":"6212:13:26","nodeType":"YulFunctionCall","src":"6212:13:26"},"variables":[{"name":"length","nativeSrc":"6202:6:26","nodeType":"YulTypedName","src":"6202:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6245:9:26","nodeType":"YulIdentifier","src":"6245:9:26"},{"kind":"number","nativeSrc":"6256:2:26","nodeType":"YulLiteral","src":"6256:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6241:3:26","nodeType":"YulIdentifier","src":"6241:3:26"},"nativeSrc":"6241:18:26","nodeType":"YulFunctionCall","src":"6241:18:26"},{"name":"length","nativeSrc":"6261:6:26","nodeType":"YulIdentifier","src":"6261:6:26"}],"functionName":{"name":"mstore","nativeSrc":"6234:6:26","nodeType":"YulIdentifier","src":"6234:6:26"},"nativeSrc":"6234:34:26","nodeType":"YulFunctionCall","src":"6234:34:26"},"nativeSrc":"6234:34:26","nodeType":"YulExpressionStatement","src":"6234:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6316:6:26","nodeType":"YulIdentifier","src":"6316:6:26"},{"kind":"number","nativeSrc":"6324:2:26","nodeType":"YulLiteral","src":"6324:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6312:3:26","nodeType":"YulIdentifier","src":"6312:3:26"},"nativeSrc":"6312:15:26","nodeType":"YulFunctionCall","src":"6312:15:26"},{"arguments":[{"name":"headStart","nativeSrc":"6333:9:26","nodeType":"YulIdentifier","src":"6333:9:26"},{"kind":"number","nativeSrc":"6344:2:26","nodeType":"YulLiteral","src":"6344:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6329:3:26","nodeType":"YulIdentifier","src":"6329:3:26"},"nativeSrc":"6329:18:26","nodeType":"YulFunctionCall","src":"6329:18:26"},{"name":"length","nativeSrc":"6349:6:26","nodeType":"YulIdentifier","src":"6349:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6277:34:26","nodeType":"YulIdentifier","src":"6277:34:26"},"nativeSrc":"6277:79:26","nodeType":"YulFunctionCall","src":"6277:79:26"},"nativeSrc":"6277:79:26","nodeType":"YulExpressionStatement","src":"6277:79:26"},{"nativeSrc":"6365:62:26","nodeType":"YulAssignment","src":"6365:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6381:9:26","nodeType":"YulIdentifier","src":"6381:9:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6400:6:26","nodeType":"YulIdentifier","src":"6400:6:26"},{"kind":"number","nativeSrc":"6408:2:26","nodeType":"YulLiteral","src":"6408:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6396:3:26","nodeType":"YulIdentifier","src":"6396:3:26"},"nativeSrc":"6396:15:26","nodeType":"YulFunctionCall","src":"6396:15:26"},{"arguments":[{"kind":"number","nativeSrc":"6417:2:26","nodeType":"YulLiteral","src":"6417:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6413:3:26","nodeType":"YulIdentifier","src":"6413:3:26"},"nativeSrc":"6413:7:26","nodeType":"YulFunctionCall","src":"6413:7:26"}],"functionName":{"name":"and","nativeSrc":"6392:3:26","nodeType":"YulIdentifier","src":"6392:3:26"},"nativeSrc":"6392:29:26","nodeType":"YulFunctionCall","src":"6392:29:26"}],"functionName":{"name":"add","nativeSrc":"6377:3:26","nodeType":"YulIdentifier","src":"6377:3:26"},"nativeSrc":"6377:45:26","nodeType":"YulFunctionCall","src":"6377:45:26"},{"kind":"number","nativeSrc":"6424:2:26","nodeType":"YulLiteral","src":"6424:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6373:3:26","nodeType":"YulIdentifier","src":"6373:3:26"},"nativeSrc":"6373:54:26","nodeType":"YulFunctionCall","src":"6373:54:26"},"variableNames":[{"name":"tail","nativeSrc":"6365:4:26","nodeType":"YulIdentifier","src":"6365:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6037:396:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6127:9:26","nodeType":"YulTypedName","src":"6127:9:26","type":""},{"name":"value0","nativeSrc":"6138:6:26","nodeType":"YulTypedName","src":"6138:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6149:4:26","nodeType":"YulTypedName","src":"6149:4:26","type":""}],"src":"6037:396:26"},{"body":{"nativeSrc":"6612:168:26","nodeType":"YulBlock","src":"6612:168:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6629:9:26","nodeType":"YulIdentifier","src":"6629:9:26"},{"kind":"number","nativeSrc":"6640:2:26","nodeType":"YulLiteral","src":"6640:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6622:6:26","nodeType":"YulIdentifier","src":"6622:6:26"},"nativeSrc":"6622:21:26","nodeType":"YulFunctionCall","src":"6622:21:26"},"nativeSrc":"6622:21:26","nodeType":"YulExpressionStatement","src":"6622:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6663:9:26","nodeType":"YulIdentifier","src":"6663:9:26"},{"kind":"number","nativeSrc":"6674:2:26","nodeType":"YulLiteral","src":"6674:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6659:3:26","nodeType":"YulIdentifier","src":"6659:3:26"},"nativeSrc":"6659:18:26","nodeType":"YulFunctionCall","src":"6659:18:26"},{"kind":"number","nativeSrc":"6679:2:26","nodeType":"YulLiteral","src":"6679:2:26","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"6652:6:26","nodeType":"YulIdentifier","src":"6652:6:26"},"nativeSrc":"6652:30:26","nodeType":"YulFunctionCall","src":"6652:30:26"},"nativeSrc":"6652:30:26","nodeType":"YulExpressionStatement","src":"6652:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6702:9:26","nodeType":"YulIdentifier","src":"6702:9:26"},{"kind":"number","nativeSrc":"6713:2:26","nodeType":"YulLiteral","src":"6713:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6698:3:26","nodeType":"YulIdentifier","src":"6698:3:26"},"nativeSrc":"6698:18:26","nodeType":"YulFunctionCall","src":"6698:18:26"},{"hexValue":"416d6f756e74206d757374206265203e2030","kind":"string","nativeSrc":"6718:20:26","nodeType":"YulLiteral","src":"6718:20:26","type":"","value":"Amount must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"6691:6:26","nodeType":"YulIdentifier","src":"6691:6:26"},"nativeSrc":"6691:48:26","nodeType":"YulFunctionCall","src":"6691:48:26"},"nativeSrc":"6691:48:26","nodeType":"YulExpressionStatement","src":"6691:48:26"},{"nativeSrc":"6748:26:26","nodeType":"YulAssignment","src":"6748:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6760:9:26","nodeType":"YulIdentifier","src":"6760:9:26"},{"kind":"number","nativeSrc":"6771:2:26","nodeType":"YulLiteral","src":"6771:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6756:3:26","nodeType":"YulIdentifier","src":"6756:3:26"},"nativeSrc":"6756:18:26","nodeType":"YulFunctionCall","src":"6756:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6748:4:26","nodeType":"YulIdentifier","src":"6748:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6438:342:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6589:9:26","nodeType":"YulTypedName","src":"6589:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6603:4:26","nodeType":"YulTypedName","src":"6603:4:26","type":""}],"src":"6438:342:26"},{"body":{"nativeSrc":"6959:170:26","nodeType":"YulBlock","src":"6959:170:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6976:9:26","nodeType":"YulIdentifier","src":"6976:9:26"},{"kind":"number","nativeSrc":"6987:2:26","nodeType":"YulLiteral","src":"6987:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6969:6:26","nodeType":"YulIdentifier","src":"6969:6:26"},"nativeSrc":"6969:21:26","nodeType":"YulFunctionCall","src":"6969:21:26"},"nativeSrc":"6969:21:26","nodeType":"YulExpressionStatement","src":"6969:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7010:9:26","nodeType":"YulIdentifier","src":"7010:9:26"},{"kind":"number","nativeSrc":"7021:2:26","nodeType":"YulLiteral","src":"7021:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7006:3:26","nodeType":"YulIdentifier","src":"7006:3:26"},"nativeSrc":"7006:18:26","nodeType":"YulFunctionCall","src":"7006:18:26"},{"kind":"number","nativeSrc":"7026:2:26","nodeType":"YulLiteral","src":"7026:2:26","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"6999:6:26","nodeType":"YulIdentifier","src":"6999:6:26"},"nativeSrc":"6999:30:26","nodeType":"YulFunctionCall","src":"6999:30:26"},"nativeSrc":"6999:30:26","nodeType":"YulExpressionStatement","src":"6999:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7049:9:26","nodeType":"YulIdentifier","src":"7049:9:26"},{"kind":"number","nativeSrc":"7060:2:26","nodeType":"YulLiteral","src":"7060:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7045:3:26","nodeType":"YulIdentifier","src":"7045:3:26"},"nativeSrc":"7045:18:26","nodeType":"YulFunctionCall","src":"7045:18:26"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"7065:22:26","nodeType":"YulLiteral","src":"7065:22:26","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"7038:6:26","nodeType":"YulIdentifier","src":"7038:6:26"},"nativeSrc":"7038:50:26","nodeType":"YulFunctionCall","src":"7038:50:26"},"nativeSrc":"7038:50:26","nodeType":"YulExpressionStatement","src":"7038:50:26"},{"nativeSrc":"7097:26:26","nodeType":"YulAssignment","src":"7097:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7109:9:26","nodeType":"YulIdentifier","src":"7109:9:26"},{"kind":"number","nativeSrc":"7120:2:26","nodeType":"YulLiteral","src":"7120:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7105:3:26","nodeType":"YulIdentifier","src":"7105:3:26"},"nativeSrc":"7105:18:26","nodeType":"YulFunctionCall","src":"7105:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7097:4:26","nodeType":"YulIdentifier","src":"7097:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6785:344:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6936:9:26","nodeType":"YulTypedName","src":"6936:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6950:4:26","nodeType":"YulTypedName","src":"6950:4:26","type":""}],"src":"6785:344:26"},{"body":{"nativeSrc":"7263:171:26","nodeType":"YulBlock","src":"7263:171:26","statements":[{"nativeSrc":"7273:26:26","nodeType":"YulAssignment","src":"7273:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7285:9:26","nodeType":"YulIdentifier","src":"7285:9:26"},{"kind":"number","nativeSrc":"7296:2:26","nodeType":"YulLiteral","src":"7296:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7281:3:26","nodeType":"YulIdentifier","src":"7281:3:26"},"nativeSrc":"7281:18:26","nodeType":"YulFunctionCall","src":"7281:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7273:4:26","nodeType":"YulIdentifier","src":"7273:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7315:9:26","nodeType":"YulIdentifier","src":"7315:9:26"},{"arguments":[{"name":"value0","nativeSrc":"7330:6:26","nodeType":"YulIdentifier","src":"7330:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7346:3:26","nodeType":"YulLiteral","src":"7346:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7351:1:26","nodeType":"YulLiteral","src":"7351:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7342:3:26","nodeType":"YulIdentifier","src":"7342:3:26"},"nativeSrc":"7342:11:26","nodeType":"YulFunctionCall","src":"7342:11:26"},{"kind":"number","nativeSrc":"7355:1:26","nodeType":"YulLiteral","src":"7355:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7338:3:26","nodeType":"YulIdentifier","src":"7338:3:26"},"nativeSrc":"7338:19:26","nodeType":"YulFunctionCall","src":"7338:19:26"}],"functionName":{"name":"and","nativeSrc":"7326:3:26","nodeType":"YulIdentifier","src":"7326:3:26"},"nativeSrc":"7326:32:26","nodeType":"YulFunctionCall","src":"7326:32:26"}],"functionName":{"name":"mstore","nativeSrc":"7308:6:26","nodeType":"YulIdentifier","src":"7308:6:26"},"nativeSrc":"7308:51:26","nodeType":"YulFunctionCall","src":"7308:51:26"},"nativeSrc":"7308:51:26","nodeType":"YulExpressionStatement","src":"7308:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7379:9:26","nodeType":"YulIdentifier","src":"7379:9:26"},{"kind":"number","nativeSrc":"7390:2:26","nodeType":"YulLiteral","src":"7390:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7375:3:26","nodeType":"YulIdentifier","src":"7375:3:26"},"nativeSrc":"7375:18:26","nodeType":"YulFunctionCall","src":"7375:18:26"},{"arguments":[{"name":"value1","nativeSrc":"7399:6:26","nodeType":"YulIdentifier","src":"7399:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7415:3:26","nodeType":"YulLiteral","src":"7415:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7420:1:26","nodeType":"YulLiteral","src":"7420:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7411:3:26","nodeType":"YulIdentifier","src":"7411:3:26"},"nativeSrc":"7411:11:26","nodeType":"YulFunctionCall","src":"7411:11:26"},{"kind":"number","nativeSrc":"7424:1:26","nodeType":"YulLiteral","src":"7424:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7407:3:26","nodeType":"YulIdentifier","src":"7407:3:26"},"nativeSrc":"7407:19:26","nodeType":"YulFunctionCall","src":"7407:19:26"}],"functionName":{"name":"and","nativeSrc":"7395:3:26","nodeType":"YulIdentifier","src":"7395:3:26"},"nativeSrc":"7395:32:26","nodeType":"YulFunctionCall","src":"7395:32:26"}],"functionName":{"name":"mstore","nativeSrc":"7368:6:26","nodeType":"YulIdentifier","src":"7368:6:26"},"nativeSrc":"7368:60:26","nodeType":"YulFunctionCall","src":"7368:60:26"},"nativeSrc":"7368:60:26","nodeType":"YulExpressionStatement","src":"7368:60:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"7134:300:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7224:9:26","nodeType":"YulTypedName","src":"7224:9:26","type":""},{"name":"value1","nativeSrc":"7235:6:26","nodeType":"YulTypedName","src":"7235:6:26","type":""},{"name":"value0","nativeSrc":"7243:6:26","nodeType":"YulTypedName","src":"7243:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7254:4:26","nodeType":"YulTypedName","src":"7254:4:26","type":""}],"src":"7134:300:26"},{"body":{"nativeSrc":"7613:172:26","nodeType":"YulBlock","src":"7613:172:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7630:9:26","nodeType":"YulIdentifier","src":"7630:9:26"},{"kind":"number","nativeSrc":"7641:2:26","nodeType":"YulLiteral","src":"7641:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7623:6:26","nodeType":"YulIdentifier","src":"7623:6:26"},"nativeSrc":"7623:21:26","nodeType":"YulFunctionCall","src":"7623:21:26"},"nativeSrc":"7623:21:26","nodeType":"YulExpressionStatement","src":"7623:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7664:9:26","nodeType":"YulIdentifier","src":"7664:9:26"},{"kind":"number","nativeSrc":"7675:2:26","nodeType":"YulLiteral","src":"7675:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7660:3:26","nodeType":"YulIdentifier","src":"7660:3:26"},"nativeSrc":"7660:18:26","nodeType":"YulFunctionCall","src":"7660:18:26"},{"kind":"number","nativeSrc":"7680:2:26","nodeType":"YulLiteral","src":"7680:2:26","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"7653:6:26","nodeType":"YulIdentifier","src":"7653:6:26"},"nativeSrc":"7653:30:26","nodeType":"YulFunctionCall","src":"7653:30:26"},"nativeSrc":"7653:30:26","nodeType":"YulExpressionStatement","src":"7653:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7703:9:26","nodeType":"YulIdentifier","src":"7703:9:26"},{"kind":"number","nativeSrc":"7714:2:26","nodeType":"YulLiteral","src":"7714:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7699:3:26","nodeType":"YulIdentifier","src":"7699:3:26"},"nativeSrc":"7699:18:26","nodeType":"YulFunctionCall","src":"7699:18:26"},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","kind":"string","nativeSrc":"7719:24:26","nodeType":"YulLiteral","src":"7719:24:26","type":"","value":"Insufficient allowance"}],"functionName":{"name":"mstore","nativeSrc":"7692:6:26","nodeType":"YulIdentifier","src":"7692:6:26"},"nativeSrc":"7692:52:26","nodeType":"YulFunctionCall","src":"7692:52:26"},"nativeSrc":"7692:52:26","nodeType":"YulExpressionStatement","src":"7692:52:26"},{"nativeSrc":"7753:26:26","nodeType":"YulAssignment","src":"7753:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7765:9:26","nodeType":"YulIdentifier","src":"7765:9:26"},{"kind":"number","nativeSrc":"7776:2:26","nodeType":"YulLiteral","src":"7776:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7761:3:26","nodeType":"YulIdentifier","src":"7761:3:26"},"nativeSrc":"7761:18:26","nodeType":"YulFunctionCall","src":"7761:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7753:4:26","nodeType":"YulIdentifier","src":"7753:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7439:346:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7590:9:26","nodeType":"YulTypedName","src":"7590:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7604:4:26","nodeType":"YulTypedName","src":"7604:4:26","type":""}],"src":"7439:346:26"},{"body":{"nativeSrc":"7898:101:26","nodeType":"YulBlock","src":"7898:101:26","statements":[{"nativeSrc":"7908:26:26","nodeType":"YulAssignment","src":"7908:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7920:9:26","nodeType":"YulIdentifier","src":"7920:9:26"},{"kind":"number","nativeSrc":"7931:2:26","nodeType":"YulLiteral","src":"7931:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7916:3:26","nodeType":"YulIdentifier","src":"7916:3:26"},"nativeSrc":"7916:18:26","nodeType":"YulFunctionCall","src":"7916:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7908:4:26","nodeType":"YulIdentifier","src":"7908:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7950:9:26","nodeType":"YulIdentifier","src":"7950:9:26"},{"arguments":[{"name":"value0","nativeSrc":"7965:6:26","nodeType":"YulIdentifier","src":"7965:6:26"},{"kind":"number","nativeSrc":"7973:18:26","nodeType":"YulLiteral","src":"7973:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"7961:3:26","nodeType":"YulIdentifier","src":"7961:3:26"},"nativeSrc":"7961:31:26","nodeType":"YulFunctionCall","src":"7961:31:26"}],"functionName":{"name":"mstore","nativeSrc":"7943:6:26","nodeType":"YulIdentifier","src":"7943:6:26"},"nativeSrc":"7943:50:26","nodeType":"YulFunctionCall","src":"7943:50:26"},"nativeSrc":"7943:50:26","nodeType":"YulExpressionStatement","src":"7943:50:26"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"7790:209:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7867:9:26","nodeType":"YulTypedName","src":"7867:9:26","type":""},{"name":"value0","nativeSrc":"7878:6:26","nodeType":"YulTypedName","src":"7878:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7889:4:26","nodeType":"YulTypedName","src":"7889:4:26","type":""}],"src":"7790:209:26"},{"body":{"nativeSrc":"8133:145:26","nodeType":"YulBlock","src":"8133:145:26","statements":[{"nativeSrc":"8143:26:26","nodeType":"YulAssignment","src":"8143:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8155:9:26","nodeType":"YulIdentifier","src":"8155:9:26"},{"kind":"number","nativeSrc":"8166:2:26","nodeType":"YulLiteral","src":"8166:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8151:3:26","nodeType":"YulIdentifier","src":"8151:3:26"},"nativeSrc":"8151:18:26","nodeType":"YulFunctionCall","src":"8151:18:26"},"variableNames":[{"name":"tail","nativeSrc":"8143:4:26","nodeType":"YulIdentifier","src":"8143:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8185:9:26","nodeType":"YulIdentifier","src":"8185:9:26"},{"arguments":[{"name":"value0","nativeSrc":"8200:6:26","nodeType":"YulIdentifier","src":"8200:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8216:3:26","nodeType":"YulLiteral","src":"8216:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"8221:1:26","nodeType":"YulLiteral","src":"8221:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8212:3:26","nodeType":"YulIdentifier","src":"8212:3:26"},"nativeSrc":"8212:11:26","nodeType":"YulFunctionCall","src":"8212:11:26"},{"kind":"number","nativeSrc":"8225:1:26","nodeType":"YulLiteral","src":"8225:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8208:3:26","nodeType":"YulIdentifier","src":"8208:3:26"},"nativeSrc":"8208:19:26","nodeType":"YulFunctionCall","src":"8208:19:26"}],"functionName":{"name":"and","nativeSrc":"8196:3:26","nodeType":"YulIdentifier","src":"8196:3:26"},"nativeSrc":"8196:32:26","nodeType":"YulFunctionCall","src":"8196:32:26"}],"functionName":{"name":"mstore","nativeSrc":"8178:6:26","nodeType":"YulIdentifier","src":"8178:6:26"},"nativeSrc":"8178:51:26","nodeType":"YulFunctionCall","src":"8178:51:26"},"nativeSrc":"8178:51:26","nodeType":"YulExpressionStatement","src":"8178:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8249:9:26","nodeType":"YulIdentifier","src":"8249:9:26"},{"kind":"number","nativeSrc":"8260:2:26","nodeType":"YulLiteral","src":"8260:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8245:3:26","nodeType":"YulIdentifier","src":"8245:3:26"},"nativeSrc":"8245:18:26","nodeType":"YulFunctionCall","src":"8245:18:26"},{"name":"value1","nativeSrc":"8265:6:26","nodeType":"YulIdentifier","src":"8265:6:26"}],"functionName":{"name":"mstore","nativeSrc":"8238:6:26","nodeType":"YulIdentifier","src":"8238:6:26"},"nativeSrc":"8238:34:26","nodeType":"YulFunctionCall","src":"8238:34:26"},"nativeSrc":"8238:34:26","nodeType":"YulExpressionStatement","src":"8238:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"8004:274:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8094:9:26","nodeType":"YulTypedName","src":"8094:9:26","type":""},{"name":"value1","nativeSrc":"8105:6:26","nodeType":"YulTypedName","src":"8105:6:26","type":""},{"name":"value0","nativeSrc":"8113:6:26","nodeType":"YulTypedName","src":"8113:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8124:4:26","nodeType":"YulTypedName","src":"8124:4:26","type":""}],"src":"8004:274:26"},{"body":{"nativeSrc":"8420:150:26","nodeType":"YulBlock","src":"8420:150:26","statements":[{"nativeSrc":"8430:27:26","nodeType":"YulVariableDeclaration","src":"8430:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"8450:6:26","nodeType":"YulIdentifier","src":"8450:6:26"}],"functionName":{"name":"mload","nativeSrc":"8444:5:26","nodeType":"YulIdentifier","src":"8444:5:26"},"nativeSrc":"8444:13:26","nodeType":"YulFunctionCall","src":"8444:13:26"},"variables":[{"name":"length","nativeSrc":"8434:6:26","nodeType":"YulTypedName","src":"8434:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"8505:6:26","nodeType":"YulIdentifier","src":"8505:6:26"},{"kind":"number","nativeSrc":"8513:4:26","nodeType":"YulLiteral","src":"8513:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8501:3:26","nodeType":"YulIdentifier","src":"8501:3:26"},"nativeSrc":"8501:17:26","nodeType":"YulFunctionCall","src":"8501:17:26"},{"name":"pos","nativeSrc":"8520:3:26","nodeType":"YulIdentifier","src":"8520:3:26"},{"name":"length","nativeSrc":"8525:6:26","nodeType":"YulIdentifier","src":"8525:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8466:34:26","nodeType":"YulIdentifier","src":"8466:34:26"},"nativeSrc":"8466:66:26","nodeType":"YulFunctionCall","src":"8466:66:26"},"nativeSrc":"8466:66:26","nodeType":"YulExpressionStatement","src":"8466:66:26"},{"nativeSrc":"8541:23:26","nodeType":"YulAssignment","src":"8541:23:26","value":{"arguments":[{"name":"pos","nativeSrc":"8552:3:26","nodeType":"YulIdentifier","src":"8552:3:26"},{"name":"length","nativeSrc":"8557:6:26","nodeType":"YulIdentifier","src":"8557:6:26"}],"functionName":{"name":"add","nativeSrc":"8548:3:26","nodeType":"YulIdentifier","src":"8548:3:26"},"nativeSrc":"8548:16:26","nodeType":"YulFunctionCall","src":"8548:16:26"},"variableNames":[{"name":"end","nativeSrc":"8541:3:26","nodeType":"YulIdentifier","src":"8541:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8283:287:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8396:3:26","nodeType":"YulTypedName","src":"8396:3:26","type":""},{"name":"value0","nativeSrc":"8401:6:26","nodeType":"YulTypedName","src":"8401:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8412:3:26","nodeType":"YulTypedName","src":"8412:3:26","type":""}],"src":"8283:287:26"},{"body":{"nativeSrc":"8749:179:26","nodeType":"YulBlock","src":"8749:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8766:9:26","nodeType":"YulIdentifier","src":"8766:9:26"},{"kind":"number","nativeSrc":"8777:2:26","nodeType":"YulLiteral","src":"8777:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8759:6:26","nodeType":"YulIdentifier","src":"8759:6:26"},"nativeSrc":"8759:21:26","nodeType":"YulFunctionCall","src":"8759:21:26"},"nativeSrc":"8759:21:26","nodeType":"YulExpressionStatement","src":"8759:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8800:9:26","nodeType":"YulIdentifier","src":"8800:9:26"},{"kind":"number","nativeSrc":"8811:2:26","nodeType":"YulLiteral","src":"8811:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8796:3:26","nodeType":"YulIdentifier","src":"8796:3:26"},"nativeSrc":"8796:18:26","nodeType":"YulFunctionCall","src":"8796:18:26"},{"kind":"number","nativeSrc":"8816:2:26","nodeType":"YulLiteral","src":"8816:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"8789:6:26","nodeType":"YulIdentifier","src":"8789:6:26"},"nativeSrc":"8789:30:26","nodeType":"YulFunctionCall","src":"8789:30:26"},"nativeSrc":"8789:30:26","nodeType":"YulExpressionStatement","src":"8789:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8839:9:26","nodeType":"YulIdentifier","src":"8839:9:26"},{"kind":"number","nativeSrc":"8850:2:26","nodeType":"YulLiteral","src":"8850:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8835:3:26","nodeType":"YulIdentifier","src":"8835:3:26"},"nativeSrc":"8835:18:26","nodeType":"YulFunctionCall","src":"8835:18:26"},{"hexValue":"536166655472616e736665723a205452414e534645525f4641494c4544","kind":"string","nativeSrc":"8855:31:26","nodeType":"YulLiteral","src":"8855:31:26","type":"","value":"SafeTransfer: TRANSFER_FAILED"}],"functionName":{"name":"mstore","nativeSrc":"8828:6:26","nodeType":"YulIdentifier","src":"8828:6:26"},"nativeSrc":"8828:59:26","nodeType":"YulFunctionCall","src":"8828:59:26"},"nativeSrc":"8828:59:26","nodeType":"YulExpressionStatement","src":"8828:59:26"},{"nativeSrc":"8896:26:26","nodeType":"YulAssignment","src":"8896:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8908:9:26","nodeType":"YulIdentifier","src":"8908:9:26"},{"kind":"number","nativeSrc":"8919:2:26","nodeType":"YulLiteral","src":"8919:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8904:3:26","nodeType":"YulIdentifier","src":"8904:3:26"},"nativeSrc":"8904:18:26","nodeType":"YulFunctionCall","src":"8904:18:26"},"variableNames":[{"name":"tail","nativeSrc":"8896:4:26","nodeType":"YulIdentifier","src":"8896:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d89a2979883566442be80f0ed877da6c14ac8580d723a60c5d3958b55bf598a8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8575:353:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8726:9:26","nodeType":"YulTypedName","src":"8726:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8740:4:26","nodeType":"YulTypedName","src":"8740:4:26","type":""}],"src":"8575:353:26"},{"body":{"nativeSrc":"9090:214:26","nodeType":"YulBlock","src":"9090:214:26","statements":[{"nativeSrc":"9100:26:26","nodeType":"YulAssignment","src":"9100:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9112:9:26","nodeType":"YulIdentifier","src":"9112:9:26"},{"kind":"number","nativeSrc":"9123:2:26","nodeType":"YulLiteral","src":"9123:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9108:3:26","nodeType":"YulIdentifier","src":"9108:3:26"},"nativeSrc":"9108:18:26","nodeType":"YulFunctionCall","src":"9108:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9100:4:26","nodeType":"YulIdentifier","src":"9100:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9142:9:26","nodeType":"YulIdentifier","src":"9142:9:26"},{"arguments":[{"name":"value0","nativeSrc":"9157:6:26","nodeType":"YulIdentifier","src":"9157:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9173:3:26","nodeType":"YulLiteral","src":"9173:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"9178:1:26","nodeType":"YulLiteral","src":"9178:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9169:3:26","nodeType":"YulIdentifier","src":"9169:3:26"},"nativeSrc":"9169:11:26","nodeType":"YulFunctionCall","src":"9169:11:26"},{"kind":"number","nativeSrc":"9182:1:26","nodeType":"YulLiteral","src":"9182:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9165:3:26","nodeType":"YulIdentifier","src":"9165:3:26"},"nativeSrc":"9165:19:26","nodeType":"YulFunctionCall","src":"9165:19:26"}],"functionName":{"name":"and","nativeSrc":"9153:3:26","nodeType":"YulIdentifier","src":"9153:3:26"},"nativeSrc":"9153:32:26","nodeType":"YulFunctionCall","src":"9153:32:26"}],"functionName":{"name":"mstore","nativeSrc":"9135:6:26","nodeType":"YulIdentifier","src":"9135:6:26"},"nativeSrc":"9135:51:26","nodeType":"YulFunctionCall","src":"9135:51:26"},"nativeSrc":"9135:51:26","nodeType":"YulExpressionStatement","src":"9135:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9206:9:26","nodeType":"YulIdentifier","src":"9206:9:26"},{"kind":"number","nativeSrc":"9217:2:26","nodeType":"YulLiteral","src":"9217:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9202:3:26","nodeType":"YulIdentifier","src":"9202:3:26"},"nativeSrc":"9202:18:26","nodeType":"YulFunctionCall","src":"9202:18:26"},{"arguments":[{"name":"value1","nativeSrc":"9226:6:26","nodeType":"YulIdentifier","src":"9226:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9242:3:26","nodeType":"YulLiteral","src":"9242:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"9247:1:26","nodeType":"YulLiteral","src":"9247:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9238:3:26","nodeType":"YulIdentifier","src":"9238:3:26"},"nativeSrc":"9238:11:26","nodeType":"YulFunctionCall","src":"9238:11:26"},{"kind":"number","nativeSrc":"9251:1:26","nodeType":"YulLiteral","src":"9251:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9234:3:26","nodeType":"YulIdentifier","src":"9234:3:26"},"nativeSrc":"9234:19:26","nodeType":"YulFunctionCall","src":"9234:19:26"}],"functionName":{"name":"and","nativeSrc":"9222:3:26","nodeType":"YulIdentifier","src":"9222:3:26"},"nativeSrc":"9222:32:26","nodeType":"YulFunctionCall","src":"9222:32:26"}],"functionName":{"name":"mstore","nativeSrc":"9195:6:26","nodeType":"YulIdentifier","src":"9195:6:26"},"nativeSrc":"9195:60:26","nodeType":"YulFunctionCall","src":"9195:60:26"},"nativeSrc":"9195:60:26","nodeType":"YulExpressionStatement","src":"9195:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9275:9:26","nodeType":"YulIdentifier","src":"9275:9:26"},{"kind":"number","nativeSrc":"9286:2:26","nodeType":"YulLiteral","src":"9286:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9271:3:26","nodeType":"YulIdentifier","src":"9271:3:26"},"nativeSrc":"9271:18:26","nodeType":"YulFunctionCall","src":"9271:18:26"},{"name":"value2","nativeSrc":"9291:6:26","nodeType":"YulIdentifier","src":"9291:6:26"}],"functionName":{"name":"mstore","nativeSrc":"9264:6:26","nodeType":"YulIdentifier","src":"9264:6:26"},"nativeSrc":"9264:34:26","nodeType":"YulFunctionCall","src":"9264:34:26"},"nativeSrc":"9264:34:26","nodeType":"YulExpressionStatement","src":"9264:34:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"8933:371:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9043:9:26","nodeType":"YulTypedName","src":"9043:9:26","type":""},{"name":"value2","nativeSrc":"9054:6:26","nodeType":"YulTypedName","src":"9054:6:26","type":""},{"name":"value1","nativeSrc":"9062:6:26","nodeType":"YulTypedName","src":"9062:6:26","type":""},{"name":"value0","nativeSrc":"9070:6:26","nodeType":"YulTypedName","src":"9070:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9081:4:26","nodeType":"YulTypedName","src":"9081:4:26","type":""}],"src":"8933:371:26"},{"body":{"nativeSrc":"9483:223:26","nodeType":"YulBlock","src":"9483:223:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9500:9:26","nodeType":"YulIdentifier","src":"9500:9:26"},{"kind":"number","nativeSrc":"9511:2:26","nodeType":"YulLiteral","src":"9511:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9493:6:26","nodeType":"YulIdentifier","src":"9493:6:26"},"nativeSrc":"9493:21:26","nodeType":"YulFunctionCall","src":"9493:21:26"},"nativeSrc":"9493:21:26","nodeType":"YulExpressionStatement","src":"9493:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9534:9:26","nodeType":"YulIdentifier","src":"9534:9:26"},{"kind":"number","nativeSrc":"9545:2:26","nodeType":"YulLiteral","src":"9545:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9530:3:26","nodeType":"YulIdentifier","src":"9530:3:26"},"nativeSrc":"9530:18:26","nodeType":"YulFunctionCall","src":"9530:18:26"},{"kind":"number","nativeSrc":"9550:2:26","nodeType":"YulLiteral","src":"9550:2:26","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"9523:6:26","nodeType":"YulIdentifier","src":"9523:6:26"},"nativeSrc":"9523:30:26","nodeType":"YulFunctionCall","src":"9523:30:26"},"nativeSrc":"9523:30:26","nodeType":"YulExpressionStatement","src":"9523:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9573:9:26","nodeType":"YulIdentifier","src":"9573:9:26"},{"kind":"number","nativeSrc":"9584:2:26","nodeType":"YulLiteral","src":"9584:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9569:3:26","nodeType":"YulIdentifier","src":"9569:3:26"},"nativeSrc":"9569:18:26","nodeType":"YulFunctionCall","src":"9569:18:26"},{"hexValue":"536166655472616e7366657246726f6d3a205452414e534645525f4641494c45","kind":"string","nativeSrc":"9589:34:26","nodeType":"YulLiteral","src":"9589:34:26","type":"","value":"SafeTransferFrom: TRANSFER_FAILE"}],"functionName":{"name":"mstore","nativeSrc":"9562:6:26","nodeType":"YulIdentifier","src":"9562:6:26"},"nativeSrc":"9562:62:26","nodeType":"YulFunctionCall","src":"9562:62:26"},"nativeSrc":"9562:62:26","nodeType":"YulExpressionStatement","src":"9562:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9644:9:26","nodeType":"YulIdentifier","src":"9644:9:26"},{"kind":"number","nativeSrc":"9655:2:26","nodeType":"YulLiteral","src":"9655:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9640:3:26","nodeType":"YulIdentifier","src":"9640:3:26"},"nativeSrc":"9640:18:26","nodeType":"YulFunctionCall","src":"9640:18:26"},{"hexValue":"44","kind":"string","nativeSrc":"9660:3:26","nodeType":"YulLiteral","src":"9660:3:26","type":"","value":"D"}],"functionName":{"name":"mstore","nativeSrc":"9633:6:26","nodeType":"YulIdentifier","src":"9633:6:26"},"nativeSrc":"9633:31:26","nodeType":"YulFunctionCall","src":"9633:31:26"},"nativeSrc":"9633:31:26","nodeType":"YulExpressionStatement","src":"9633:31:26"},{"nativeSrc":"9673:27:26","nodeType":"YulAssignment","src":"9673:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9685:9:26","nodeType":"YulIdentifier","src":"9685:9:26"},{"kind":"number","nativeSrc":"9696:3:26","nodeType":"YulLiteral","src":"9696:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9681:3:26","nodeType":"YulIdentifier","src":"9681:3:26"},"nativeSrc":"9681:19:26","nodeType":"YulFunctionCall","src":"9681:19:26"},"variableNames":[{"name":"tail","nativeSrc":"9673:4:26","nodeType":"YulIdentifier","src":"9673:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_02976719d8645cd6cf8c6ef1ffe433708562981f118190e2ded774c1462eed8c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9309:397:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9460:9:26","nodeType":"YulTypedName","src":"9460:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9474:4:26","nodeType":"YulTypedName","src":"9474:4:26","type":""}],"src":"9309:397:26"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ICustomNFT_$7810__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IWhitelist_$7823__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        let value := 0\n        value := calldataload(add(headStart, 128))\n        value4 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2506__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Quota must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        returndatacopy(data, 4, add(returndatasize(), not(3)))\n        let offset := mload(data)\n        if or(gt(offset, 0xffffffffffffffff), gt(add(offset, 0x24), returndatasize())) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), not(3))) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"NFT mint failed: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 17), length)\n        end := add(add(pos, length), 17)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_d89a2979883566442be80f0ed877da6c14ac8580d723a60c5d3958b55bf598a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"SafeTransfer: TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_02976719d8645cd6cf8c6ef1ffe433708562981f118190e2ded774c1462eed8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeTransferFrom: TRANSFER_FAILE\")\n        mstore(add(headStart, 96), \"D\")\n        tail := add(headStart, 128)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806393e59dc11161008c578063cebe09c911610066578063cebe09c9146101c5578063f2fde38b146101dc578063f7013ef6146101ef578063fc0c546a1461020257600080fd5b806393e59dc11461016c578063b6b55f251461017f578063c884ef831461019257600080fd5b806341107b64146100d457806347ccca02146100e95780634e71d92d146101195780635312ea8e14610121578063715018a6146101345780638da5cb5b1461013c575b600080fd5b6100e76100e2366004610ce9565b610215565b005b6001546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e76102ab565b6100e761012f366004610ce9565b6104f4565b6100e7610612565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166100fc565b6002546100fc906001600160a01b031681565b6100e761018d366004610ce9565b610626565b6101b56101a0366004610d1e565b60046020526000908152604090205460ff1681565b6040519015158152602001610110565b6101ce60035481565b604051908152602001610110565b6100e76101ea366004610d1e565b610782565b6100e76101fd366004610d40565b6107c0565b6000546100fc906001600160a01b031681565b61021d610916565b600081116102665760405162461bcd60e51b8152602060048201526011602482015270051756f7461206d757374206265203e203607c1b60448201526064015b60405180910390fd5b600380549082905560408051828152602081018490527f19d6318afb32eea58ef4a200d5730cc282d7e0bd791a8ced865532f1ac4b9b0f910160405180910390a15050565b3360009081526004602052604090205460ff16156102fd5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b604482015260640161025d565b600254604051633af32abf60e01b81523360048201526001600160a01b0390911690633af32abf90602401602060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610d9c565b6103a75760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161025d565b6001546040516335313c2160e11b81523360048201526000916001600160a01b031690636a627842906024016020604051808303816000875af192505050801561040e575060408051601f3d908101601f1916820190925261040b91810190610dbe565b60015b61047c5761041a610dd7565b806308c379a003610470575061042e610e2e565b806104395750610472565b8060405160200161044a9190610ed7565b60408051601f198184030181529082905262461bcd60e51b825261025d91600401610f10565b505b3d6000803e3d6000fd5b9050336000818152600460205260408120805460ff19166001179055546003546104b3926001600160a01b03929092169190610971565b600354604080519182526020820183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a250565b6104fc610916565b600081116105415760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161025d565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190610dbe565b9050818110156105f75760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161025d565b60005461060e906001600160a01b03163384610971565b5050565b61061a610916565b6106246000610abc565b565b61062e610916565b600081116106735760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161025d565b60008054604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610dbe565b9050818110156107315760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015260640161025d565b600054610749906001600160a01b0316333085610b2d565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25050565b61078a610916565b6001600160a01b0381166107b457604051631e4fbdf760e01b81526000600482015260240161025d565b6107bd81610abc565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156108065750825b905060008267ffffffffffffffff1660011480156108235750303b155b905081158015610831575080155b1561084f5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561087957845460ff60401b1916600160401b1785555b6108828a610c87565b600080546001600160a01b03808c166001600160a01b031992831617909255600180548b841690831617905560028054928a16929091169190911790556003869055831561090a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b336109487f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146106245760405163118cdaa760e01b815233600482015260240161025d565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916109fd9190610f43565b6000604051808303816000865af19150503d8060008114610a3a576040519150601f19603f3d011682016040523d82523d6000602084013e610a3f565b606091505b5091509150818015610a69575080511580610a69575080806020019051810190610a699190610d9c565b610ab55760405162461bcd60e51b815260206004820152601d60248201527f536166655472616e736665723a205452414e534645525f4641494c4544000000604482015260640161025d565b5050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080856001600160a01b0316604051806060016040528060258152602001610f606025913980516020909101206040516001600160a01b038089166024830152871660448201526064810186905260840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610bbd9190610f43565b6000604051808303816000865af19150503d8060008114610bfa576040519150601f19603f3d011682016040523d82523d6000602084013e610bff565b606091505b5091509150818015610c29575080511580610c29575080806020019051810190610c299190610d9c565b610c7f5760405162461bcd60e51b815260206004820152602160248201527f536166655472616e7366657246726f6d3a205452414e534645525f4641494c456044820152601160fa1b606482015260840161025d565b505050505050565b610c8f610c98565b6107bd81610ce1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661062457604051631afcd79f60e31b815260040160405180910390fd5b61078a610c98565b600060208284031215610cfb57600080fd5b5035919050565b80356001600160a01b0381168114610d1957600080fd5b919050565b600060208284031215610d3057600080fd5b610d3982610d02565b9392505050565b600080600080600060a08688031215610d5857600080fd5b610d6186610d02565b9450610d6f60208701610d02565b9350610d7d60408701610d02565b9250610d8b60608701610d02565b949793965091946080013592915050565b600060208284031215610dae57600080fd5b81518015158114610d3957600080fd5b600060208284031215610dd057600080fd5b5051919050565b600060033d1115610df05760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610e2757634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610e3c5790565b6040513d600319016004823e80513d602482011167ffffffffffffffff82111715610e6657505090565b808201805167ffffffffffffffff811115610e82575050505090565b3d8401600319018282016020011115610e9c575050505090565b610eab60208285010185610df3565b509392505050565b60005b83811015610ece578181015183820152602001610eb6565b50506000910152565b70027232a1036b4b73a103330b4b632b21d1607d1b815260008251610f03816011850160208701610eb3565b9190910160110192915050565b6020815260008251806020840152610f2f816040850160208701610eb3565b601f01601f19169190910160400192915050565b60008251610f55818460208701610eb3565b919091019291505056fe7472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629a164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93E59DC1 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCEBE09C9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCEBE09C9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF7013EF6 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93E59DC1 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41107B64 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x612 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x1CE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x51756F7461206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x19D6318AFB32EEA58EF4A200D5730CC282D7E0BD791A8CED865532F1AC4B9B0F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3AF32ABF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3AF32ABF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6A627842 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x40E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x40B SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x47C JUMPI PUSH2 0x41A PUSH2 0xDD7 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x470 JUMPI POP PUSH2 0x42E PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH2 0x439 JUMPI POP PUSH2 0x472 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x25D SWAP2 PUSH1 0x4 ADD PUSH2 0xF10 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD PUSH1 0x3 SLOAD PUSH2 0x4B3 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x60E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x971 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x61A PUSH2 0x916 JUMP JUMPDEST PUSH2 0x624 PUSH1 0x0 PUSH2 0xABC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x62E PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x749 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x78A PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xABC JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x823 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x879 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x882 DUP11 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x90A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x948 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP8 AND SWAP2 PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xA69 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xA69 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA69 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E736665723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF60 PUSH1 0x25 SWAP2 CODECOPY DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x24 DUP4 ADD MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xC29 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E7366657246726F6D3A205452414E534645525F4641494C45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xCE1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD39 DUP3 PUSH2 0xD02 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP7 PUSH2 0xD02 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6F PUSH1 0x20 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7D PUSH1 0x40 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8B PUSH1 0x60 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0xE3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE66 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE82 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP3 DUP3 ADD PUSH1 0x20 ADD GT ISZERO PUSH2 0xE9C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xEAB PUSH1 0x20 DUP3 DUP6 ADD ADD DUP6 PUSH2 0xDF3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH17 0x27232A1036B4B73A103330B4B632B21D1 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0xF03 DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x11 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF2F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF55 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH21 0x72616E7366657246726F6D28616464726573732C61 PUSH5 0x6472657373 0x2C PUSH22 0x696E7432353629A164736F6C634300081C000A000000 ","sourceMap":"425:3254:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:214;;;;;;:::i;:::-;;:::i;:::-;;493:21;;;;;-1:-1:-1;;;;;493:21:21;;;;;;-1:-1:-1;;;;;428:32:26;;;410:51;;398:2;383:18;493:21:21;;;;;;;;1815:550;;;:::i;2591:291::-;;;;;;:::i;:::-;;:::i;3155:101:0:-;;;:::i;2441:144::-;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;520:27:21;;;;;-1:-1:-1;;;;;520:27:21;;;1438:371;;;;;;:::i;:::-;;:::i;580:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1441:14:26;;1434:22;1416:41;;1404:2;1389:18;580:39:21;1276:187:26;553:20:21;;;;;;;;;1614:25:26;;;1602:2;1587:18;553:20:21;1468:177:26;3405:215:0;;;;;;:::i;:::-;;:::i;1052:380:21:-;;;;;;:::i;:::-;;:::i;468:19::-;;;;;-1:-1:-1;;;;;468:19:21;;;2371:214;2334:13:0;:11;:13::i;:::-;2458:1:21::1;2447:8;:12;2439:42;;;::::0;-1:-1:-1;;;2439:42:21;;2604:2:26;2439:42:21::1;::::0;::::1;2586:21:26::0;2643:2;2623:18;;;2616:30;-1:-1:-1;;;2662:18:26;;;2655:47;2719:18;;2439:42:21::1;;;;;;;;;2505:5;::::0;;2520:16;;;;2551:27:::1;::::0;;2922:25:26;;;2978:2;2963:18;;2956:34;;;2551:27:21::1;::::0;2895:18:26;2551:27:21::1;;;;;;;2429:156;2371:214:::0;:::o;1815:550::-;1868:10;1860:19;;;;:7;:19;;;;;;;;1859:20;1851:48;;;;-1:-1:-1;;;1851:48:21;;3203:2:26;1851:48:21;;;3185:21:26;3242:2;3222:18;;;3215:30;-1:-1:-1;;;3261:18:26;;;3254:45;3316:18;;1851:48:21;3001:339:26;1851:48:21;1917:9;;:35;;-1:-1:-1;;;1917:35:21;;1941:10;1917:35;;;410:51:26;-1:-1:-1;;;;;1917:9:21;;;;:23;;383:18:26;;1917:35:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:63;;;;-1:-1:-1;;;1909:63:21;;3829:2:26;1909:63:21;;;3811:21:26;3868:2;3848:18;;;3841:30;-1:-1:-1;;;3887:18:26;;;3880:45;3942:18;;1909:63:21;3627:339:26;1909:63:21;2012:3;;:20;;-1:-1:-1;;;2012:20:21;;2021:10;2012:20;;;410:51:26;1983:15:21;;-1:-1:-1;;;;;2012:3:21;;:8;;383:18:26;;2012:20:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;2012:20:21;;;;;;;;-1:-1:-1;;2012:20:21;;;;;;;;;;;;:::i;:::-;;;2008:204;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2192:6;2154:45;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2154:45:21;;;;;;;;;;-1:-1:-1;;;2140:61:21;;;;;;;:::i;2008:204::-;;;;;;;;;;;2078:2;-1:-1:-1;2230:10:21;2222:19;;;;:7;:19;;;;;:26;;-1:-1:-1;;2222:26:21;2244:4;2222:26;;;2281:5;2301;;2259:48;;-1:-1:-1;;;;;2281:5:21;;;;;2230:10;2259:13;:48::i;:::-;2343:5;;2323:35;;;2922:25:26;;;2978:2;2963:18;;2956:34;;;2331:10:21;;2323:35;;2895:18:26;2323:35:21;;;;;;;1841:524;1815:550::o;2591:291::-;2334:13:0;:11;:13::i;:::-;2680:1:21::1;2671:6;:10;2663:41;;;::::0;-1:-1:-1;;;2663:41:21;;6640:2:26;2663:41:21::1;::::0;::::1;6622:21:26::0;6679:2;6659:18;;;6652:30;-1:-1:-1;;;6698:18:26;;;6691:48;6756:18;;2663:41:21::1;6438:342:26::0;2663:41:21::1;2715:11;2729:5:::0;;:30:::1;::::0;-1:-1:-1;;;2729:30:21;;2753:4:::1;2729:30;::::0;::::1;410:51:26::0;-1:-1:-1;;;;;2729:5:21;;::::1;::::0;:15:::1;::::0;383:18:26;;2729:30:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2715:44;;2784:6;2777:3;:13;;2769:46;;;::::0;-1:-1:-1;;;2769:46:21;;6987:2:26;2769:46:21::1;::::0;::::1;6969:21:26::0;7026:2;7006:18;;;6999:30;-1:-1:-1;;;7045:18:26;;;7038:50;7105:18;;2769:46:21::1;6785:344:26::0;2769:46:21::1;2848:5;::::0;2826:49:::1;::::0;-1:-1:-1;;;;;2848:5:21::1;2856:10;2868:6:::0;2826:13:::1;:49::i;:::-;2653:229;2591:291:::0;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1438:371:21:-;2334:13:0;:11;:13::i;:::-;1517:1:21::1;1508:6;:10;1500:41;;;::::0;-1:-1:-1;;;1500:41:21;;6640:2:26;1500:41:21::1;::::0;::::1;6622:21:26::0;6679:2;6659:18;;;6652:30;-1:-1:-1;;;6698:18:26;;;6691:48;6756:18;;1500:41:21::1;6438:342:26::0;1500:41:21::1;1552:17;1572:5:::0;;:42:::1;::::0;-1:-1:-1;;;1572:42:21;;1588:10:::1;1572:42;::::0;::::1;7308:51:26::0;1608:4:21::1;7375:18:26::0;;;7368:60;-1:-1:-1;;;;;1572:5:21;;::::1;::::0;:15:::1;::::0;7281:18:26;;1572:42:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1552:62;;1645:6;1632:9;:19;;1624:54;;;::::0;-1:-1:-1;;;1624:54:21;;7641:2:26;1624:54:21::1;::::0;::::1;7623:21:26::0;7680:2;7660:18;;;7653:30;-1:-1:-1;;;7699:18:26;;;7692:52;7761:18;;1624:54:21::1;7439:346:26::0;1624:54:21::1;1715:5;::::0;1689:68:::1;::::0;-1:-1:-1;;;;;1715:5:21::1;1723:10;1743:4;1750:6:::0;1689:17:::1;:68::i;:::-;1773:29;::::0;1614:25:26;;;1783:10:21::1;::::0;1773:29:::1;::::0;1602:2:26;1587:18;1773:29:21::1;;;;;;;1490:319;1438:371:::0;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;410:51:26::0;383:18;;3534:31:0::1;245:222:26::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1052:380:21:-;3147:66:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1250:28:21::1;1265:12;1250:14;:28::i;:::-;1288:5;:28:::0;;-1:-1:-1;;;;;1288:28:21;;::::1;-1:-1:-1::0;;;;;;1288:28:21;;::::1;;::::0;;;;1326;;;;::::1;::::0;;::::1;;::::0;;1364:9:::1;:37:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1411:5:::1;:14:::0;;;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;7943:50:26;;5140:14:1;;7931:2:26;7916:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;1052:380:21;;;;;:::o;2658:162:0:-;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;410:51:26;383:18;;2763:40:0;245:222:26;2938:323:21;889:34;;;;;;;;;;;;;;;;;3083:52;;-1:-1:-1;;;;;8196:32:26;;;3083:52:21;;;8178:51:26;8245:18;;;;8238:34;;;3083:52:21;;;;;;;;;;8151:18:26;;;;3083:52:21;;;;;;;-1:-1:-1;;;;;3083:52:21;-1:-1:-1;;;3083:52:21;;;3058:87;;-1:-1:-1;;;;3058:11:21;;;:87;;3083:52;3058:87;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3022:123;;;;3163:7;:57;;;;-1:-1:-1;3175:11:21;;:16;;:44;;;3206:4;3195:24;;;;;;;;;;;;:::i;:::-;3155:99;;;;-1:-1:-1;;;3155:99:21;;8777:2:26;3155:99:21;;;8759:21:26;8816:2;8796:18;;;8789:30;8855:31;8835:18;;;8828:59;8904:18;;3155:99:21;8575:353:26;3155:99:21;3012:249;;2938:323;;;:::o;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;3321:356:21:-;3424:12;3438:17;3459:6;-1:-1:-1;;;;;3459:11:21;997:46;;;;;;;;;;;;;;;;;987:57;;;;;;;3484:63;;-1:-1:-1;;;;;9153:32:26;;;3484:63:21;;;9135:51:26;9222:32;;9202:18;;;9195:60;9271:18;;;9264:34;;;9108:18;;3484:63:21;;;-1:-1:-1;;3484:63:21;;;;;;;;;;;;;;-1:-1:-1;;;;;3484:63:21;-1:-1:-1;;;;;;3484:63:21;;;;;;;;;;3459:98;;;;3484:63;3459:98;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3423:134;;;;3575:7;:57;;;;-1:-1:-1;3587:11:21;;:16;;:44;;;3618:4;3607:24;;;;;;;;;;;;:::i;:::-;3567:103;;;;-1:-1:-1;;;3567:103:21;;9511:2:26;3567:103:21;;;9493:21:26;9550:2;9530:18;;;9523:30;9589:34;9569:18;;;9562:62;-1:-1:-1;;;9640:18:26;;;9633:31;9681:19;;3567:103:21;9309:397:26;3567:103:21;3413:264;;3321:356;;;;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;7082:141:1:-:0;3147:66;8558:40;-1:-1:-1;;;8558:40:1;;;;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;1980:235:0;6929:20:1;:18;:20::i;14:226:26:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:26;;14:226;-1:-1:-1;14:226:26:o;907:173::-;975:20;;-1:-1:-1;;;;;1024:31:26;;1014:42;;1004:70;;1070:1;1067;1060:12;1004:70;907:173;;;:::o;1085:186::-;1144:6;1197:2;1185:9;1176:7;1172:23;1168:32;1165:52;;;1213:1;1210;1203:12;1165:52;1236:29;1255:9;1236:29;:::i;:::-;1226:39;1085:186;-1:-1:-1;;;1085:186:26:o;1650:524::-;1745:6;1753;1761;1769;1777;1830:3;1818:9;1809:7;1805:23;1801:33;1798:53;;;1847:1;1844;1837:12;1798:53;1870:29;1889:9;1870:29;:::i;:::-;1860:39;;1918:38;1952:2;1941:9;1937:18;1918:38;:::i;:::-;1908:48;;1975:38;2009:2;1998:9;1994:18;1975:38;:::i;:::-;1965:48;;2032:38;2066:2;2055:9;2051:18;2032:38;:::i;:::-;1650:524;;;;-1:-1:-1;1650:524:26;;2139:3;2124:19;2111:33;;1650:524;-1:-1:-1;;1650:524:26:o;3345:277::-;3412:6;3465:2;3453:9;3444:7;3440:23;3436:32;3433:52;;;3481:1;3478;3471:12;3433:52;3513:9;3507:16;3566:5;3559:13;3552:21;3545:5;3542:32;3532:60;;3588:1;3585;3578:12;3971:184;4041:6;4094:2;4082:9;4073:7;4069:23;4065:32;4062:52;;;4110:1;4107;4100:12;4062:52;-1:-1:-1;4133:16:26;;3971:184;-1:-1:-1;3971:184:26:o;4160:179::-;4195:3;4237:1;4219:16;4216:23;4213:120;;;4283:1;4280;4277;4262:23;-1:-1:-1;4320:1:26;4314:8;4309:3;4305:18;4213:120;4160:179;:::o;4344:346::-;4454:2;4435:13;;-1:-1:-1;;4431:27:26;4419:40;;4489:18;4474:34;;4510:22;;;4471:62;4468:185;;;4575:10;4570:3;4566:20;4563:1;4556:31;4610:4;4607:1;4600:15;4638:4;4635:1;4628:15;4468:185;4669:2;4662:22;-1:-1:-1;;4344:346:26:o;4695:628::-;4734:3;4776:4;4758:16;4755:26;4752:39;;;4695:628;:::o;4752:39::-;4818:2;4812:9;4858:16;-1:-1:-1;;4854:29:26;4851:1;4812:9;4830:54;4913:4;4907:11;4987:16;4980:4;4972:6;4968:17;4965:39;4944:18;4936:6;4933:30;4930:75;4927:88;;;5008:5;;4695:628;:::o;4927:88::-;5045:6;5039:4;5035:17;5081:3;5075:10;5108:18;5100:6;5097:30;5094:43;;;5130:5;;;;4695:628;:::o;5094:43::-;5195:16;5185:27;;-1:-1:-1;;5181:40:26;5156:16;;;5174:4;5152:27;5149:73;5146:86;;;5225:5;;;;4695:628;:::o;5146:86::-;5241:57;5292:4;5283:6;5275;5271:19;5267:30;5261:4;5241:57;:::i;:::-;-1:-1:-1;5314:3:26;4695:628;-1:-1:-1;;;4695:628:26:o;5328:250::-;5413:1;5423:113;5437:6;5434:1;5431:13;5423:113;;;5513:11;;;5507:18;5494:11;;;5487:39;5459:2;5452:10;5423:113;;;-1:-1:-1;;5570:1:26;5552:16;;5545:27;5328:250::o;5583:449::-;-1:-1:-1;;;5840:3:26;5833:32;5815:3;5894:6;5888:13;5910:75;5978:6;5973:2;5968:3;5964:12;5957:4;5949:6;5945:17;5910:75;:::i;:::-;6005:16;;;;6023:2;6001:25;;5583:449;-1:-1:-1;;5583:449:26:o;6037:396::-;6186:2;6175:9;6168:21;6149:4;6218:6;6212:13;6261:6;6256:2;6245:9;6241:18;6234:34;6277:79;6349:6;6344:2;6333:9;6329:18;6324:2;6316:6;6312:15;6277:79;:::i;:::-;6417:2;6396:15;-1:-1:-1;;6392:29:26;6377:45;;;;6424:2;6373:54;;6037:396;-1:-1:-1;;6037:396:26:o;8283:287::-;8412:3;8450:6;8444:13;8466:66;8525:6;8520:3;8513:4;8505:6;8501:17;8466:66;:::i;:::-;8548:16;;;;;8283:287;-1:-1:-1;;8283:287:26:o"},"methodIdentifiers":{"claim()":"4e71d92d","claimed(address)":"c884ef83","deposit(uint256)":"b6b55f25","emergencyWithdraw(uint256)":"5312ea8e","initialize(address,address,address,address,uint256)":"f7013ef6","nft()":"47ccca02","owner()":"8da5cb5b","quota()":"cebe09c9","renounceOwnership()":"715018a6","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","updateQuota(uint256)":"41107b64","whitelist()":"93e59dc1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuota\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuota\",\"type\":\"uint256\"}],\"name\":\"QuotaUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"whitelistAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quota_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract ICustomNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quota\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuota\",\"type\":\"uint256\"}],\"name\":\"updateQuota\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"contract IWhitelist\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Claim.sol\":\"Claim\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/Claim.sol\":{\"keccak256\":\"0xd10e56725798f33cc3fdd058db665662cec9878b2feb18cada37ba2091d8193e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1547017f8e27b48202ababd36699fd51d6ba998f3a5445ae0b7d9c0948875916\",\"dweb:/ipfs/QmZWNchYMT5H8KVUbkvMmNLT5nTUAK6EZ5XGnj2Ee9p6U6\"]}},\"version\":1}"},"ICustomNFT":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"mint(address)":"6a627842"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Claim.sol\":\"ICustomNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/Claim.sol\":{\"keccak256\":\"0xd10e56725798f33cc3fdd058db665662cec9878b2feb18cada37ba2091d8193e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1547017f8e27b48202ababd36699fd51d6ba998f3a5445ae0b7d9c0948875916\",\"dweb:/ipfs/QmZWNchYMT5H8KVUbkvMmNLT5nTUAK6EZ5XGnj2Ee9p6U6\"]}},\"version\":1}"},"IWhitelist":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addToWhitelist(address)":"e43252d7","isWhitelisted(address)":"3af32abf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Claim.sol\":\"IWhitelist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/Claim.sol\":{\"keccak256\":\"0xd10e56725798f33cc3fdd058db665662cec9878b2feb18cada37ba2091d8193e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1547017f8e27b48202ababd36699fd51d6ba998f3a5445ae0b7d9c0948875916\",\"dweb:/ipfs/QmZWNchYMT5H8KVUbkvMmNLT5nTUAK6EZ5XGnj2Ee9p6U6\"]}},\"version\":1}"}},"contracts/CustomNFT.sol":{"CustomNFT":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"string","name":"baseURI_","type":"string"},{"internalType":"address","name":"claimContract_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_claimContract","type":"address"}],"name":"setClaimContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b506116638061001f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a257806395d89b411161007157806395d89b4114610233578063a22cb4651461023b578063b88d4fde1461024e578063c87b56dd14610261578063e985e9c51461027457600080fd5b80636352211e146101d957806366345da4146101ec5780636a627842146101ff57806370a082311461022057600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780634a30d3eb146101b35780635c6d8da1146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046110d4565b610287565b60405190151581526020015b60405180910390f35b6101406102d9565b60405161012f9190611141565b61016061015b366004611154565b61037d565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611184565b610392565b005b61018b61019b3660046111ae565b6103a1565b61018b6101ae3660046111ae565b610431565b61018b6101c13660046111eb565b610451565b61018b6101d43660046112b6565b6104cc565b6101606101e7366004611154565b6105f7565b600154610160906001600160a01b031681565b61021261020d3660046111eb565b610602565b60405190815260200161012f565b61021261022e3660046111eb565b610688565b6101406106e4565b61018b61024936600461135b565b610723565b61018b61025c366004611397565b61072e565b61014061026f366004611154565b610746565b610123610282366004611413565b6107ae565b60006001600160e01b031982166380ac58cd60e01b14806102b857506001600160e01b03198216635b5e139f60e01b145b806102d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008051602061163783398151915280546060919081906102f990611446565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611446565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505091505090565b6000610388826107fb565b506102d382610833565b61039d82823361086d565b5050565b6001600160a01b0382166103d057604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103dd83833361087a565b9050836001600160a01b0316816001600160a01b03161461042b576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103c7565b50505050565b61044c8383836040518060200160405280600081525061072e565b505050565b6001546001600160a01b0316156104aa5760405162461bcd60e51b815260206004820152601a60248201527f436c61696d20636f6e747261637420616c72656164792073657400000000000060448201526064016103c7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d6610984565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156104fe5750825b905060008267ffffffffffffffff16600114801561051b5750303b155b905081158015610529575080155b156105475760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561057157845460ff60401b1916600160401b1785555b61057b89896109ad565b600061058788826114c7565b50600180546001600160a01b0319166001600160a01b03881617815560025583156105ec57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006102d3826107fb565b6001546000906001600160a01b0316331461065f5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f7420636c61696d20636f6e74726163740000000060448201526064016103c7565b60028054908190600061067183611586565b919050555061068083826109bf565b90505b919050565b60006000805160206116378339815191526001600160a01b0383166106c3576040516322718ad960e21b8152600060048201526024016103c7565b6001600160a01b039092166000908152600390920160205250604090205490565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793018054606091600080516020611637833981519152916102f990611446565b61039d3383836109d9565b6107398484846103a1565b61042b3385858585610a8a565b6060610751826107fb565b50600061075c610bb5565b9050600081511161077c57604051806020016040528060008152506107a7565b8061078684610c47565b6040516020016107979291906115ad565b6040516020818303038152906040525b9392505050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b60008061080783610cda565b90506001600160a01b03811661068057604051637e27328960e01b8152600481018490526024016103c7565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61044c8383836001610d14565b60006000805160206116378339815191528161089585610cda565b90506001600160a01b038416156108b1576108b1818587610e2a565b6001600160a01b038116156108f1576108ce600086600080610d14565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b03861615610922576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006102d3565b6109b5610e8e565b61039d8282610eb5565b61039d828260405180602001604052806000815250610ee6565b6000805160206116378339815191526001600160a01b038316610a1a57604051630b61174360e31b81526001600160a01b03841660048201526024016103c7565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610bae57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610acc9088908890879087906004016115dc565b6020604051808303816000875af1925050508015610b07575060408051601f3d908101601f19168201909252610b0491810190611619565b60015b610b70573d808015610b35576040519150601f19603f3d011682016040523d82523d6000602084013e610b3a565b606091505b508051600003610b6857604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bac57604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b505b5050505050565b606060008054610bc490611446565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf090611446565b8015610c3d5780601f10610c1257610100808354040283529160200191610c3d565b820191906000526020600020905b815481529060010190602001808311610c2057829003601f168201915b5050505050905090565b60606000610c5483610efe565b600101905060008167ffffffffffffffff811115610c7457610c74611206565b6040519080825280601f01601f191660200182016040528015610c9e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ca857509392505050565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b6000805160206116378339815191528180610d3757506001600160a01b03831615155b15610df9576000610d47856107fb565b90506001600160a01b03841615801590610d735750836001600160a01b0316816001600160a01b031614155b8015610d865750610d8481856107ae565b155b15610daf5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016103c7565b8215610df75784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e35838383610fd6565b61044c576001600160a01b038316610e6357604051637e27328960e01b8152600481018290526024016103c7565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103c7565b610e9661103c565b610eb357604051631afcd79f60e31b815260040160405180910390fd5b565b610ebd610e8e565b60008051602061163783398151915280610ed784826114c7565b506001810161042b83826114c7565b610ef08383611056565b61044c336000858585610a8a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f3d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f69576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8757662386f26fc10000830492506010015b6305f5e1008310610f9f576305f5e100830492506008015b6127108310610fb357612710830492506004015b60648310610fc5576064830492506002015b600a83106106805760010192915050565b60006001600160a01b038316158015906110345750826001600160a01b0316846001600160a01b03161480611010575061101084846107ae565b806110345750826001600160a01b031661102983610833565b6001600160a01b0316145b949350505050565b6000611046610984565b54600160401b900460ff16919050565b6001600160a01b03821661108057604051633250574960e11b8152600060048201526024016103c7565b600061108e8383600061087a565b90506001600160a01b0381161561044c576040516339e3563760e11b8152600060048201526024016103c7565b6001600160e01b0319811681146110d157600080fd5b50565b6000602082840312156110e657600080fd5b81356107a7816110bb565b60005b8381101561110c5781810151838201526020016110f4565b50506000910152565b6000815180845261112d8160208601602086016110f1565b601f01601f19169290920160200192915050565b6020815260006107a76020830184611115565b60006020828403121561116657600080fd5b5035919050565b80356001600160a01b038116811461068357600080fd5b6000806040838503121561119757600080fd5b6111a08361116d565b946020939093013593505050565b6000806000606084860312156111c357600080fd5b6111cc8461116d565b92506111da6020850161116d565b929592945050506040919091013590565b6000602082840312156111fd57600080fd5b6107a78261116d565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561123757611237611206565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561126657611266611206565b60405283815290508082840185101561127e57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112a757600080fd5b6107a78383356020850161121c565b600080600080608085870312156112cc57600080fd5b843567ffffffffffffffff8111156112e357600080fd5b6112ef87828801611296565b945050602085013567ffffffffffffffff81111561130c57600080fd5b61131887828801611296565b935050604085013567ffffffffffffffff81111561133557600080fd5b61134187828801611296565b9250506113506060860161116d565b905092959194509250565b6000806040838503121561136e57600080fd5b6113778361116d565b91506020830135801515811461138c57600080fd5b809150509250929050565b600080600080608085870312156113ad57600080fd5b6113b68561116d565b93506113c46020860161116d565b925060408501359150606085013567ffffffffffffffff8111156113e757600080fd5b8501601f810187136113f857600080fd5b6114078782356020840161121c565b91505092959194509250565b6000806040838503121561142657600080fd5b61142f8361116d565b915061143d6020840161116d565b90509250929050565b600181811c9082168061145a57607f821691505b60208210810361147a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561044c57806000526020600020601f840160051c810160208510156114a75750805b601f840160051c820191505b81811015610bae57600081556001016114b3565b815167ffffffffffffffff8111156114e1576114e1611206565b6114f5816114ef8454611446565b84611480565b6020601f82116001811461152957600083156115115750848201515b600019600385901b1c1916600184901b178455610bae565b600084815260208120601f198516915b828110156115595787850151825560209485019460019092019101611539565b50848210156115775786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000600182016115a657634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516115bf8184602088016110f1565b8351908301906115d38183602088016110f1565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061160f90830184611115565b9695505050505050565b60006020828403121561162b57600080fd5b81516107a7816110bb56fe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300a164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1663 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x66345DA4 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4A30D3EB EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5C6D8DA1 EQ PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1184 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x212 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH2 0x2D3 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 CALLER PUSH2 0x86D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DD DUP4 DUP4 CALLER PUSH2 0x87A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20636F6E747261637420616C726561647920736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 PUSH2 0x984 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x51B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x529 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x571 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x57B DUP10 DUP10 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 DUP9 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR DUP2 SSTORE PUSH1 0x2 SSTORE DUP4 ISZERO PUSH2 0x5EC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420636C61696D20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x671 DUP4 PUSH2 0x1586 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x680 DUP4 DUP3 PUSH2 0x9BF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079301 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x39D CALLER DUP4 DUP4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x739 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x42B CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x751 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x75C PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH2 0x786 DUP5 PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x797 SWAP3 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079305 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x807 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079304 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x895 DUP6 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B1 DUP2 DUP6 DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x8CE PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x922 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP9 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xACC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB07 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB04 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB70 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF0 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC54 DUP4 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC74 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCA8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 PUSH2 0xD37 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 PUSH2 0xD47 DUP6 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD73 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD86 JUMPI POP PUSH2 0xD84 DUP2 DUP6 PUSH2 0x7AE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xDF7 JUMPI DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE35 DUP4 DUP4 DUP4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x44C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0xE96 PUSH2 0x103C JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xEBD PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH2 0xED7 DUP5 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0x42B DUP4 DUP3 PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0xEF0 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x44C CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF3D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF69 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF87 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF9F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFB3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFC5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x680 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1010 JUMPI POP PUSH2 0x1010 DUP5 DUP5 PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1029 DUP4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 PUSH2 0x984 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108E DUP4 DUP4 PUSH1 0x0 PUSH2 0x87A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10F4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x112D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A0 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11CC DUP5 PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH2 0x11DA PUSH1 0x20 DUP6 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1237 PUSH2 0x1206 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x127E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x121C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EF DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1341 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1350 PUSH1 0x60 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1377 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B6 DUP6 PUSH2 0x116D JUMP JUMPDEST SWAP4 POP PUSH2 0x13C4 PUSH1 0x20 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1407 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x121C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142F DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH2 0x143D PUSH1 0x20 DUP5 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x145A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x147A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x44C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x14A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14B3 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x14F5 DUP2 PUSH2 0x14EF DUP5 SLOAD PUSH2 0x1446 JUMP JUMPDEST DUP5 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1511 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1559 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1539 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1577 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x15BF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15D3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x160F SWAP1 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP INVALID DUP1 0xBB 0x2B PUSH4 0x8CC20BC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079300A164736F6C634300081C000A00000000 ","sourceMap":"311:1619:22:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__ERC721_init_549":{"entryPoint":2477,"id":549,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_577":{"entryPoint":3765,"id":577,"parameterSlots":2,"returnSlots":0},"@_approve_1393":{"entryPoint":2157,"id":1393,"parameterSlots":3,"returnSlots":0},"@_approve_1467":{"entryPoint":3348,"id":1467,"parameterSlots":4,"returnSlots":0},"@_baseURI_8334":{"entryPoint":2997,"id":8334,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1013":{"entryPoint":3626,"id":1013,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":3726,"id":370,"parameterSlots":0,"returnSlots":0},"@_getApproved_940":{"entryPoint":2099,"id":940,"parameterSlots":1,"returnSlots":1},"@_getERC721Storage_533":{"entryPoint":null,"id":533,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_461":{"entryPoint":2436,"id":461,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_isAuthorized_976":{"entryPoint":4054,"id":976,"parameterSlots":3,"returnSlots":1},"@_isInitializing_438":{"entryPoint":4156,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_1189":{"entryPoint":4182,"id":1189,"parameterSlots":2,"returnSlots":0},"@_msgSender_1570":{"entryPoint":null,"id":1570,"parameterSlots":0,"returnSlots":1},"@_ownerOf_920":{"entryPoint":3290,"id":920,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1541":{"entryPoint":2043,"id":1541,"parameterSlots":1,"returnSlots":1},"@_safeMint_1204":{"entryPoint":2495,"id":1204,"parameterSlots":2,"returnSlots":0},"@_safeMint_1234":{"entryPoint":3814,"id":1234,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1512":{"entryPoint":2521,"id":1512,"parameterSlots":3,"returnSlots":0},"@_update_1139":{"entryPoint":2170,"id":1139,"parameterSlots":3,"returnSlots":1},"@approve_749":{"entryPoint":914,"id":749,"parameterSlots":2,"returnSlots":0},"@balanceOf_643":{"entryPoint":1672,"id":643,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2771":{"entryPoint":2698,"id":2771,"parameterSlots":5,"returnSlots":0},"@claimContract_8233":{"entryPoint":null,"id":8233,"parameterSlots":0,"returnSlots":0},"@getApproved_766":{"entryPoint":893,"id":766,"parameterSlots":1,"returnSlots":1},"@initialize_8279":{"entryPoint":1228,"id":8279,"parameterSlots":4,"returnSlots":0},"@isApprovedForAll_806":{"entryPoint":1966,"id":806,"parameterSlots":2,"returnSlots":1},"@log10_5721":{"entryPoint":3838,"id":5721,"parameterSlots":1,"returnSlots":1},"@mint_8304":{"entryPoint":1538,"id":8304,"parameterSlots":1,"returnSlots":1},"@name_672":{"entryPoint":729,"id":672,"parameterSlots":0,"returnSlots":1},"@ownerOf_656":{"entryPoint":1527,"id":656,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_870":{"entryPoint":1073,"id":870,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_900":{"entryPoint":1838,"id":900,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_782":{"entryPoint":1827,"id":782,"parameterSlots":2,"returnSlots":0},"@setClaimContract_8325":{"entryPoint":1105,"id":8325,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1627":{"entryPoint":null,"id":1627,"parameterSlots":1,"returnSlots":1},"@supportsInterface_608":{"entryPoint":647,"id":608,"parameterSlots":1,"returnSlots":1},"@symbol_688":{"entryPoint":1764,"id":688,"parameterSlots":0,"returnSlots":1},"@toString_2968":{"entryPoint":3143,"id":2968,"parameterSlots":1,"returnSlots":1},"@tokenURI_724":{"entryPoint":1862,"id":724,"parameterSlots":1,"returnSlots":1},"@transferFrom_852":{"entryPoint":929,"id":852,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":4461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":4636,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":4758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5139,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4526,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5015,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4955,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4484,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address":{"entryPoint":4790,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":4436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5549,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5596,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a2b06c872673ea36eb1847032004b38488ea190b880826ef29c3bf30179c5c9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b088184b95d3a833e7091eeb0162c048f8937d56896dab2ddbe6be00c0339c45__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5248,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5319,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4337,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5190,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5510,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4614,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4283,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11972:26","nodeType":"YulBlock","src":"0:11972:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"58:87:26","nodeType":"YulBlock","src":"58:87:26","statements":[{"body":{"nativeSrc":"123:16:26","nodeType":"YulBlock","src":"123:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:26","nodeType":"YulLiteral","src":"132:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:26","nodeType":"YulLiteral","src":"135:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:26","nodeType":"YulIdentifier","src":"125:6:26"},"nativeSrc":"125:12:26","nodeType":"YulFunctionCall","src":"125:12:26"},"nativeSrc":"125:12:26","nodeType":"YulExpressionStatement","src":"125:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:26","nodeType":"YulIdentifier","src":"81:5:26"},{"arguments":[{"name":"value","nativeSrc":"92:5:26","nodeType":"YulIdentifier","src":"92:5:26"},{"arguments":[{"kind":"number","nativeSrc":"103:3:26","nodeType":"YulLiteral","src":"103:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:26","nodeType":"YulLiteral","src":"108:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:26","nodeType":"YulIdentifier","src":"99:3:26"},"nativeSrc":"99:20:26","nodeType":"YulFunctionCall","src":"99:20:26"}],"functionName":{"name":"and","nativeSrc":"88:3:26","nodeType":"YulIdentifier","src":"88:3:26"},"nativeSrc":"88:32:26","nodeType":"YulFunctionCall","src":"88:32:26"}],"functionName":{"name":"eq","nativeSrc":"78:2:26","nodeType":"YulIdentifier","src":"78:2:26"},"nativeSrc":"78:43:26","nodeType":"YulFunctionCall","src":"78:43:26"}],"functionName":{"name":"iszero","nativeSrc":"71:6:26","nodeType":"YulIdentifier","src":"71:6:26"},"nativeSrc":"71:51:26","nodeType":"YulFunctionCall","src":"71:51:26"},"nativeSrc":"68:71:26","nodeType":"YulIf","src":"68:71:26"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:26","nodeType":"YulTypedName","src":"47:5:26","type":""}],"src":"14:131:26"},{"body":{"nativeSrc":"219:176:26","nodeType":"YulBlock","src":"219:176:26","statements":[{"body":{"nativeSrc":"265:16:26","nodeType":"YulBlock","src":"265:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:26","nodeType":"YulLiteral","src":"274:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:26","nodeType":"YulLiteral","src":"277:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:26","nodeType":"YulIdentifier","src":"267:6:26"},"nativeSrc":"267:12:26","nodeType":"YulFunctionCall","src":"267:12:26"},"nativeSrc":"267:12:26","nodeType":"YulExpressionStatement","src":"267:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:26","nodeType":"YulIdentifier","src":"240:7:26"},{"name":"headStart","nativeSrc":"249:9:26","nodeType":"YulIdentifier","src":"249:9:26"}],"functionName":{"name":"sub","nativeSrc":"236:3:26","nodeType":"YulIdentifier","src":"236:3:26"},"nativeSrc":"236:23:26","nodeType":"YulFunctionCall","src":"236:23:26"},{"kind":"number","nativeSrc":"261:2:26","nodeType":"YulLiteral","src":"261:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:26","nodeType":"YulIdentifier","src":"232:3:26"},"nativeSrc":"232:32:26","nodeType":"YulFunctionCall","src":"232:32:26"},"nativeSrc":"229:52:26","nodeType":"YulIf","src":"229:52:26"},{"nativeSrc":"290:36:26","nodeType":"YulVariableDeclaration","src":"290:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:26","nodeType":"YulIdentifier","src":"316:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:26","nodeType":"YulIdentifier","src":"303:12:26"},"nativeSrc":"303:23:26","nodeType":"YulFunctionCall","src":"303:23:26"},"variables":[{"name":"value","nativeSrc":"294:5:26","nodeType":"YulTypedName","src":"294:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:26","nodeType":"YulIdentifier","src":"359:5:26"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:26","nodeType":"YulIdentifier","src":"335:23:26"},"nativeSrc":"335:30:26","nodeType":"YulFunctionCall","src":"335:30:26"},"nativeSrc":"335:30:26","nodeType":"YulExpressionStatement","src":"335:30:26"},{"nativeSrc":"374:15:26","nodeType":"YulAssignment","src":"374:15:26","value":{"name":"value","nativeSrc":"384:5:26","nodeType":"YulIdentifier","src":"384:5:26"},"variableNames":[{"name":"value0","nativeSrc":"374:6:26","nodeType":"YulIdentifier","src":"374:6:26"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:26","nodeType":"YulTypedName","src":"185:9:26","type":""},{"name":"dataEnd","nativeSrc":"196:7:26","nodeType":"YulTypedName","src":"196:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:26","nodeType":"YulTypedName","src":"208:6:26","type":""}],"src":"150:245:26"},{"body":{"nativeSrc":"495:92:26","nodeType":"YulBlock","src":"495:92:26","statements":[{"nativeSrc":"505:26:26","nodeType":"YulAssignment","src":"505:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:26","nodeType":"YulIdentifier","src":"517:9:26"},{"kind":"number","nativeSrc":"528:2:26","nodeType":"YulLiteral","src":"528:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:26","nodeType":"YulIdentifier","src":"513:3:26"},"nativeSrc":"513:18:26","nodeType":"YulFunctionCall","src":"513:18:26"},"variableNames":[{"name":"tail","nativeSrc":"505:4:26","nodeType":"YulIdentifier","src":"505:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:26","nodeType":"YulIdentifier","src":"547:9:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:26","nodeType":"YulIdentifier","src":"572:6:26"}],"functionName":{"name":"iszero","nativeSrc":"565:6:26","nodeType":"YulIdentifier","src":"565:6:26"},"nativeSrc":"565:14:26","nodeType":"YulFunctionCall","src":"565:14:26"}],"functionName":{"name":"iszero","nativeSrc":"558:6:26","nodeType":"YulIdentifier","src":"558:6:26"},"nativeSrc":"558:22:26","nodeType":"YulFunctionCall","src":"558:22:26"}],"functionName":{"name":"mstore","nativeSrc":"540:6:26","nodeType":"YulIdentifier","src":"540:6:26"},"nativeSrc":"540:41:26","nodeType":"YulFunctionCall","src":"540:41:26"},"nativeSrc":"540:41:26","nodeType":"YulExpressionStatement","src":"540:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:26","nodeType":"YulTypedName","src":"464:9:26","type":""},{"name":"value0","nativeSrc":"475:6:26","nodeType":"YulTypedName","src":"475:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:26","nodeType":"YulTypedName","src":"486:4:26","type":""}],"src":"400:187:26"},{"body":{"nativeSrc":"658:184:26","nodeType":"YulBlock","src":"658:184:26","statements":[{"nativeSrc":"668:10:26","nodeType":"YulVariableDeclaration","src":"668:10:26","value":{"kind":"number","nativeSrc":"677:1:26","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"672:1:26","nodeType":"YulTypedName","src":"672:1:26","type":""}]},{"body":{"nativeSrc":"737:63:26","nodeType":"YulBlock","src":"737:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"762:3:26","nodeType":"YulIdentifier","src":"762:3:26"},{"name":"i","nativeSrc":"767:1:26","nodeType":"YulIdentifier","src":"767:1:26"}],"functionName":{"name":"add","nativeSrc":"758:3:26","nodeType":"YulIdentifier","src":"758:3:26"},"nativeSrc":"758:11:26","nodeType":"YulFunctionCall","src":"758:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"781:3:26","nodeType":"YulIdentifier","src":"781:3:26"},{"name":"i","nativeSrc":"786:1:26","nodeType":"YulIdentifier","src":"786:1:26"}],"functionName":{"name":"add","nativeSrc":"777:3:26","nodeType":"YulIdentifier","src":"777:3:26"},"nativeSrc":"777:11:26","nodeType":"YulFunctionCall","src":"777:11:26"}],"functionName":{"name":"mload","nativeSrc":"771:5:26","nodeType":"YulIdentifier","src":"771:5:26"},"nativeSrc":"771:18:26","nodeType":"YulFunctionCall","src":"771:18:26"}],"functionName":{"name":"mstore","nativeSrc":"751:6:26","nodeType":"YulIdentifier","src":"751:6:26"},"nativeSrc":"751:39:26","nodeType":"YulFunctionCall","src":"751:39:26"},"nativeSrc":"751:39:26","nodeType":"YulExpressionStatement","src":"751:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"698:1:26","nodeType":"YulIdentifier","src":"698:1:26"},{"name":"length","nativeSrc":"701:6:26","nodeType":"YulIdentifier","src":"701:6:26"}],"functionName":{"name":"lt","nativeSrc":"695:2:26","nodeType":"YulIdentifier","src":"695:2:26"},"nativeSrc":"695:13:26","nodeType":"YulFunctionCall","src":"695:13:26"},"nativeSrc":"687:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"709:19:26","nodeType":"YulBlock","src":"709:19:26","statements":[{"nativeSrc":"711:15:26","nodeType":"YulAssignment","src":"711:15:26","value":{"arguments":[{"name":"i","nativeSrc":"720:1:26","nodeType":"YulIdentifier","src":"720:1:26"},{"kind":"number","nativeSrc":"723:2:26","nodeType":"YulLiteral","src":"723:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"716:3:26","nodeType":"YulIdentifier","src":"716:3:26"},"nativeSrc":"716:10:26","nodeType":"YulFunctionCall","src":"716:10:26"},"variableNames":[{"name":"i","nativeSrc":"711:1:26","nodeType":"YulIdentifier","src":"711:1:26"}]}]},"pre":{"nativeSrc":"691:3:26","nodeType":"YulBlock","src":"691:3:26","statements":[]},"src":"687:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"820:3:26","nodeType":"YulIdentifier","src":"820:3:26"},{"name":"length","nativeSrc":"825:6:26","nodeType":"YulIdentifier","src":"825:6:26"}],"functionName":{"name":"add","nativeSrc":"816:3:26","nodeType":"YulIdentifier","src":"816:3:26"},"nativeSrc":"816:16:26","nodeType":"YulFunctionCall","src":"816:16:26"},{"kind":"number","nativeSrc":"834:1:26","nodeType":"YulLiteral","src":"834:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"809:6:26","nodeType":"YulIdentifier","src":"809:6:26"},"nativeSrc":"809:27:26","nodeType":"YulFunctionCall","src":"809:27:26"},"nativeSrc":"809:27:26","nodeType":"YulExpressionStatement","src":"809:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"592:250:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"636:3:26","nodeType":"YulTypedName","src":"636:3:26","type":""},{"name":"dst","nativeSrc":"641:3:26","nodeType":"YulTypedName","src":"641:3:26","type":""},{"name":"length","nativeSrc":"646:6:26","nodeType":"YulTypedName","src":"646:6:26","type":""}],"src":"592:250:26"},{"body":{"nativeSrc":"897:221:26","nodeType":"YulBlock","src":"897:221:26","statements":[{"nativeSrc":"907:26:26","nodeType":"YulVariableDeclaration","src":"907:26:26","value":{"arguments":[{"name":"value","nativeSrc":"927:5:26","nodeType":"YulIdentifier","src":"927:5:26"}],"functionName":{"name":"mload","nativeSrc":"921:5:26","nodeType":"YulIdentifier","src":"921:5:26"},"nativeSrc":"921:12:26","nodeType":"YulFunctionCall","src":"921:12:26"},"variables":[{"name":"length","nativeSrc":"911:6:26","nodeType":"YulTypedName","src":"911:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"949:3:26","nodeType":"YulIdentifier","src":"949:3:26"},{"name":"length","nativeSrc":"954:6:26","nodeType":"YulIdentifier","src":"954:6:26"}],"functionName":{"name":"mstore","nativeSrc":"942:6:26","nodeType":"YulIdentifier","src":"942:6:26"},"nativeSrc":"942:19:26","nodeType":"YulFunctionCall","src":"942:19:26"},"nativeSrc":"942:19:26","nodeType":"YulExpressionStatement","src":"942:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1009:5:26","nodeType":"YulIdentifier","src":"1009:5:26"},{"kind":"number","nativeSrc":"1016:4:26","nodeType":"YulLiteral","src":"1016:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1005:3:26","nodeType":"YulIdentifier","src":"1005:3:26"},"nativeSrc":"1005:16:26","nodeType":"YulFunctionCall","src":"1005:16:26"},{"arguments":[{"name":"pos","nativeSrc":"1027:3:26","nodeType":"YulIdentifier","src":"1027:3:26"},{"kind":"number","nativeSrc":"1032:4:26","nodeType":"YulLiteral","src":"1032:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1023:3:26","nodeType":"YulIdentifier","src":"1023:3:26"},"nativeSrc":"1023:14:26","nodeType":"YulFunctionCall","src":"1023:14:26"},{"name":"length","nativeSrc":"1039:6:26","nodeType":"YulIdentifier","src":"1039:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"970:34:26","nodeType":"YulIdentifier","src":"970:34:26"},"nativeSrc":"970:76:26","nodeType":"YulFunctionCall","src":"970:76:26"},"nativeSrc":"970:76:26","nodeType":"YulExpressionStatement","src":"970:76:26"},{"nativeSrc":"1055:57:26","nodeType":"YulAssignment","src":"1055:57:26","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1070:3:26","nodeType":"YulIdentifier","src":"1070:3:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1083:6:26","nodeType":"YulIdentifier","src":"1083:6:26"},{"kind":"number","nativeSrc":"1091:2:26","nodeType":"YulLiteral","src":"1091:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1079:3:26","nodeType":"YulIdentifier","src":"1079:3:26"},"nativeSrc":"1079:15:26","nodeType":"YulFunctionCall","src":"1079:15:26"},{"arguments":[{"kind":"number","nativeSrc":"1100:2:26","nodeType":"YulLiteral","src":"1100:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1096:3:26","nodeType":"YulIdentifier","src":"1096:3:26"},"nativeSrc":"1096:7:26","nodeType":"YulFunctionCall","src":"1096:7:26"}],"functionName":{"name":"and","nativeSrc":"1075:3:26","nodeType":"YulIdentifier","src":"1075:3:26"},"nativeSrc":"1075:29:26","nodeType":"YulFunctionCall","src":"1075:29:26"}],"functionName":{"name":"add","nativeSrc":"1066:3:26","nodeType":"YulIdentifier","src":"1066:3:26"},"nativeSrc":"1066:39:26","nodeType":"YulFunctionCall","src":"1066:39:26"},{"kind":"number","nativeSrc":"1107:4:26","nodeType":"YulLiteral","src":"1107:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1062:3:26","nodeType":"YulIdentifier","src":"1062:3:26"},"nativeSrc":"1062:50:26","nodeType":"YulFunctionCall","src":"1062:50:26"},"variableNames":[{"name":"end","nativeSrc":"1055:3:26","nodeType":"YulIdentifier","src":"1055:3:26"}]}]},"name":"abi_encode_string","nativeSrc":"847:271:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"874:5:26","nodeType":"YulTypedName","src":"874:5:26","type":""},{"name":"pos","nativeSrc":"881:3:26","nodeType":"YulTypedName","src":"881:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"889:3:26","nodeType":"YulTypedName","src":"889:3:26","type":""}],"src":"847:271:26"},{"body":{"nativeSrc":"1244:99:26","nodeType":"YulBlock","src":"1244:99:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1261:9:26","nodeType":"YulIdentifier","src":"1261:9:26"},{"kind":"number","nativeSrc":"1272:2:26","nodeType":"YulLiteral","src":"1272:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1254:6:26","nodeType":"YulIdentifier","src":"1254:6:26"},"nativeSrc":"1254:21:26","nodeType":"YulFunctionCall","src":"1254:21:26"},"nativeSrc":"1254:21:26","nodeType":"YulExpressionStatement","src":"1254:21:26"},{"nativeSrc":"1284:53:26","nodeType":"YulAssignment","src":"1284:53:26","value":{"arguments":[{"name":"value0","nativeSrc":"1310:6:26","nodeType":"YulIdentifier","src":"1310:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"1322:9:26","nodeType":"YulIdentifier","src":"1322:9:26"},{"kind":"number","nativeSrc":"1333:2:26","nodeType":"YulLiteral","src":"1333:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1318:3:26","nodeType":"YulIdentifier","src":"1318:3:26"},"nativeSrc":"1318:18:26","nodeType":"YulFunctionCall","src":"1318:18:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1292:17:26","nodeType":"YulIdentifier","src":"1292:17:26"},"nativeSrc":"1292:45:26","nodeType":"YulFunctionCall","src":"1292:45:26"},"variableNames":[{"name":"tail","nativeSrc":"1284:4:26","nodeType":"YulIdentifier","src":"1284:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1123:220:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1213:9:26","nodeType":"YulTypedName","src":"1213:9:26","type":""},{"name":"value0","nativeSrc":"1224:6:26","nodeType":"YulTypedName","src":"1224:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1235:4:26","nodeType":"YulTypedName","src":"1235:4:26","type":""}],"src":"1123:220:26"},{"body":{"nativeSrc":"1418:156:26","nodeType":"YulBlock","src":"1418:156:26","statements":[{"body":{"nativeSrc":"1464:16:26","nodeType":"YulBlock","src":"1464:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:26","nodeType":"YulLiteral","src":"1473:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:1:26","nodeType":"YulLiteral","src":"1476:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1466:6:26","nodeType":"YulIdentifier","src":"1466:6:26"},"nativeSrc":"1466:12:26","nodeType":"YulFunctionCall","src":"1466:12:26"},"nativeSrc":"1466:12:26","nodeType":"YulExpressionStatement","src":"1466:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1439:7:26","nodeType":"YulIdentifier","src":"1439:7:26"},{"name":"headStart","nativeSrc":"1448:9:26","nodeType":"YulIdentifier","src":"1448:9:26"}],"functionName":{"name":"sub","nativeSrc":"1435:3:26","nodeType":"YulIdentifier","src":"1435:3:26"},"nativeSrc":"1435:23:26","nodeType":"YulFunctionCall","src":"1435:23:26"},{"kind":"number","nativeSrc":"1460:2:26","nodeType":"YulLiteral","src":"1460:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1431:3:26","nodeType":"YulIdentifier","src":"1431:3:26"},"nativeSrc":"1431:32:26","nodeType":"YulFunctionCall","src":"1431:32:26"},"nativeSrc":"1428:52:26","nodeType":"YulIf","src":"1428:52:26"},{"nativeSrc":"1489:14:26","nodeType":"YulVariableDeclaration","src":"1489:14:26","value":{"kind":"number","nativeSrc":"1502:1:26","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1493:5:26","nodeType":"YulTypedName","src":"1493:5:26","type":""}]},{"nativeSrc":"1512:32:26","nodeType":"YulAssignment","src":"1512:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1534:9:26","nodeType":"YulIdentifier","src":"1534:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"1521:12:26","nodeType":"YulIdentifier","src":"1521:12:26"},"nativeSrc":"1521:23:26","nodeType":"YulFunctionCall","src":"1521:23:26"},"variableNames":[{"name":"value","nativeSrc":"1512:5:26","nodeType":"YulIdentifier","src":"1512:5:26"}]},{"nativeSrc":"1553:15:26","nodeType":"YulAssignment","src":"1553:15:26","value":{"name":"value","nativeSrc":"1563:5:26","nodeType":"YulIdentifier","src":"1563:5:26"},"variableNames":[{"name":"value0","nativeSrc":"1553:6:26","nodeType":"YulIdentifier","src":"1553:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1348:226:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1384:9:26","nodeType":"YulTypedName","src":"1384:9:26","type":""},{"name":"dataEnd","nativeSrc":"1395:7:26","nodeType":"YulTypedName","src":"1395:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1407:6:26","nodeType":"YulTypedName","src":"1407:6:26","type":""}],"src":"1348:226:26"},{"body":{"nativeSrc":"1680:102:26","nodeType":"YulBlock","src":"1680:102:26","statements":[{"nativeSrc":"1690:26:26","nodeType":"YulAssignment","src":"1690:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1702:9:26","nodeType":"YulIdentifier","src":"1702:9:26"},{"kind":"number","nativeSrc":"1713:2:26","nodeType":"YulLiteral","src":"1713:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1698:3:26","nodeType":"YulIdentifier","src":"1698:3:26"},"nativeSrc":"1698:18:26","nodeType":"YulFunctionCall","src":"1698:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1690:4:26","nodeType":"YulIdentifier","src":"1690:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1732:9:26","nodeType":"YulIdentifier","src":"1732:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1747:6:26","nodeType":"YulIdentifier","src":"1747:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1763:3:26","nodeType":"YulLiteral","src":"1763:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"1768:1:26","nodeType":"YulLiteral","src":"1768:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1759:3:26","nodeType":"YulIdentifier","src":"1759:3:26"},"nativeSrc":"1759:11:26","nodeType":"YulFunctionCall","src":"1759:11:26"},{"kind":"number","nativeSrc":"1772:1:26","nodeType":"YulLiteral","src":"1772:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1755:3:26","nodeType":"YulIdentifier","src":"1755:3:26"},"nativeSrc":"1755:19:26","nodeType":"YulFunctionCall","src":"1755:19:26"}],"functionName":{"name":"and","nativeSrc":"1743:3:26","nodeType":"YulIdentifier","src":"1743:3:26"},"nativeSrc":"1743:32:26","nodeType":"YulFunctionCall","src":"1743:32:26"}],"functionName":{"name":"mstore","nativeSrc":"1725:6:26","nodeType":"YulIdentifier","src":"1725:6:26"},"nativeSrc":"1725:51:26","nodeType":"YulFunctionCall","src":"1725:51:26"},"nativeSrc":"1725:51:26","nodeType":"YulExpressionStatement","src":"1725:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1579:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1649:9:26","nodeType":"YulTypedName","src":"1649:9:26","type":""},{"name":"value0","nativeSrc":"1660:6:26","nodeType":"YulTypedName","src":"1660:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1671:4:26","nodeType":"YulTypedName","src":"1671:4:26","type":""}],"src":"1579:203:26"},{"body":{"nativeSrc":"1836:124:26","nodeType":"YulBlock","src":"1836:124:26","statements":[{"nativeSrc":"1846:29:26","nodeType":"YulAssignment","src":"1846:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1868:6:26","nodeType":"YulIdentifier","src":"1868:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1855:12:26","nodeType":"YulIdentifier","src":"1855:12:26"},"nativeSrc":"1855:20:26","nodeType":"YulFunctionCall","src":"1855:20:26"},"variableNames":[{"name":"value","nativeSrc":"1846:5:26","nodeType":"YulIdentifier","src":"1846:5:26"}]},{"body":{"nativeSrc":"1938:16:26","nodeType":"YulBlock","src":"1938:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1947:1:26","nodeType":"YulLiteral","src":"1947:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1950:1:26","nodeType":"YulLiteral","src":"1950:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1940:6:26","nodeType":"YulIdentifier","src":"1940:6:26"},"nativeSrc":"1940:12:26","nodeType":"YulFunctionCall","src":"1940:12:26"},"nativeSrc":"1940:12:26","nodeType":"YulExpressionStatement","src":"1940:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1897:5:26","nodeType":"YulIdentifier","src":"1897:5:26"},{"arguments":[{"name":"value","nativeSrc":"1908:5:26","nodeType":"YulIdentifier","src":"1908:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1923:3:26","nodeType":"YulLiteral","src":"1923:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"1928:1:26","nodeType":"YulLiteral","src":"1928:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1919:3:26","nodeType":"YulIdentifier","src":"1919:3:26"},"nativeSrc":"1919:11:26","nodeType":"YulFunctionCall","src":"1919:11:26"},{"kind":"number","nativeSrc":"1932:1:26","nodeType":"YulLiteral","src":"1932:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1915:3:26","nodeType":"YulIdentifier","src":"1915:3:26"},"nativeSrc":"1915:19:26","nodeType":"YulFunctionCall","src":"1915:19:26"}],"functionName":{"name":"and","nativeSrc":"1904:3:26","nodeType":"YulIdentifier","src":"1904:3:26"},"nativeSrc":"1904:31:26","nodeType":"YulFunctionCall","src":"1904:31:26"}],"functionName":{"name":"eq","nativeSrc":"1894:2:26","nodeType":"YulIdentifier","src":"1894:2:26"},"nativeSrc":"1894:42:26","nodeType":"YulFunctionCall","src":"1894:42:26"}],"functionName":{"name":"iszero","nativeSrc":"1887:6:26","nodeType":"YulIdentifier","src":"1887:6:26"},"nativeSrc":"1887:50:26","nodeType":"YulFunctionCall","src":"1887:50:26"},"nativeSrc":"1884:70:26","nodeType":"YulIf","src":"1884:70:26"}]},"name":"abi_decode_address","nativeSrc":"1787:173:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1815:6:26","nodeType":"YulTypedName","src":"1815:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1826:5:26","nodeType":"YulTypedName","src":"1826:5:26","type":""}],"src":"1787:173:26"},{"body":{"nativeSrc":"2052:213:26","nodeType":"YulBlock","src":"2052:213:26","statements":[{"body":{"nativeSrc":"2098:16:26","nodeType":"YulBlock","src":"2098:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2107:1:26","nodeType":"YulLiteral","src":"2107:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2110:1:26","nodeType":"YulLiteral","src":"2110:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2100:6:26","nodeType":"YulIdentifier","src":"2100:6:26"},"nativeSrc":"2100:12:26","nodeType":"YulFunctionCall","src":"2100:12:26"},"nativeSrc":"2100:12:26","nodeType":"YulExpressionStatement","src":"2100:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2073:7:26","nodeType":"YulIdentifier","src":"2073:7:26"},{"name":"headStart","nativeSrc":"2082:9:26","nodeType":"YulIdentifier","src":"2082:9:26"}],"functionName":{"name":"sub","nativeSrc":"2069:3:26","nodeType":"YulIdentifier","src":"2069:3:26"},"nativeSrc":"2069:23:26","nodeType":"YulFunctionCall","src":"2069:23:26"},{"kind":"number","nativeSrc":"2094:2:26","nodeType":"YulLiteral","src":"2094:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2065:3:26","nodeType":"YulIdentifier","src":"2065:3:26"},"nativeSrc":"2065:32:26","nodeType":"YulFunctionCall","src":"2065:32:26"},"nativeSrc":"2062:52:26","nodeType":"YulIf","src":"2062:52:26"},{"nativeSrc":"2123:39:26","nodeType":"YulAssignment","src":"2123:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2152:9:26","nodeType":"YulIdentifier","src":"2152:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2133:18:26","nodeType":"YulIdentifier","src":"2133:18:26"},"nativeSrc":"2133:29:26","nodeType":"YulFunctionCall","src":"2133:29:26"},"variableNames":[{"name":"value0","nativeSrc":"2123:6:26","nodeType":"YulIdentifier","src":"2123:6:26"}]},{"nativeSrc":"2171:14:26","nodeType":"YulVariableDeclaration","src":"2171:14:26","value":{"kind":"number","nativeSrc":"2184:1:26","nodeType":"YulLiteral","src":"2184:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2175:5:26","nodeType":"YulTypedName","src":"2175:5:26","type":""}]},{"nativeSrc":"2194:41:26","nodeType":"YulAssignment","src":"2194:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2220:9:26","nodeType":"YulIdentifier","src":"2220:9:26"},{"kind":"number","nativeSrc":"2231:2:26","nodeType":"YulLiteral","src":"2231:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2216:3:26","nodeType":"YulIdentifier","src":"2216:3:26"},"nativeSrc":"2216:18:26","nodeType":"YulFunctionCall","src":"2216:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2203:12:26","nodeType":"YulIdentifier","src":"2203:12:26"},"nativeSrc":"2203:32:26","nodeType":"YulFunctionCall","src":"2203:32:26"},"variableNames":[{"name":"value","nativeSrc":"2194:5:26","nodeType":"YulIdentifier","src":"2194:5:26"}]},{"nativeSrc":"2244:15:26","nodeType":"YulAssignment","src":"2244:15:26","value":{"name":"value","nativeSrc":"2254:5:26","nodeType":"YulIdentifier","src":"2254:5:26"},"variableNames":[{"name":"value1","nativeSrc":"2244:6:26","nodeType":"YulIdentifier","src":"2244:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1965:300:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2010:9:26","nodeType":"YulTypedName","src":"2010:9:26","type":""},{"name":"dataEnd","nativeSrc":"2021:7:26","nodeType":"YulTypedName","src":"2021:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2033:6:26","nodeType":"YulTypedName","src":"2033:6:26","type":""},{"name":"value1","nativeSrc":"2041:6:26","nodeType":"YulTypedName","src":"2041:6:26","type":""}],"src":"1965:300:26"},{"body":{"nativeSrc":"2374:270:26","nodeType":"YulBlock","src":"2374:270:26","statements":[{"body":{"nativeSrc":"2420:16:26","nodeType":"YulBlock","src":"2420:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2429:1:26","nodeType":"YulLiteral","src":"2429:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2432:1:26","nodeType":"YulLiteral","src":"2432:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2422:6:26","nodeType":"YulIdentifier","src":"2422:6:26"},"nativeSrc":"2422:12:26","nodeType":"YulFunctionCall","src":"2422:12:26"},"nativeSrc":"2422:12:26","nodeType":"YulExpressionStatement","src":"2422:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2395:7:26","nodeType":"YulIdentifier","src":"2395:7:26"},{"name":"headStart","nativeSrc":"2404:9:26","nodeType":"YulIdentifier","src":"2404:9:26"}],"functionName":{"name":"sub","nativeSrc":"2391:3:26","nodeType":"YulIdentifier","src":"2391:3:26"},"nativeSrc":"2391:23:26","nodeType":"YulFunctionCall","src":"2391:23:26"},{"kind":"number","nativeSrc":"2416:2:26","nodeType":"YulLiteral","src":"2416:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2387:3:26","nodeType":"YulIdentifier","src":"2387:3:26"},"nativeSrc":"2387:32:26","nodeType":"YulFunctionCall","src":"2387:32:26"},"nativeSrc":"2384:52:26","nodeType":"YulIf","src":"2384:52:26"},{"nativeSrc":"2445:39:26","nodeType":"YulAssignment","src":"2445:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2474:9:26","nodeType":"YulIdentifier","src":"2474:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2455:18:26","nodeType":"YulIdentifier","src":"2455:18:26"},"nativeSrc":"2455:29:26","nodeType":"YulFunctionCall","src":"2455:29:26"},"variableNames":[{"name":"value0","nativeSrc":"2445:6:26","nodeType":"YulIdentifier","src":"2445:6:26"}]},{"nativeSrc":"2493:48:26","nodeType":"YulAssignment","src":"2493:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2526:9:26","nodeType":"YulIdentifier","src":"2526:9:26"},{"kind":"number","nativeSrc":"2537:2:26","nodeType":"YulLiteral","src":"2537:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2522:3:26","nodeType":"YulIdentifier","src":"2522:3:26"},"nativeSrc":"2522:18:26","nodeType":"YulFunctionCall","src":"2522:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2503:18:26","nodeType":"YulIdentifier","src":"2503:18:26"},"nativeSrc":"2503:38:26","nodeType":"YulFunctionCall","src":"2503:38:26"},"variableNames":[{"name":"value1","nativeSrc":"2493:6:26","nodeType":"YulIdentifier","src":"2493:6:26"}]},{"nativeSrc":"2550:14:26","nodeType":"YulVariableDeclaration","src":"2550:14:26","value":{"kind":"number","nativeSrc":"2563:1:26","nodeType":"YulLiteral","src":"2563:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2554:5:26","nodeType":"YulTypedName","src":"2554:5:26","type":""}]},{"nativeSrc":"2573:41:26","nodeType":"YulAssignment","src":"2573:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2599:9:26","nodeType":"YulIdentifier","src":"2599:9:26"},{"kind":"number","nativeSrc":"2610:2:26","nodeType":"YulLiteral","src":"2610:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2595:3:26","nodeType":"YulIdentifier","src":"2595:3:26"},"nativeSrc":"2595:18:26","nodeType":"YulFunctionCall","src":"2595:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2582:12:26","nodeType":"YulIdentifier","src":"2582:12:26"},"nativeSrc":"2582:32:26","nodeType":"YulFunctionCall","src":"2582:32:26"},"variableNames":[{"name":"value","nativeSrc":"2573:5:26","nodeType":"YulIdentifier","src":"2573:5:26"}]},{"nativeSrc":"2623:15:26","nodeType":"YulAssignment","src":"2623:15:26","value":{"name":"value","nativeSrc":"2633:5:26","nodeType":"YulIdentifier","src":"2633:5:26"},"variableNames":[{"name":"value2","nativeSrc":"2623:6:26","nodeType":"YulIdentifier","src":"2623:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2270:374:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2324:9:26","nodeType":"YulTypedName","src":"2324:9:26","type":""},{"name":"dataEnd","nativeSrc":"2335:7:26","nodeType":"YulTypedName","src":"2335:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2347:6:26","nodeType":"YulTypedName","src":"2347:6:26","type":""},{"name":"value1","nativeSrc":"2355:6:26","nodeType":"YulTypedName","src":"2355:6:26","type":""},{"name":"value2","nativeSrc":"2363:6:26","nodeType":"YulTypedName","src":"2363:6:26","type":""}],"src":"2270:374:26"},{"body":{"nativeSrc":"2719:116:26","nodeType":"YulBlock","src":"2719:116:26","statements":[{"body":{"nativeSrc":"2765:16:26","nodeType":"YulBlock","src":"2765:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2774:1:26","nodeType":"YulLiteral","src":"2774:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2777:1:26","nodeType":"YulLiteral","src":"2777:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2767:6:26","nodeType":"YulIdentifier","src":"2767:6:26"},"nativeSrc":"2767:12:26","nodeType":"YulFunctionCall","src":"2767:12:26"},"nativeSrc":"2767:12:26","nodeType":"YulExpressionStatement","src":"2767:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2740:7:26","nodeType":"YulIdentifier","src":"2740:7:26"},{"name":"headStart","nativeSrc":"2749:9:26","nodeType":"YulIdentifier","src":"2749:9:26"}],"functionName":{"name":"sub","nativeSrc":"2736:3:26","nodeType":"YulIdentifier","src":"2736:3:26"},"nativeSrc":"2736:23:26","nodeType":"YulFunctionCall","src":"2736:23:26"},{"kind":"number","nativeSrc":"2761:2:26","nodeType":"YulLiteral","src":"2761:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2732:3:26","nodeType":"YulIdentifier","src":"2732:3:26"},"nativeSrc":"2732:32:26","nodeType":"YulFunctionCall","src":"2732:32:26"},"nativeSrc":"2729:52:26","nodeType":"YulIf","src":"2729:52:26"},{"nativeSrc":"2790:39:26","nodeType":"YulAssignment","src":"2790:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2819:9:26","nodeType":"YulIdentifier","src":"2819:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2800:18:26","nodeType":"YulIdentifier","src":"2800:18:26"},"nativeSrc":"2800:29:26","nodeType":"YulFunctionCall","src":"2800:29:26"},"variableNames":[{"name":"value0","nativeSrc":"2790:6:26","nodeType":"YulIdentifier","src":"2790:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2649:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2685:9:26","nodeType":"YulTypedName","src":"2685:9:26","type":""},{"name":"dataEnd","nativeSrc":"2696:7:26","nodeType":"YulTypedName","src":"2696:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2708:6:26","nodeType":"YulTypedName","src":"2708:6:26","type":""}],"src":"2649:186:26"},{"body":{"nativeSrc":"2872:95:26","nodeType":"YulBlock","src":"2872:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2889:1:26","nodeType":"YulLiteral","src":"2889:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2896:3:26","nodeType":"YulLiteral","src":"2896:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"2901:10:26","nodeType":"YulLiteral","src":"2901:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2892:3:26","nodeType":"YulIdentifier","src":"2892:3:26"},"nativeSrc":"2892:20:26","nodeType":"YulFunctionCall","src":"2892:20:26"}],"functionName":{"name":"mstore","nativeSrc":"2882:6:26","nodeType":"YulIdentifier","src":"2882:6:26"},"nativeSrc":"2882:31:26","nodeType":"YulFunctionCall","src":"2882:31:26"},"nativeSrc":"2882:31:26","nodeType":"YulExpressionStatement","src":"2882:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2929:1:26","nodeType":"YulLiteral","src":"2929:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"2932:4:26","nodeType":"YulLiteral","src":"2932:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2922:6:26","nodeType":"YulIdentifier","src":"2922:6:26"},"nativeSrc":"2922:15:26","nodeType":"YulFunctionCall","src":"2922:15:26"},"nativeSrc":"2922:15:26","nodeType":"YulExpressionStatement","src":"2922:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2953:1:26","nodeType":"YulLiteral","src":"2953:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2956:4:26","nodeType":"YulLiteral","src":"2956:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2946:6:26","nodeType":"YulIdentifier","src":"2946:6:26"},"nativeSrc":"2946:15:26","nodeType":"YulFunctionCall","src":"2946:15:26"},"nativeSrc":"2946:15:26","nodeType":"YulExpressionStatement","src":"2946:15:26"}]},"name":"panic_error_0x41","nativeSrc":"2840:127:26","nodeType":"YulFunctionDefinition","src":"2840:127:26"},{"body":{"nativeSrc":"3047:641:26","nodeType":"YulBlock","src":"3047:641:26","statements":[{"nativeSrc":"3057:13:26","nodeType":"YulVariableDeclaration","src":"3057:13:26","value":{"kind":"number","nativeSrc":"3069:1:26","nodeType":"YulLiteral","src":"3069:1:26","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"3061:4:26","nodeType":"YulTypedName","src":"3061:4:26","type":""}]},{"body":{"nativeSrc":"3113:22:26","nodeType":"YulBlock","src":"3113:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3115:16:26","nodeType":"YulIdentifier","src":"3115:16:26"},"nativeSrc":"3115:18:26","nodeType":"YulFunctionCall","src":"3115:18:26"},"nativeSrc":"3115:18:26","nodeType":"YulExpressionStatement","src":"3115:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3085:6:26","nodeType":"YulIdentifier","src":"3085:6:26"},{"kind":"number","nativeSrc":"3093:18:26","nodeType":"YulLiteral","src":"3093:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3082:2:26","nodeType":"YulIdentifier","src":"3082:2:26"},"nativeSrc":"3082:30:26","nodeType":"YulFunctionCall","src":"3082:30:26"},"nativeSrc":"3079:56:26","nodeType":"YulIf","src":"3079:56:26"},{"nativeSrc":"3144:43:26","nodeType":"YulVariableDeclaration","src":"3144:43:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3166:6:26","nodeType":"YulIdentifier","src":"3166:6:26"},{"kind":"number","nativeSrc":"3174:2:26","nodeType":"YulLiteral","src":"3174:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3162:3:26","nodeType":"YulIdentifier","src":"3162:3:26"},"nativeSrc":"3162:15:26","nodeType":"YulFunctionCall","src":"3162:15:26"},{"arguments":[{"kind":"number","nativeSrc":"3183:2:26","nodeType":"YulLiteral","src":"3183:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3179:3:26","nodeType":"YulIdentifier","src":"3179:3:26"},"nativeSrc":"3179:7:26","nodeType":"YulFunctionCall","src":"3179:7:26"}],"functionName":{"name":"and","nativeSrc":"3158:3:26","nodeType":"YulIdentifier","src":"3158:3:26"},"nativeSrc":"3158:29:26","nodeType":"YulFunctionCall","src":"3158:29:26"},"variables":[{"name":"result","nativeSrc":"3148:6:26","nodeType":"YulTypedName","src":"3148:6:26","type":""}]},{"nativeSrc":"3196:25:26","nodeType":"YulAssignment","src":"3196:25:26","value":{"arguments":[{"name":"result","nativeSrc":"3208:6:26","nodeType":"YulIdentifier","src":"3208:6:26"},{"kind":"number","nativeSrc":"3216:4:26","nodeType":"YulLiteral","src":"3216:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3204:3:26","nodeType":"YulIdentifier","src":"3204:3:26"},"nativeSrc":"3204:17:26","nodeType":"YulFunctionCall","src":"3204:17:26"},"variableNames":[{"name":"size","nativeSrc":"3196:4:26","nodeType":"YulIdentifier","src":"3196:4:26"}]},{"nativeSrc":"3230:15:26","nodeType":"YulVariableDeclaration","src":"3230:15:26","value":{"kind":"number","nativeSrc":"3244:1:26","nodeType":"YulLiteral","src":"3244:1:26","type":"","value":"0"},"variables":[{"name":"memPtr","nativeSrc":"3234:6:26","nodeType":"YulTypedName","src":"3234:6:26","type":""}]},{"nativeSrc":"3254:19:26","nodeType":"YulAssignment","src":"3254:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"3270:2:26","nodeType":"YulLiteral","src":"3270:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3264:5:26","nodeType":"YulIdentifier","src":"3264:5:26"},"nativeSrc":"3264:9:26","nodeType":"YulFunctionCall","src":"3264:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"3254:6:26","nodeType":"YulIdentifier","src":"3254:6:26"}]},{"nativeSrc":"3282:60:26","nodeType":"YulVariableDeclaration","src":"3282:60:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"3304:6:26","nodeType":"YulIdentifier","src":"3304:6:26"},{"arguments":[{"arguments":[{"name":"result","nativeSrc":"3320:6:26","nodeType":"YulIdentifier","src":"3320:6:26"},{"kind":"number","nativeSrc":"3328:2:26","nodeType":"YulLiteral","src":"3328:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3316:3:26","nodeType":"YulIdentifier","src":"3316:3:26"},"nativeSrc":"3316:15:26","nodeType":"YulFunctionCall","src":"3316:15:26"},{"arguments":[{"kind":"number","nativeSrc":"3337:2:26","nodeType":"YulLiteral","src":"3337:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3333:3:26","nodeType":"YulIdentifier","src":"3333:3:26"},"nativeSrc":"3333:7:26","nodeType":"YulFunctionCall","src":"3333:7:26"}],"functionName":{"name":"and","nativeSrc":"3312:3:26","nodeType":"YulIdentifier","src":"3312:3:26"},"nativeSrc":"3312:29:26","nodeType":"YulFunctionCall","src":"3312:29:26"}],"functionName":{"name":"add","nativeSrc":"3300:3:26","nodeType":"YulIdentifier","src":"3300:3:26"},"nativeSrc":"3300:42:26","nodeType":"YulFunctionCall","src":"3300:42:26"},"variables":[{"name":"newFreePtr","nativeSrc":"3286:10:26","nodeType":"YulTypedName","src":"3286:10:26","type":""}]},{"body":{"nativeSrc":"3417:22:26","nodeType":"YulBlock","src":"3417:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3419:16:26","nodeType":"YulIdentifier","src":"3419:16:26"},"nativeSrc":"3419:18:26","nodeType":"YulFunctionCall","src":"3419:18:26"},"nativeSrc":"3419:18:26","nodeType":"YulExpressionStatement","src":"3419:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3360:10:26","nodeType":"YulIdentifier","src":"3360:10:26"},{"kind":"number","nativeSrc":"3372:18:26","nodeType":"YulLiteral","src":"3372:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3357:2:26","nodeType":"YulIdentifier","src":"3357:2:26"},"nativeSrc":"3357:34:26","nodeType":"YulFunctionCall","src":"3357:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3396:10:26","nodeType":"YulIdentifier","src":"3396:10:26"},{"name":"memPtr","nativeSrc":"3408:6:26","nodeType":"YulIdentifier","src":"3408:6:26"}],"functionName":{"name":"lt","nativeSrc":"3393:2:26","nodeType":"YulIdentifier","src":"3393:2:26"},"nativeSrc":"3393:22:26","nodeType":"YulFunctionCall","src":"3393:22:26"}],"functionName":{"name":"or","nativeSrc":"3354:2:26","nodeType":"YulIdentifier","src":"3354:2:26"},"nativeSrc":"3354:62:26","nodeType":"YulFunctionCall","src":"3354:62:26"},"nativeSrc":"3351:88:26","nodeType":"YulIf","src":"3351:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3455:2:26","nodeType":"YulLiteral","src":"3455:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3459:10:26","nodeType":"YulIdentifier","src":"3459:10:26"}],"functionName":{"name":"mstore","nativeSrc":"3448:6:26","nodeType":"YulIdentifier","src":"3448:6:26"},"nativeSrc":"3448:22:26","nodeType":"YulFunctionCall","src":"3448:22:26"},"nativeSrc":"3448:22:26","nodeType":"YulExpressionStatement","src":"3448:22:26"},{"nativeSrc":"3479:15:26","nodeType":"YulAssignment","src":"3479:15:26","value":{"name":"memPtr","nativeSrc":"3488:6:26","nodeType":"YulIdentifier","src":"3488:6:26"},"variableNames":[{"name":"array","nativeSrc":"3479:5:26","nodeType":"YulIdentifier","src":"3479:5:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3510:6:26","nodeType":"YulIdentifier","src":"3510:6:26"},{"name":"length","nativeSrc":"3518:6:26","nodeType":"YulIdentifier","src":"3518:6:26"}],"functionName":{"name":"mstore","nativeSrc":"3503:6:26","nodeType":"YulIdentifier","src":"3503:6:26"},"nativeSrc":"3503:22:26","nodeType":"YulFunctionCall","src":"3503:22:26"},"nativeSrc":"3503:22:26","nodeType":"YulExpressionStatement","src":"3503:22:26"},{"body":{"nativeSrc":"3563:16:26","nodeType":"YulBlock","src":"3563:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3572:1:26","nodeType":"YulLiteral","src":"3572:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3575:1:26","nodeType":"YulLiteral","src":"3575:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3565:6:26","nodeType":"YulIdentifier","src":"3565:6:26"},"nativeSrc":"3565:12:26","nodeType":"YulFunctionCall","src":"3565:12:26"},"nativeSrc":"3565:12:26","nodeType":"YulExpressionStatement","src":"3565:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3544:3:26","nodeType":"YulIdentifier","src":"3544:3:26"},{"name":"length","nativeSrc":"3549:6:26","nodeType":"YulIdentifier","src":"3549:6:26"}],"functionName":{"name":"add","nativeSrc":"3540:3:26","nodeType":"YulIdentifier","src":"3540:3:26"},"nativeSrc":"3540:16:26","nodeType":"YulFunctionCall","src":"3540:16:26"},{"name":"end","nativeSrc":"3558:3:26","nodeType":"YulIdentifier","src":"3558:3:26"}],"functionName":{"name":"gt","nativeSrc":"3537:2:26","nodeType":"YulIdentifier","src":"3537:2:26"},"nativeSrc":"3537:25:26","nodeType":"YulFunctionCall","src":"3537:25:26"},"nativeSrc":"3534:45:26","nodeType":"YulIf","src":"3534:45:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3605:6:26","nodeType":"YulIdentifier","src":"3605:6:26"},{"kind":"number","nativeSrc":"3613:4:26","nodeType":"YulLiteral","src":"3613:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3601:3:26","nodeType":"YulIdentifier","src":"3601:3:26"},"nativeSrc":"3601:17:26","nodeType":"YulFunctionCall","src":"3601:17:26"},{"name":"src","nativeSrc":"3620:3:26","nodeType":"YulIdentifier","src":"3620:3:26"},{"name":"length","nativeSrc":"3625:6:26","nodeType":"YulIdentifier","src":"3625:6:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"3588:12:26","nodeType":"YulIdentifier","src":"3588:12:26"},"nativeSrc":"3588:44:26","nodeType":"YulFunctionCall","src":"3588:44:26"},"nativeSrc":"3588:44:26","nodeType":"YulExpressionStatement","src":"3588:44:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3656:6:26","nodeType":"YulIdentifier","src":"3656:6:26"},{"name":"length","nativeSrc":"3664:6:26","nodeType":"YulIdentifier","src":"3664:6:26"}],"functionName":{"name":"add","nativeSrc":"3652:3:26","nodeType":"YulIdentifier","src":"3652:3:26"},"nativeSrc":"3652:19:26","nodeType":"YulFunctionCall","src":"3652:19:26"},{"kind":"number","nativeSrc":"3673:4:26","nodeType":"YulLiteral","src":"3673:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3648:3:26","nodeType":"YulIdentifier","src":"3648:3:26"},"nativeSrc":"3648:30:26","nodeType":"YulFunctionCall","src":"3648:30:26"},{"kind":"number","nativeSrc":"3680:1:26","nodeType":"YulLiteral","src":"3680:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3641:6:26","nodeType":"YulIdentifier","src":"3641:6:26"},"nativeSrc":"3641:41:26","nodeType":"YulFunctionCall","src":"3641:41:26"},"nativeSrc":"3641:41:26","nodeType":"YulExpressionStatement","src":"3641:41:26"}]},"name":"abi_decode_available_length_string","nativeSrc":"2972:716:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3016:3:26","nodeType":"YulTypedName","src":"3016:3:26","type":""},{"name":"length","nativeSrc":"3021:6:26","nodeType":"YulTypedName","src":"3021:6:26","type":""},{"name":"end","nativeSrc":"3029:3:26","nodeType":"YulTypedName","src":"3029:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3037:5:26","nodeType":"YulTypedName","src":"3037:5:26","type":""}],"src":"2972:716:26"},{"body":{"nativeSrc":"3746:169:26","nodeType":"YulBlock","src":"3746:169:26","statements":[{"body":{"nativeSrc":"3795:16:26","nodeType":"YulBlock","src":"3795:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3804:1:26","nodeType":"YulLiteral","src":"3804:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3807:1:26","nodeType":"YulLiteral","src":"3807:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3797:6:26","nodeType":"YulIdentifier","src":"3797:6:26"},"nativeSrc":"3797:12:26","nodeType":"YulFunctionCall","src":"3797:12:26"},"nativeSrc":"3797:12:26","nodeType":"YulExpressionStatement","src":"3797:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3774:6:26","nodeType":"YulIdentifier","src":"3774:6:26"},{"kind":"number","nativeSrc":"3782:4:26","nodeType":"YulLiteral","src":"3782:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3770:3:26","nodeType":"YulIdentifier","src":"3770:3:26"},"nativeSrc":"3770:17:26","nodeType":"YulFunctionCall","src":"3770:17:26"},{"name":"end","nativeSrc":"3789:3:26","nodeType":"YulIdentifier","src":"3789:3:26"}],"functionName":{"name":"slt","nativeSrc":"3766:3:26","nodeType":"YulIdentifier","src":"3766:3:26"},"nativeSrc":"3766:27:26","nodeType":"YulFunctionCall","src":"3766:27:26"}],"functionName":{"name":"iszero","nativeSrc":"3759:6:26","nodeType":"YulIdentifier","src":"3759:6:26"},"nativeSrc":"3759:35:26","nodeType":"YulFunctionCall","src":"3759:35:26"},"nativeSrc":"3756:55:26","nodeType":"YulIf","src":"3756:55:26"},{"nativeSrc":"3820:89:26","nodeType":"YulAssignment","src":"3820:89:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3868:6:26","nodeType":"YulIdentifier","src":"3868:6:26"},{"kind":"number","nativeSrc":"3876:4:26","nodeType":"YulLiteral","src":"3876:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3864:3:26","nodeType":"YulIdentifier","src":"3864:3:26"},"nativeSrc":"3864:17:26","nodeType":"YulFunctionCall","src":"3864:17:26"},{"arguments":[{"name":"offset","nativeSrc":"3896:6:26","nodeType":"YulIdentifier","src":"3896:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"3883:12:26","nodeType":"YulIdentifier","src":"3883:12:26"},"nativeSrc":"3883:20:26","nodeType":"YulFunctionCall","src":"3883:20:26"},{"name":"end","nativeSrc":"3905:3:26","nodeType":"YulIdentifier","src":"3905:3:26"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"3829:34:26","nodeType":"YulIdentifier","src":"3829:34:26"},"nativeSrc":"3829:80:26","nodeType":"YulFunctionCall","src":"3829:80:26"},"variableNames":[{"name":"array","nativeSrc":"3820:5:26","nodeType":"YulIdentifier","src":"3820:5:26"}]}]},"name":"abi_decode_string","nativeSrc":"3693:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3720:6:26","nodeType":"YulTypedName","src":"3720:6:26","type":""},{"name":"end","nativeSrc":"3728:3:26","nodeType":"YulTypedName","src":"3728:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3736:5:26","nodeType":"YulTypedName","src":"3736:5:26","type":""}],"src":"3693:222:26"},{"body":{"nativeSrc":"4071:678:26","nodeType":"YulBlock","src":"4071:678:26","statements":[{"body":{"nativeSrc":"4118:16:26","nodeType":"YulBlock","src":"4118:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4127:1:26","nodeType":"YulLiteral","src":"4127:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4130:1:26","nodeType":"YulLiteral","src":"4130:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4120:6:26","nodeType":"YulIdentifier","src":"4120:6:26"},"nativeSrc":"4120:12:26","nodeType":"YulFunctionCall","src":"4120:12:26"},"nativeSrc":"4120:12:26","nodeType":"YulExpressionStatement","src":"4120:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4092:7:26","nodeType":"YulIdentifier","src":"4092:7:26"},{"name":"headStart","nativeSrc":"4101:9:26","nodeType":"YulIdentifier","src":"4101:9:26"}],"functionName":{"name":"sub","nativeSrc":"4088:3:26","nodeType":"YulIdentifier","src":"4088:3:26"},"nativeSrc":"4088:23:26","nodeType":"YulFunctionCall","src":"4088:23:26"},{"kind":"number","nativeSrc":"4113:3:26","nodeType":"YulLiteral","src":"4113:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4084:3:26","nodeType":"YulIdentifier","src":"4084:3:26"},"nativeSrc":"4084:33:26","nodeType":"YulFunctionCall","src":"4084:33:26"},"nativeSrc":"4081:53:26","nodeType":"YulIf","src":"4081:53:26"},{"nativeSrc":"4143:37:26","nodeType":"YulVariableDeclaration","src":"4143:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4170:9:26","nodeType":"YulIdentifier","src":"4170:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"4157:12:26","nodeType":"YulIdentifier","src":"4157:12:26"},"nativeSrc":"4157:23:26","nodeType":"YulFunctionCall","src":"4157:23:26"},"variables":[{"name":"offset","nativeSrc":"4147:6:26","nodeType":"YulTypedName","src":"4147:6:26","type":""}]},{"body":{"nativeSrc":"4223:16:26","nodeType":"YulBlock","src":"4223:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4232:1:26","nodeType":"YulLiteral","src":"4232:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4235:1:26","nodeType":"YulLiteral","src":"4235:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4225:6:26","nodeType":"YulIdentifier","src":"4225:6:26"},"nativeSrc":"4225:12:26","nodeType":"YulFunctionCall","src":"4225:12:26"},"nativeSrc":"4225:12:26","nodeType":"YulExpressionStatement","src":"4225:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4195:6:26","nodeType":"YulIdentifier","src":"4195:6:26"},{"kind":"number","nativeSrc":"4203:18:26","nodeType":"YulLiteral","src":"4203:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4192:2:26","nodeType":"YulIdentifier","src":"4192:2:26"},"nativeSrc":"4192:30:26","nodeType":"YulFunctionCall","src":"4192:30:26"},"nativeSrc":"4189:50:26","nodeType":"YulIf","src":"4189:50:26"},{"nativeSrc":"4248:60:26","nodeType":"YulAssignment","src":"4248:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4280:9:26","nodeType":"YulIdentifier","src":"4280:9:26"},{"name":"offset","nativeSrc":"4291:6:26","nodeType":"YulIdentifier","src":"4291:6:26"}],"functionName":{"name":"add","nativeSrc":"4276:3:26","nodeType":"YulIdentifier","src":"4276:3:26"},"nativeSrc":"4276:22:26","nodeType":"YulFunctionCall","src":"4276:22:26"},{"name":"dataEnd","nativeSrc":"4300:7:26","nodeType":"YulIdentifier","src":"4300:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"4258:17:26","nodeType":"YulIdentifier","src":"4258:17:26"},"nativeSrc":"4258:50:26","nodeType":"YulFunctionCall","src":"4258:50:26"},"variableNames":[{"name":"value0","nativeSrc":"4248:6:26","nodeType":"YulIdentifier","src":"4248:6:26"}]},{"nativeSrc":"4317:48:26","nodeType":"YulVariableDeclaration","src":"4317:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4350:9:26","nodeType":"YulIdentifier","src":"4350:9:26"},{"kind":"number","nativeSrc":"4361:2:26","nodeType":"YulLiteral","src":"4361:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4346:3:26","nodeType":"YulIdentifier","src":"4346:3:26"},"nativeSrc":"4346:18:26","nodeType":"YulFunctionCall","src":"4346:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"4333:12:26","nodeType":"YulIdentifier","src":"4333:12:26"},"nativeSrc":"4333:32:26","nodeType":"YulFunctionCall","src":"4333:32:26"},"variables":[{"name":"offset_1","nativeSrc":"4321:8:26","nodeType":"YulTypedName","src":"4321:8:26","type":""}]},{"body":{"nativeSrc":"4410:16:26","nodeType":"YulBlock","src":"4410:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4419:1:26","nodeType":"YulLiteral","src":"4419:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4422:1:26","nodeType":"YulLiteral","src":"4422:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4412:6:26","nodeType":"YulIdentifier","src":"4412:6:26"},"nativeSrc":"4412:12:26","nodeType":"YulFunctionCall","src":"4412:12:26"},"nativeSrc":"4412:12:26","nodeType":"YulExpressionStatement","src":"4412:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"4380:8:26","nodeType":"YulIdentifier","src":"4380:8:26"},{"kind":"number","nativeSrc":"4390:18:26","nodeType":"YulLiteral","src":"4390:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4377:2:26","nodeType":"YulIdentifier","src":"4377:2:26"},"nativeSrc":"4377:32:26","nodeType":"YulFunctionCall","src":"4377:32:26"},"nativeSrc":"4374:52:26","nodeType":"YulIf","src":"4374:52:26"},{"nativeSrc":"4435:62:26","nodeType":"YulAssignment","src":"4435:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4467:9:26","nodeType":"YulIdentifier","src":"4467:9:26"},{"name":"offset_1","nativeSrc":"4478:8:26","nodeType":"YulIdentifier","src":"4478:8:26"}],"functionName":{"name":"add","nativeSrc":"4463:3:26","nodeType":"YulIdentifier","src":"4463:3:26"},"nativeSrc":"4463:24:26","nodeType":"YulFunctionCall","src":"4463:24:26"},{"name":"dataEnd","nativeSrc":"4489:7:26","nodeType":"YulIdentifier","src":"4489:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"4445:17:26","nodeType":"YulIdentifier","src":"4445:17:26"},"nativeSrc":"4445:52:26","nodeType":"YulFunctionCall","src":"4445:52:26"},"variableNames":[{"name":"value1","nativeSrc":"4435:6:26","nodeType":"YulIdentifier","src":"4435:6:26"}]},{"nativeSrc":"4506:48:26","nodeType":"YulVariableDeclaration","src":"4506:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4539:9:26","nodeType":"YulIdentifier","src":"4539:9:26"},{"kind":"number","nativeSrc":"4550:2:26","nodeType":"YulLiteral","src":"4550:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4535:3:26","nodeType":"YulIdentifier","src":"4535:3:26"},"nativeSrc":"4535:18:26","nodeType":"YulFunctionCall","src":"4535:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"4522:12:26","nodeType":"YulIdentifier","src":"4522:12:26"},"nativeSrc":"4522:32:26","nodeType":"YulFunctionCall","src":"4522:32:26"},"variables":[{"name":"offset_2","nativeSrc":"4510:8:26","nodeType":"YulTypedName","src":"4510:8:26","type":""}]},{"body":{"nativeSrc":"4599:16:26","nodeType":"YulBlock","src":"4599:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4608:1:26","nodeType":"YulLiteral","src":"4608:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4611:1:26","nodeType":"YulLiteral","src":"4611:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4601:6:26","nodeType":"YulIdentifier","src":"4601:6:26"},"nativeSrc":"4601:12:26","nodeType":"YulFunctionCall","src":"4601:12:26"},"nativeSrc":"4601:12:26","nodeType":"YulExpressionStatement","src":"4601:12:26"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"4569:8:26","nodeType":"YulIdentifier","src":"4569:8:26"},{"kind":"number","nativeSrc":"4579:18:26","nodeType":"YulLiteral","src":"4579:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4566:2:26","nodeType":"YulIdentifier","src":"4566:2:26"},"nativeSrc":"4566:32:26","nodeType":"YulFunctionCall","src":"4566:32:26"},"nativeSrc":"4563:52:26","nodeType":"YulIf","src":"4563:52:26"},{"nativeSrc":"4624:62:26","nodeType":"YulAssignment","src":"4624:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4656:9:26","nodeType":"YulIdentifier","src":"4656:9:26"},{"name":"offset_2","nativeSrc":"4667:8:26","nodeType":"YulIdentifier","src":"4667:8:26"}],"functionName":{"name":"add","nativeSrc":"4652:3:26","nodeType":"YulIdentifier","src":"4652:3:26"},"nativeSrc":"4652:24:26","nodeType":"YulFunctionCall","src":"4652:24:26"},{"name":"dataEnd","nativeSrc":"4678:7:26","nodeType":"YulIdentifier","src":"4678:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"4634:17:26","nodeType":"YulIdentifier","src":"4634:17:26"},"nativeSrc":"4634:52:26","nodeType":"YulFunctionCall","src":"4634:52:26"},"variableNames":[{"name":"value2","nativeSrc":"4624:6:26","nodeType":"YulIdentifier","src":"4624:6:26"}]},{"nativeSrc":"4695:48:26","nodeType":"YulAssignment","src":"4695:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4728:9:26","nodeType":"YulIdentifier","src":"4728:9:26"},{"kind":"number","nativeSrc":"4739:2:26","nodeType":"YulLiteral","src":"4739:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4724:3:26","nodeType":"YulIdentifier","src":"4724:3:26"},"nativeSrc":"4724:18:26","nodeType":"YulFunctionCall","src":"4724:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4705:18:26","nodeType":"YulIdentifier","src":"4705:18:26"},"nativeSrc":"4705:38:26","nodeType":"YulFunctionCall","src":"4705:38:26"},"variableNames":[{"name":"value3","nativeSrc":"4695:6:26","nodeType":"YulIdentifier","src":"4695:6:26"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address","nativeSrc":"3920:829:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4013:9:26","nodeType":"YulTypedName","src":"4013:9:26","type":""},{"name":"dataEnd","nativeSrc":"4024:7:26","nodeType":"YulTypedName","src":"4024:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4036:6:26","nodeType":"YulTypedName","src":"4036:6:26","type":""},{"name":"value1","nativeSrc":"4044:6:26","nodeType":"YulTypedName","src":"4044:6:26","type":""},{"name":"value2","nativeSrc":"4052:6:26","nodeType":"YulTypedName","src":"4052:6:26","type":""},{"name":"value3","nativeSrc":"4060:6:26","nodeType":"YulTypedName","src":"4060:6:26","type":""}],"src":"3920:829:26"},{"body":{"nativeSrc":"4855:76:26","nodeType":"YulBlock","src":"4855:76:26","statements":[{"nativeSrc":"4865:26:26","nodeType":"YulAssignment","src":"4865:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4877:9:26","nodeType":"YulIdentifier","src":"4877:9:26"},{"kind":"number","nativeSrc":"4888:2:26","nodeType":"YulLiteral","src":"4888:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4873:3:26","nodeType":"YulIdentifier","src":"4873:3:26"},"nativeSrc":"4873:18:26","nodeType":"YulFunctionCall","src":"4873:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4865:4:26","nodeType":"YulIdentifier","src":"4865:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4907:9:26","nodeType":"YulIdentifier","src":"4907:9:26"},{"name":"value0","nativeSrc":"4918:6:26","nodeType":"YulIdentifier","src":"4918:6:26"}],"functionName":{"name":"mstore","nativeSrc":"4900:6:26","nodeType":"YulIdentifier","src":"4900:6:26"},"nativeSrc":"4900:25:26","nodeType":"YulFunctionCall","src":"4900:25:26"},"nativeSrc":"4900:25:26","nodeType":"YulExpressionStatement","src":"4900:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4754:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4824:9:26","nodeType":"YulTypedName","src":"4824:9:26","type":""},{"name":"value0","nativeSrc":"4835:6:26","nodeType":"YulTypedName","src":"4835:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4846:4:26","nodeType":"YulTypedName","src":"4846:4:26","type":""}],"src":"4754:177:26"},{"body":{"nativeSrc":"5020:263:26","nodeType":"YulBlock","src":"5020:263:26","statements":[{"body":{"nativeSrc":"5066:16:26","nodeType":"YulBlock","src":"5066:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5075:1:26","nodeType":"YulLiteral","src":"5075:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5078:1:26","nodeType":"YulLiteral","src":"5078:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5068:6:26","nodeType":"YulIdentifier","src":"5068:6:26"},"nativeSrc":"5068:12:26","nodeType":"YulFunctionCall","src":"5068:12:26"},"nativeSrc":"5068:12:26","nodeType":"YulExpressionStatement","src":"5068:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5041:7:26","nodeType":"YulIdentifier","src":"5041:7:26"},{"name":"headStart","nativeSrc":"5050:9:26","nodeType":"YulIdentifier","src":"5050:9:26"}],"functionName":{"name":"sub","nativeSrc":"5037:3:26","nodeType":"YulIdentifier","src":"5037:3:26"},"nativeSrc":"5037:23:26","nodeType":"YulFunctionCall","src":"5037:23:26"},{"kind":"number","nativeSrc":"5062:2:26","nodeType":"YulLiteral","src":"5062:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5033:3:26","nodeType":"YulIdentifier","src":"5033:3:26"},"nativeSrc":"5033:32:26","nodeType":"YulFunctionCall","src":"5033:32:26"},"nativeSrc":"5030:52:26","nodeType":"YulIf","src":"5030:52:26"},{"nativeSrc":"5091:39:26","nodeType":"YulAssignment","src":"5091:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5120:9:26","nodeType":"YulIdentifier","src":"5120:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5101:18:26","nodeType":"YulIdentifier","src":"5101:18:26"},"nativeSrc":"5101:29:26","nodeType":"YulFunctionCall","src":"5101:29:26"},"variableNames":[{"name":"value0","nativeSrc":"5091:6:26","nodeType":"YulIdentifier","src":"5091:6:26"}]},{"nativeSrc":"5139:45:26","nodeType":"YulVariableDeclaration","src":"5139:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5169:9:26","nodeType":"YulIdentifier","src":"5169:9:26"},{"kind":"number","nativeSrc":"5180:2:26","nodeType":"YulLiteral","src":"5180:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5165:3:26","nodeType":"YulIdentifier","src":"5165:3:26"},"nativeSrc":"5165:18:26","nodeType":"YulFunctionCall","src":"5165:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"5152:12:26","nodeType":"YulIdentifier","src":"5152:12:26"},"nativeSrc":"5152:32:26","nodeType":"YulFunctionCall","src":"5152:32:26"},"variables":[{"name":"value","nativeSrc":"5143:5:26","nodeType":"YulTypedName","src":"5143:5:26","type":""}]},{"body":{"nativeSrc":"5237:16:26","nodeType":"YulBlock","src":"5237:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5246:1:26","nodeType":"YulLiteral","src":"5246:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5249:1:26","nodeType":"YulLiteral","src":"5249:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5239:6:26","nodeType":"YulIdentifier","src":"5239:6:26"},"nativeSrc":"5239:12:26","nodeType":"YulFunctionCall","src":"5239:12:26"},"nativeSrc":"5239:12:26","nodeType":"YulExpressionStatement","src":"5239:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5206:5:26","nodeType":"YulIdentifier","src":"5206:5:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5227:5:26","nodeType":"YulIdentifier","src":"5227:5:26"}],"functionName":{"name":"iszero","nativeSrc":"5220:6:26","nodeType":"YulIdentifier","src":"5220:6:26"},"nativeSrc":"5220:13:26","nodeType":"YulFunctionCall","src":"5220:13:26"}],"functionName":{"name":"iszero","nativeSrc":"5213:6:26","nodeType":"YulIdentifier","src":"5213:6:26"},"nativeSrc":"5213:21:26","nodeType":"YulFunctionCall","src":"5213:21:26"}],"functionName":{"name":"eq","nativeSrc":"5203:2:26","nodeType":"YulIdentifier","src":"5203:2:26"},"nativeSrc":"5203:32:26","nodeType":"YulFunctionCall","src":"5203:32:26"}],"functionName":{"name":"iszero","nativeSrc":"5196:6:26","nodeType":"YulIdentifier","src":"5196:6:26"},"nativeSrc":"5196:40:26","nodeType":"YulFunctionCall","src":"5196:40:26"},"nativeSrc":"5193:60:26","nodeType":"YulIf","src":"5193:60:26"},{"nativeSrc":"5262:15:26","nodeType":"YulAssignment","src":"5262:15:26","value":{"name":"value","nativeSrc":"5272:5:26","nodeType":"YulIdentifier","src":"5272:5:26"},"variableNames":[{"name":"value1","nativeSrc":"5262:6:26","nodeType":"YulIdentifier","src":"5262:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"4936:347:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4978:9:26","nodeType":"YulTypedName","src":"4978:9:26","type":""},{"name":"dataEnd","nativeSrc":"4989:7:26","nodeType":"YulTypedName","src":"4989:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5001:6:26","nodeType":"YulTypedName","src":"5001:6:26","type":""},{"name":"value1","nativeSrc":"5009:6:26","nodeType":"YulTypedName","src":"5009:6:26","type":""}],"src":"4936:347:26"},{"body":{"nativeSrc":"5418:583:26","nodeType":"YulBlock","src":"5418:583:26","statements":[{"body":{"nativeSrc":"5465:16:26","nodeType":"YulBlock","src":"5465:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5474:1:26","nodeType":"YulLiteral","src":"5474:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5477:1:26","nodeType":"YulLiteral","src":"5477:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5467:6:26","nodeType":"YulIdentifier","src":"5467:6:26"},"nativeSrc":"5467:12:26","nodeType":"YulFunctionCall","src":"5467:12:26"},"nativeSrc":"5467:12:26","nodeType":"YulExpressionStatement","src":"5467:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5439:7:26","nodeType":"YulIdentifier","src":"5439:7:26"},{"name":"headStart","nativeSrc":"5448:9:26","nodeType":"YulIdentifier","src":"5448:9:26"}],"functionName":{"name":"sub","nativeSrc":"5435:3:26","nodeType":"YulIdentifier","src":"5435:3:26"},"nativeSrc":"5435:23:26","nodeType":"YulFunctionCall","src":"5435:23:26"},{"kind":"number","nativeSrc":"5460:3:26","nodeType":"YulLiteral","src":"5460:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"5431:3:26","nodeType":"YulIdentifier","src":"5431:3:26"},"nativeSrc":"5431:33:26","nodeType":"YulFunctionCall","src":"5431:33:26"},"nativeSrc":"5428:53:26","nodeType":"YulIf","src":"5428:53:26"},{"nativeSrc":"5490:39:26","nodeType":"YulAssignment","src":"5490:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5519:9:26","nodeType":"YulIdentifier","src":"5519:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5500:18:26","nodeType":"YulIdentifier","src":"5500:18:26"},"nativeSrc":"5500:29:26","nodeType":"YulFunctionCall","src":"5500:29:26"},"variableNames":[{"name":"value0","nativeSrc":"5490:6:26","nodeType":"YulIdentifier","src":"5490:6:26"}]},{"nativeSrc":"5538:48:26","nodeType":"YulAssignment","src":"5538:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5571:9:26","nodeType":"YulIdentifier","src":"5571:9:26"},{"kind":"number","nativeSrc":"5582:2:26","nodeType":"YulLiteral","src":"5582:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5567:3:26","nodeType":"YulIdentifier","src":"5567:3:26"},"nativeSrc":"5567:18:26","nodeType":"YulFunctionCall","src":"5567:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5548:18:26","nodeType":"YulIdentifier","src":"5548:18:26"},"nativeSrc":"5548:38:26","nodeType":"YulFunctionCall","src":"5548:38:26"},"variableNames":[{"name":"value1","nativeSrc":"5538:6:26","nodeType":"YulIdentifier","src":"5538:6:26"}]},{"nativeSrc":"5595:14:26","nodeType":"YulVariableDeclaration","src":"5595:14:26","value":{"kind":"number","nativeSrc":"5608:1:26","nodeType":"YulLiteral","src":"5608:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5599:5:26","nodeType":"YulTypedName","src":"5599:5:26","type":""}]},{"nativeSrc":"5618:41:26","nodeType":"YulAssignment","src":"5618:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5644:9:26","nodeType":"YulIdentifier","src":"5644:9:26"},{"kind":"number","nativeSrc":"5655:2:26","nodeType":"YulLiteral","src":"5655:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5640:3:26","nodeType":"YulIdentifier","src":"5640:3:26"},"nativeSrc":"5640:18:26","nodeType":"YulFunctionCall","src":"5640:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"5627:12:26","nodeType":"YulIdentifier","src":"5627:12:26"},"nativeSrc":"5627:32:26","nodeType":"YulFunctionCall","src":"5627:32:26"},"variableNames":[{"name":"value","nativeSrc":"5618:5:26","nodeType":"YulIdentifier","src":"5618:5:26"}]},{"nativeSrc":"5668:15:26","nodeType":"YulAssignment","src":"5668:15:26","value":{"name":"value","nativeSrc":"5678:5:26","nodeType":"YulIdentifier","src":"5678:5:26"},"variableNames":[{"name":"value2","nativeSrc":"5668:6:26","nodeType":"YulIdentifier","src":"5668:6:26"}]},{"nativeSrc":"5692:46:26","nodeType":"YulVariableDeclaration","src":"5692:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5723:9:26","nodeType":"YulIdentifier","src":"5723:9:26"},{"kind":"number","nativeSrc":"5734:2:26","nodeType":"YulLiteral","src":"5734:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5719:3:26","nodeType":"YulIdentifier","src":"5719:3:26"},"nativeSrc":"5719:18:26","nodeType":"YulFunctionCall","src":"5719:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"5706:12:26","nodeType":"YulIdentifier","src":"5706:12:26"},"nativeSrc":"5706:32:26","nodeType":"YulFunctionCall","src":"5706:32:26"},"variables":[{"name":"offset","nativeSrc":"5696:6:26","nodeType":"YulTypedName","src":"5696:6:26","type":""}]},{"body":{"nativeSrc":"5781:16:26","nodeType":"YulBlock","src":"5781:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5790:1:26","nodeType":"YulLiteral","src":"5790:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5793:1:26","nodeType":"YulLiteral","src":"5793:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5783:6:26","nodeType":"YulIdentifier","src":"5783:6:26"},"nativeSrc":"5783:12:26","nodeType":"YulFunctionCall","src":"5783:12:26"},"nativeSrc":"5783:12:26","nodeType":"YulExpressionStatement","src":"5783:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5753:6:26","nodeType":"YulIdentifier","src":"5753:6:26"},{"kind":"number","nativeSrc":"5761:18:26","nodeType":"YulLiteral","src":"5761:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5750:2:26","nodeType":"YulIdentifier","src":"5750:2:26"},"nativeSrc":"5750:30:26","nodeType":"YulFunctionCall","src":"5750:30:26"},"nativeSrc":"5747:50:26","nodeType":"YulIf","src":"5747:50:26"},{"nativeSrc":"5806:32:26","nodeType":"YulVariableDeclaration","src":"5806:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5820:9:26","nodeType":"YulIdentifier","src":"5820:9:26"},{"name":"offset","nativeSrc":"5831:6:26","nodeType":"YulIdentifier","src":"5831:6:26"}],"functionName":{"name":"add","nativeSrc":"5816:3:26","nodeType":"YulIdentifier","src":"5816:3:26"},"nativeSrc":"5816:22:26","nodeType":"YulFunctionCall","src":"5816:22:26"},"variables":[{"name":"_1","nativeSrc":"5810:2:26","nodeType":"YulTypedName","src":"5810:2:26","type":""}]},{"body":{"nativeSrc":"5886:16:26","nodeType":"YulBlock","src":"5886:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5895:1:26","nodeType":"YulLiteral","src":"5895:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5898:1:26","nodeType":"YulLiteral","src":"5898:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5888:6:26","nodeType":"YulIdentifier","src":"5888:6:26"},"nativeSrc":"5888:12:26","nodeType":"YulFunctionCall","src":"5888:12:26"},"nativeSrc":"5888:12:26","nodeType":"YulExpressionStatement","src":"5888:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5865:2:26","nodeType":"YulIdentifier","src":"5865:2:26"},{"kind":"number","nativeSrc":"5869:4:26","nodeType":"YulLiteral","src":"5869:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5861:3:26","nodeType":"YulIdentifier","src":"5861:3:26"},"nativeSrc":"5861:13:26","nodeType":"YulFunctionCall","src":"5861:13:26"},{"name":"dataEnd","nativeSrc":"5876:7:26","nodeType":"YulIdentifier","src":"5876:7:26"}],"functionName":{"name":"slt","nativeSrc":"5857:3:26","nodeType":"YulIdentifier","src":"5857:3:26"},"nativeSrc":"5857:27:26","nodeType":"YulFunctionCall","src":"5857:27:26"}],"functionName":{"name":"iszero","nativeSrc":"5850:6:26","nodeType":"YulIdentifier","src":"5850:6:26"},"nativeSrc":"5850:35:26","nodeType":"YulFunctionCall","src":"5850:35:26"},"nativeSrc":"5847:55:26","nodeType":"YulIf","src":"5847:55:26"},{"nativeSrc":"5911:84:26","nodeType":"YulAssignment","src":"5911:84:26","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5960:2:26","nodeType":"YulIdentifier","src":"5960:2:26"},{"kind":"number","nativeSrc":"5964:2:26","nodeType":"YulLiteral","src":"5964:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5956:3:26","nodeType":"YulIdentifier","src":"5956:3:26"},"nativeSrc":"5956:11:26","nodeType":"YulFunctionCall","src":"5956:11:26"},{"arguments":[{"name":"_1","nativeSrc":"5982:2:26","nodeType":"YulIdentifier","src":"5982:2:26"}],"functionName":{"name":"calldataload","nativeSrc":"5969:12:26","nodeType":"YulIdentifier","src":"5969:12:26"},"nativeSrc":"5969:16:26","nodeType":"YulFunctionCall","src":"5969:16:26"},{"name":"dataEnd","nativeSrc":"5987:7:26","nodeType":"YulIdentifier","src":"5987:7:26"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"5921:34:26","nodeType":"YulIdentifier","src":"5921:34:26"},"nativeSrc":"5921:74:26","nodeType":"YulFunctionCall","src":"5921:74:26"},"variableNames":[{"name":"value3","nativeSrc":"5911:6:26","nodeType":"YulIdentifier","src":"5911:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"5288:713:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5360:9:26","nodeType":"YulTypedName","src":"5360:9:26","type":""},{"name":"dataEnd","nativeSrc":"5371:7:26","nodeType":"YulTypedName","src":"5371:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5383:6:26","nodeType":"YulTypedName","src":"5383:6:26","type":""},{"name":"value1","nativeSrc":"5391:6:26","nodeType":"YulTypedName","src":"5391:6:26","type":""},{"name":"value2","nativeSrc":"5399:6:26","nodeType":"YulTypedName","src":"5399:6:26","type":""},{"name":"value3","nativeSrc":"5407:6:26","nodeType":"YulTypedName","src":"5407:6:26","type":""}],"src":"5288:713:26"},{"body":{"nativeSrc":"6093:173:26","nodeType":"YulBlock","src":"6093:173:26","statements":[{"body":{"nativeSrc":"6139:16:26","nodeType":"YulBlock","src":"6139:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6148:1:26","nodeType":"YulLiteral","src":"6148:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6151:1:26","nodeType":"YulLiteral","src":"6151:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6141:6:26","nodeType":"YulIdentifier","src":"6141:6:26"},"nativeSrc":"6141:12:26","nodeType":"YulFunctionCall","src":"6141:12:26"},"nativeSrc":"6141:12:26","nodeType":"YulExpressionStatement","src":"6141:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6114:7:26","nodeType":"YulIdentifier","src":"6114:7:26"},{"name":"headStart","nativeSrc":"6123:9:26","nodeType":"YulIdentifier","src":"6123:9:26"}],"functionName":{"name":"sub","nativeSrc":"6110:3:26","nodeType":"YulIdentifier","src":"6110:3:26"},"nativeSrc":"6110:23:26","nodeType":"YulFunctionCall","src":"6110:23:26"},{"kind":"number","nativeSrc":"6135:2:26","nodeType":"YulLiteral","src":"6135:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6106:3:26","nodeType":"YulIdentifier","src":"6106:3:26"},"nativeSrc":"6106:32:26","nodeType":"YulFunctionCall","src":"6106:32:26"},"nativeSrc":"6103:52:26","nodeType":"YulIf","src":"6103:52:26"},{"nativeSrc":"6164:39:26","nodeType":"YulAssignment","src":"6164:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6193:9:26","nodeType":"YulIdentifier","src":"6193:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6174:18:26","nodeType":"YulIdentifier","src":"6174:18:26"},"nativeSrc":"6174:29:26","nodeType":"YulFunctionCall","src":"6174:29:26"},"variableNames":[{"name":"value0","nativeSrc":"6164:6:26","nodeType":"YulIdentifier","src":"6164:6:26"}]},{"nativeSrc":"6212:48:26","nodeType":"YulAssignment","src":"6212:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6245:9:26","nodeType":"YulIdentifier","src":"6245:9:26"},{"kind":"number","nativeSrc":"6256:2:26","nodeType":"YulLiteral","src":"6256:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6241:3:26","nodeType":"YulIdentifier","src":"6241:3:26"},"nativeSrc":"6241:18:26","nodeType":"YulFunctionCall","src":"6241:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6222:18:26","nodeType":"YulIdentifier","src":"6222:18:26"},"nativeSrc":"6222:38:26","nodeType":"YulFunctionCall","src":"6222:38:26"},"variableNames":[{"name":"value1","nativeSrc":"6212:6:26","nodeType":"YulIdentifier","src":"6212:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6006:260:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6051:9:26","nodeType":"YulTypedName","src":"6051:9:26","type":""},{"name":"dataEnd","nativeSrc":"6062:7:26","nodeType":"YulTypedName","src":"6062:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6074:6:26","nodeType":"YulTypedName","src":"6074:6:26","type":""},{"name":"value1","nativeSrc":"6082:6:26","nodeType":"YulTypedName","src":"6082:6:26","type":""}],"src":"6006:260:26"},{"body":{"nativeSrc":"6326:325:26","nodeType":"YulBlock","src":"6326:325:26","statements":[{"nativeSrc":"6336:22:26","nodeType":"YulAssignment","src":"6336:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"6350:1:26","nodeType":"YulLiteral","src":"6350:1:26","type":"","value":"1"},{"name":"data","nativeSrc":"6353:4:26","nodeType":"YulIdentifier","src":"6353:4:26"}],"functionName":{"name":"shr","nativeSrc":"6346:3:26","nodeType":"YulIdentifier","src":"6346:3:26"},"nativeSrc":"6346:12:26","nodeType":"YulFunctionCall","src":"6346:12:26"},"variableNames":[{"name":"length","nativeSrc":"6336:6:26","nodeType":"YulIdentifier","src":"6336:6:26"}]},{"nativeSrc":"6367:38:26","nodeType":"YulVariableDeclaration","src":"6367:38:26","value":{"arguments":[{"name":"data","nativeSrc":"6397:4:26","nodeType":"YulIdentifier","src":"6397:4:26"},{"kind":"number","nativeSrc":"6403:1:26","nodeType":"YulLiteral","src":"6403:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6393:3:26","nodeType":"YulIdentifier","src":"6393:3:26"},"nativeSrc":"6393:12:26","nodeType":"YulFunctionCall","src":"6393:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6371:18:26","nodeType":"YulTypedName","src":"6371:18:26","type":""}]},{"body":{"nativeSrc":"6444:31:26","nodeType":"YulBlock","src":"6444:31:26","statements":[{"nativeSrc":"6446:27:26","nodeType":"YulAssignment","src":"6446:27:26","value":{"arguments":[{"name":"length","nativeSrc":"6460:6:26","nodeType":"YulIdentifier","src":"6460:6:26"},{"kind":"number","nativeSrc":"6468:4:26","nodeType":"YulLiteral","src":"6468:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6456:3:26","nodeType":"YulIdentifier","src":"6456:3:26"},"nativeSrc":"6456:17:26","nodeType":"YulFunctionCall","src":"6456:17:26"},"variableNames":[{"name":"length","nativeSrc":"6446:6:26","nodeType":"YulIdentifier","src":"6446:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6424:18:26","nodeType":"YulIdentifier","src":"6424:18:26"}],"functionName":{"name":"iszero","nativeSrc":"6417:6:26","nodeType":"YulIdentifier","src":"6417:6:26"},"nativeSrc":"6417:26:26","nodeType":"YulFunctionCall","src":"6417:26:26"},"nativeSrc":"6414:61:26","nodeType":"YulIf","src":"6414:61:26"},{"body":{"nativeSrc":"6534:111:26","nodeType":"YulBlock","src":"6534:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6555:1:26","nodeType":"YulLiteral","src":"6555:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6562:3:26","nodeType":"YulLiteral","src":"6562:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"6567:10:26","nodeType":"YulLiteral","src":"6567:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6558:3:26","nodeType":"YulIdentifier","src":"6558:3:26"},"nativeSrc":"6558:20:26","nodeType":"YulFunctionCall","src":"6558:20:26"}],"functionName":{"name":"mstore","nativeSrc":"6548:6:26","nodeType":"YulIdentifier","src":"6548:6:26"},"nativeSrc":"6548:31:26","nodeType":"YulFunctionCall","src":"6548:31:26"},"nativeSrc":"6548:31:26","nodeType":"YulExpressionStatement","src":"6548:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6599:1:26","nodeType":"YulLiteral","src":"6599:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"6602:4:26","nodeType":"YulLiteral","src":"6602:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6592:6:26","nodeType":"YulIdentifier","src":"6592:6:26"},"nativeSrc":"6592:15:26","nodeType":"YulFunctionCall","src":"6592:15:26"},"nativeSrc":"6592:15:26","nodeType":"YulExpressionStatement","src":"6592:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6627:1:26","nodeType":"YulLiteral","src":"6627:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6630:4:26","nodeType":"YulLiteral","src":"6630:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6620:6:26","nodeType":"YulIdentifier","src":"6620:6:26"},"nativeSrc":"6620:15:26","nodeType":"YulFunctionCall","src":"6620:15:26"},"nativeSrc":"6620:15:26","nodeType":"YulExpressionStatement","src":"6620:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6490:18:26","nodeType":"YulIdentifier","src":"6490:18:26"},{"arguments":[{"name":"length","nativeSrc":"6513:6:26","nodeType":"YulIdentifier","src":"6513:6:26"},{"kind":"number","nativeSrc":"6521:2:26","nodeType":"YulLiteral","src":"6521:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6510:2:26","nodeType":"YulIdentifier","src":"6510:2:26"},"nativeSrc":"6510:14:26","nodeType":"YulFunctionCall","src":"6510:14:26"}],"functionName":{"name":"eq","nativeSrc":"6487:2:26","nodeType":"YulIdentifier","src":"6487:2:26"},"nativeSrc":"6487:38:26","nodeType":"YulFunctionCall","src":"6487:38:26"},"nativeSrc":"6484:161:26","nodeType":"YulIf","src":"6484:161:26"}]},"name":"extract_byte_array_length","nativeSrc":"6271:380:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6306:4:26","nodeType":"YulTypedName","src":"6306:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6315:6:26","nodeType":"YulTypedName","src":"6315:6:26","type":""}],"src":"6271:380:26"},{"body":{"nativeSrc":"6813:214:26","nodeType":"YulBlock","src":"6813:214:26","statements":[{"nativeSrc":"6823:26:26","nodeType":"YulAssignment","src":"6823:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6835:9:26","nodeType":"YulIdentifier","src":"6835:9:26"},{"kind":"number","nativeSrc":"6846:2:26","nodeType":"YulLiteral","src":"6846:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6831:3:26","nodeType":"YulIdentifier","src":"6831:3:26"},"nativeSrc":"6831:18:26","nodeType":"YulFunctionCall","src":"6831:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6823:4:26","nodeType":"YulIdentifier","src":"6823:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6865:9:26","nodeType":"YulIdentifier","src":"6865:9:26"},{"arguments":[{"name":"value0","nativeSrc":"6880:6:26","nodeType":"YulIdentifier","src":"6880:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6896:3:26","nodeType":"YulLiteral","src":"6896:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"6901:1:26","nodeType":"YulLiteral","src":"6901:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6892:3:26","nodeType":"YulIdentifier","src":"6892:3:26"},"nativeSrc":"6892:11:26","nodeType":"YulFunctionCall","src":"6892:11:26"},{"kind":"number","nativeSrc":"6905:1:26","nodeType":"YulLiteral","src":"6905:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6888:3:26","nodeType":"YulIdentifier","src":"6888:3:26"},"nativeSrc":"6888:19:26","nodeType":"YulFunctionCall","src":"6888:19:26"}],"functionName":{"name":"and","nativeSrc":"6876:3:26","nodeType":"YulIdentifier","src":"6876:3:26"},"nativeSrc":"6876:32:26","nodeType":"YulFunctionCall","src":"6876:32:26"}],"functionName":{"name":"mstore","nativeSrc":"6858:6:26","nodeType":"YulIdentifier","src":"6858:6:26"},"nativeSrc":"6858:51:26","nodeType":"YulFunctionCall","src":"6858:51:26"},"nativeSrc":"6858:51:26","nodeType":"YulExpressionStatement","src":"6858:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6929:9:26","nodeType":"YulIdentifier","src":"6929:9:26"},{"kind":"number","nativeSrc":"6940:2:26","nodeType":"YulLiteral","src":"6940:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6925:3:26","nodeType":"YulIdentifier","src":"6925:3:26"},"nativeSrc":"6925:18:26","nodeType":"YulFunctionCall","src":"6925:18:26"},{"name":"value1","nativeSrc":"6945:6:26","nodeType":"YulIdentifier","src":"6945:6:26"}],"functionName":{"name":"mstore","nativeSrc":"6918:6:26","nodeType":"YulIdentifier","src":"6918:6:26"},"nativeSrc":"6918:34:26","nodeType":"YulFunctionCall","src":"6918:34:26"},"nativeSrc":"6918:34:26","nodeType":"YulExpressionStatement","src":"6918:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6972:9:26","nodeType":"YulIdentifier","src":"6972:9:26"},{"kind":"number","nativeSrc":"6983:2:26","nodeType":"YulLiteral","src":"6983:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6968:3:26","nodeType":"YulIdentifier","src":"6968:3:26"},"nativeSrc":"6968:18:26","nodeType":"YulFunctionCall","src":"6968:18:26"},{"arguments":[{"name":"value2","nativeSrc":"6992:6:26","nodeType":"YulIdentifier","src":"6992:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7008:3:26","nodeType":"YulLiteral","src":"7008:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7013:1:26","nodeType":"YulLiteral","src":"7013:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7004:3:26","nodeType":"YulIdentifier","src":"7004:3:26"},"nativeSrc":"7004:11:26","nodeType":"YulFunctionCall","src":"7004:11:26"},{"kind":"number","nativeSrc":"7017:1:26","nodeType":"YulLiteral","src":"7017:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7000:3:26","nodeType":"YulIdentifier","src":"7000:3:26"},"nativeSrc":"7000:19:26","nodeType":"YulFunctionCall","src":"7000:19:26"}],"functionName":{"name":"and","nativeSrc":"6988:3:26","nodeType":"YulIdentifier","src":"6988:3:26"},"nativeSrc":"6988:32:26","nodeType":"YulFunctionCall","src":"6988:32:26"}],"functionName":{"name":"mstore","nativeSrc":"6961:6:26","nodeType":"YulIdentifier","src":"6961:6:26"},"nativeSrc":"6961:60:26","nodeType":"YulFunctionCall","src":"6961:60:26"},"nativeSrc":"6961:60:26","nodeType":"YulExpressionStatement","src":"6961:60:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"6656:371:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6766:9:26","nodeType":"YulTypedName","src":"6766:9:26","type":""},{"name":"value2","nativeSrc":"6777:6:26","nodeType":"YulTypedName","src":"6777:6:26","type":""},{"name":"value1","nativeSrc":"6785:6:26","nodeType":"YulTypedName","src":"6785:6:26","type":""},{"name":"value0","nativeSrc":"6793:6:26","nodeType":"YulTypedName","src":"6793:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6804:4:26","nodeType":"YulTypedName","src":"6804:4:26","type":""}],"src":"6656:371:26"},{"body":{"nativeSrc":"7206:176:26","nodeType":"YulBlock","src":"7206:176:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7223:9:26","nodeType":"YulIdentifier","src":"7223:9:26"},{"kind":"number","nativeSrc":"7234:2:26","nodeType":"YulLiteral","src":"7234:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7216:6:26","nodeType":"YulIdentifier","src":"7216:6:26"},"nativeSrc":"7216:21:26","nodeType":"YulFunctionCall","src":"7216:21:26"},"nativeSrc":"7216:21:26","nodeType":"YulExpressionStatement","src":"7216:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7257:9:26","nodeType":"YulIdentifier","src":"7257:9:26"},{"kind":"number","nativeSrc":"7268:2:26","nodeType":"YulLiteral","src":"7268:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7253:3:26","nodeType":"YulIdentifier","src":"7253:3:26"},"nativeSrc":"7253:18:26","nodeType":"YulFunctionCall","src":"7253:18:26"},{"kind":"number","nativeSrc":"7273:2:26","nodeType":"YulLiteral","src":"7273:2:26","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"7246:6:26","nodeType":"YulIdentifier","src":"7246:6:26"},"nativeSrc":"7246:30:26","nodeType":"YulFunctionCall","src":"7246:30:26"},"nativeSrc":"7246:30:26","nodeType":"YulExpressionStatement","src":"7246:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7296:9:26","nodeType":"YulIdentifier","src":"7296:9:26"},{"kind":"number","nativeSrc":"7307:2:26","nodeType":"YulLiteral","src":"7307:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7292:3:26","nodeType":"YulIdentifier","src":"7292:3:26"},"nativeSrc":"7292:18:26","nodeType":"YulFunctionCall","src":"7292:18:26"},{"hexValue":"436c61696d20636f6e747261637420616c726561647920736574","kind":"string","nativeSrc":"7312:28:26","nodeType":"YulLiteral","src":"7312:28:26","type":"","value":"Claim contract already set"}],"functionName":{"name":"mstore","nativeSrc":"7285:6:26","nodeType":"YulIdentifier","src":"7285:6:26"},"nativeSrc":"7285:56:26","nodeType":"YulFunctionCall","src":"7285:56:26"},"nativeSrc":"7285:56:26","nodeType":"YulExpressionStatement","src":"7285:56:26"},{"nativeSrc":"7350:26:26","nodeType":"YulAssignment","src":"7350:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7362:9:26","nodeType":"YulIdentifier","src":"7362:9:26"},{"kind":"number","nativeSrc":"7373:2:26","nodeType":"YulLiteral","src":"7373:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7358:3:26","nodeType":"YulIdentifier","src":"7358:3:26"},"nativeSrc":"7358:18:26","nodeType":"YulFunctionCall","src":"7358:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7350:4:26","nodeType":"YulIdentifier","src":"7350:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b088184b95d3a833e7091eeb0162c048f8937d56896dab2ddbe6be00c0339c45__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7032:350:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7183:9:26","nodeType":"YulTypedName","src":"7183:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7197:4:26","nodeType":"YulTypedName","src":"7197:4:26","type":""}],"src":"7032:350:26"},{"body":{"nativeSrc":"7443:65:26","nodeType":"YulBlock","src":"7443:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7460:1:26","nodeType":"YulLiteral","src":"7460:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"7463:3:26","nodeType":"YulIdentifier","src":"7463:3:26"}],"functionName":{"name":"mstore","nativeSrc":"7453:6:26","nodeType":"YulIdentifier","src":"7453:6:26"},"nativeSrc":"7453:14:26","nodeType":"YulFunctionCall","src":"7453:14:26"},"nativeSrc":"7453:14:26","nodeType":"YulExpressionStatement","src":"7453:14:26"},{"nativeSrc":"7476:26:26","nodeType":"YulAssignment","src":"7476:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"7494:1:26","nodeType":"YulLiteral","src":"7494:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7497:4:26","nodeType":"YulLiteral","src":"7497:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7484:9:26","nodeType":"YulIdentifier","src":"7484:9:26"},"nativeSrc":"7484:18:26","nodeType":"YulFunctionCall","src":"7484:18:26"},"variableNames":[{"name":"data","nativeSrc":"7476:4:26","nodeType":"YulIdentifier","src":"7476:4:26"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"7387:121:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7426:3:26","nodeType":"YulTypedName","src":"7426:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7434:4:26","nodeType":"YulTypedName","src":"7434:4:26","type":""}],"src":"7387:121:26"},{"body":{"nativeSrc":"7594:437:26","nodeType":"YulBlock","src":"7594:437:26","statements":[{"body":{"nativeSrc":"7627:398:26","nodeType":"YulBlock","src":"7627:398:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7648:1:26","nodeType":"YulLiteral","src":"7648:1:26","type":"","value":"0"},{"name":"array","nativeSrc":"7651:5:26","nodeType":"YulIdentifier","src":"7651:5:26"}],"functionName":{"name":"mstore","nativeSrc":"7641:6:26","nodeType":"YulIdentifier","src":"7641:6:26"},"nativeSrc":"7641:16:26","nodeType":"YulFunctionCall","src":"7641:16:26"},"nativeSrc":"7641:16:26","nodeType":"YulExpressionStatement","src":"7641:16:26"},{"nativeSrc":"7670:30:26","nodeType":"YulVariableDeclaration","src":"7670:30:26","value":{"arguments":[{"kind":"number","nativeSrc":"7692:1:26","nodeType":"YulLiteral","src":"7692:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7695:4:26","nodeType":"YulLiteral","src":"7695:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7682:9:26","nodeType":"YulIdentifier","src":"7682:9:26"},"nativeSrc":"7682:18:26","nodeType":"YulFunctionCall","src":"7682:18:26"},"variables":[{"name":"data","nativeSrc":"7674:4:26","nodeType":"YulTypedName","src":"7674:4:26","type":""}]},{"nativeSrc":"7713:57:26","nodeType":"YulVariableDeclaration","src":"7713:57:26","value":{"arguments":[{"name":"data","nativeSrc":"7736:4:26","nodeType":"YulIdentifier","src":"7736:4:26"},{"arguments":[{"kind":"number","nativeSrc":"7746:1:26","nodeType":"YulLiteral","src":"7746:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"7753:10:26","nodeType":"YulIdentifier","src":"7753:10:26"},{"kind":"number","nativeSrc":"7765:2:26","nodeType":"YulLiteral","src":"7765:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7749:3:26","nodeType":"YulIdentifier","src":"7749:3:26"},"nativeSrc":"7749:19:26","nodeType":"YulFunctionCall","src":"7749:19:26"}],"functionName":{"name":"shr","nativeSrc":"7742:3:26","nodeType":"YulIdentifier","src":"7742:3:26"},"nativeSrc":"7742:27:26","nodeType":"YulFunctionCall","src":"7742:27:26"}],"functionName":{"name":"add","nativeSrc":"7732:3:26","nodeType":"YulIdentifier","src":"7732:3:26"},"nativeSrc":"7732:38:26","nodeType":"YulFunctionCall","src":"7732:38:26"},"variables":[{"name":"deleteStart","nativeSrc":"7717:11:26","nodeType":"YulTypedName","src":"7717:11:26","type":""}]},{"body":{"nativeSrc":"7807:23:26","nodeType":"YulBlock","src":"7807:23:26","statements":[{"nativeSrc":"7809:19:26","nodeType":"YulAssignment","src":"7809:19:26","value":{"name":"data","nativeSrc":"7824:4:26","nodeType":"YulIdentifier","src":"7824:4:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"7809:11:26","nodeType":"YulIdentifier","src":"7809:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7789:10:26","nodeType":"YulIdentifier","src":"7789:10:26"},{"kind":"number","nativeSrc":"7801:4:26","nodeType":"YulLiteral","src":"7801:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"7786:2:26","nodeType":"YulIdentifier","src":"7786:2:26"},"nativeSrc":"7786:20:26","nodeType":"YulFunctionCall","src":"7786:20:26"},"nativeSrc":"7783:47:26","nodeType":"YulIf","src":"7783:47:26"},{"nativeSrc":"7843:41:26","nodeType":"YulVariableDeclaration","src":"7843:41:26","value":{"arguments":[{"name":"data","nativeSrc":"7857:4:26","nodeType":"YulIdentifier","src":"7857:4:26"},{"arguments":[{"kind":"number","nativeSrc":"7867:1:26","nodeType":"YulLiteral","src":"7867:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"7874:3:26","nodeType":"YulIdentifier","src":"7874:3:26"},{"kind":"number","nativeSrc":"7879:2:26","nodeType":"YulLiteral","src":"7879:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7870:3:26","nodeType":"YulIdentifier","src":"7870:3:26"},"nativeSrc":"7870:12:26","nodeType":"YulFunctionCall","src":"7870:12:26"}],"functionName":{"name":"shr","nativeSrc":"7863:3:26","nodeType":"YulIdentifier","src":"7863:3:26"},"nativeSrc":"7863:20:26","nodeType":"YulFunctionCall","src":"7863:20:26"}],"functionName":{"name":"add","nativeSrc":"7853:3:26","nodeType":"YulIdentifier","src":"7853:3:26"},"nativeSrc":"7853:31:26","nodeType":"YulFunctionCall","src":"7853:31:26"},"variables":[{"name":"_1","nativeSrc":"7847:2:26","nodeType":"YulTypedName","src":"7847:2:26","type":""}]},{"nativeSrc":"7897:24:26","nodeType":"YulVariableDeclaration","src":"7897:24:26","value":{"name":"deleteStart","nativeSrc":"7910:11:26","nodeType":"YulIdentifier","src":"7910:11:26"},"variables":[{"name":"start","nativeSrc":"7901:5:26","nodeType":"YulTypedName","src":"7901:5:26","type":""}]},{"body":{"nativeSrc":"7995:20:26","nodeType":"YulBlock","src":"7995:20:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"8004:5:26","nodeType":"YulIdentifier","src":"8004:5:26"},{"kind":"number","nativeSrc":"8011:1:26","nodeType":"YulLiteral","src":"8011:1:26","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"7997:6:26","nodeType":"YulIdentifier","src":"7997:6:26"},"nativeSrc":"7997:16:26","nodeType":"YulFunctionCall","src":"7997:16:26"},"nativeSrc":"7997:16:26","nodeType":"YulExpressionStatement","src":"7997:16:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7945:5:26","nodeType":"YulIdentifier","src":"7945:5:26"},{"name":"_1","nativeSrc":"7952:2:26","nodeType":"YulIdentifier","src":"7952:2:26"}],"functionName":{"name":"lt","nativeSrc":"7942:2:26","nodeType":"YulIdentifier","src":"7942:2:26"},"nativeSrc":"7942:13:26","nodeType":"YulFunctionCall","src":"7942:13:26"},"nativeSrc":"7934:81:26","nodeType":"YulForLoop","post":{"nativeSrc":"7956:26:26","nodeType":"YulBlock","src":"7956:26:26","statements":[{"nativeSrc":"7958:22:26","nodeType":"YulAssignment","src":"7958:22:26","value":{"arguments":[{"name":"start","nativeSrc":"7971:5:26","nodeType":"YulIdentifier","src":"7971:5:26"},{"kind":"number","nativeSrc":"7978:1:26","nodeType":"YulLiteral","src":"7978:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7967:3:26","nodeType":"YulIdentifier","src":"7967:3:26"},"nativeSrc":"7967:13:26","nodeType":"YulFunctionCall","src":"7967:13:26"},"variableNames":[{"name":"start","nativeSrc":"7958:5:26","nodeType":"YulIdentifier","src":"7958:5:26"}]}]},"pre":{"nativeSrc":"7938:3:26","nodeType":"YulBlock","src":"7938:3:26","statements":[]},"src":"7934:81:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7610:3:26","nodeType":"YulIdentifier","src":"7610:3:26"},{"kind":"number","nativeSrc":"7615:2:26","nodeType":"YulLiteral","src":"7615:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7607:2:26","nodeType":"YulIdentifier","src":"7607:2:26"},"nativeSrc":"7607:11:26","nodeType":"YulFunctionCall","src":"7607:11:26"},"nativeSrc":"7604:421:26","nodeType":"YulIf","src":"7604:421:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"7513:518:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7566:5:26","nodeType":"YulTypedName","src":"7566:5:26","type":""},{"name":"len","nativeSrc":"7573:3:26","nodeType":"YulTypedName","src":"7573:3:26","type":""},{"name":"startIndex","nativeSrc":"7578:10:26","nodeType":"YulTypedName","src":"7578:10:26","type":""}],"src":"7513:518:26"},{"body":{"nativeSrc":"8121:81:26","nodeType":"YulBlock","src":"8121:81:26","statements":[{"nativeSrc":"8131:65:26","nodeType":"YulAssignment","src":"8131:65:26","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"8146:4:26","nodeType":"YulIdentifier","src":"8146:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8164:1:26","nodeType":"YulLiteral","src":"8164:1:26","type":"","value":"3"},{"name":"len","nativeSrc":"8167:3:26","nodeType":"YulIdentifier","src":"8167:3:26"}],"functionName":{"name":"shl","nativeSrc":"8160:3:26","nodeType":"YulIdentifier","src":"8160:3:26"},"nativeSrc":"8160:11:26","nodeType":"YulFunctionCall","src":"8160:11:26"},{"arguments":[{"kind":"number","nativeSrc":"8177:1:26","nodeType":"YulLiteral","src":"8177:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8173:3:26","nodeType":"YulIdentifier","src":"8173:3:26"},"nativeSrc":"8173:6:26","nodeType":"YulFunctionCall","src":"8173:6:26"}],"functionName":{"name":"shr","nativeSrc":"8156:3:26","nodeType":"YulIdentifier","src":"8156:3:26"},"nativeSrc":"8156:24:26","nodeType":"YulFunctionCall","src":"8156:24:26"}],"functionName":{"name":"not","nativeSrc":"8152:3:26","nodeType":"YulIdentifier","src":"8152:3:26"},"nativeSrc":"8152:29:26","nodeType":"YulFunctionCall","src":"8152:29:26"}],"functionName":{"name":"and","nativeSrc":"8142:3:26","nodeType":"YulIdentifier","src":"8142:3:26"},"nativeSrc":"8142:40:26","nodeType":"YulFunctionCall","src":"8142:40:26"},{"arguments":[{"kind":"number","nativeSrc":"8188:1:26","nodeType":"YulLiteral","src":"8188:1:26","type":"","value":"1"},{"name":"len","nativeSrc":"8191:3:26","nodeType":"YulIdentifier","src":"8191:3:26"}],"functionName":{"name":"shl","nativeSrc":"8184:3:26","nodeType":"YulIdentifier","src":"8184:3:26"},"nativeSrc":"8184:11:26","nodeType":"YulFunctionCall","src":"8184:11:26"}],"functionName":{"name":"or","nativeSrc":"8139:2:26","nodeType":"YulIdentifier","src":"8139:2:26"},"nativeSrc":"8139:57:26","nodeType":"YulFunctionCall","src":"8139:57:26"},"variableNames":[{"name":"used","nativeSrc":"8131:4:26","nodeType":"YulIdentifier","src":"8131:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8036:166:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8098:4:26","nodeType":"YulTypedName","src":"8098:4:26","type":""},{"name":"len","nativeSrc":"8104:3:26","nodeType":"YulTypedName","src":"8104:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"8112:4:26","nodeType":"YulTypedName","src":"8112:4:26","type":""}],"src":"8036:166:26"},{"body":{"nativeSrc":"8303:1203:26","nodeType":"YulBlock","src":"8303:1203:26","statements":[{"nativeSrc":"8313:24:26","nodeType":"YulVariableDeclaration","src":"8313:24:26","value":{"arguments":[{"name":"src","nativeSrc":"8333:3:26","nodeType":"YulIdentifier","src":"8333:3:26"}],"functionName":{"name":"mload","nativeSrc":"8327:5:26","nodeType":"YulIdentifier","src":"8327:5:26"},"nativeSrc":"8327:10:26","nodeType":"YulFunctionCall","src":"8327:10:26"},"variables":[{"name":"newLen","nativeSrc":"8317:6:26","nodeType":"YulTypedName","src":"8317:6:26","type":""}]},{"body":{"nativeSrc":"8380:22:26","nodeType":"YulBlock","src":"8380:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8382:16:26","nodeType":"YulIdentifier","src":"8382:16:26"},"nativeSrc":"8382:18:26","nodeType":"YulFunctionCall","src":"8382:18:26"},"nativeSrc":"8382:18:26","nodeType":"YulExpressionStatement","src":"8382:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"8352:6:26","nodeType":"YulIdentifier","src":"8352:6:26"},{"kind":"number","nativeSrc":"8360:18:26","nodeType":"YulLiteral","src":"8360:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8349:2:26","nodeType":"YulIdentifier","src":"8349:2:26"},"nativeSrc":"8349:30:26","nodeType":"YulFunctionCall","src":"8349:30:26"},"nativeSrc":"8346:56:26","nodeType":"YulIf","src":"8346:56:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8455:4:26","nodeType":"YulIdentifier","src":"8455:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8493:4:26","nodeType":"YulIdentifier","src":"8493:4:26"}],"functionName":{"name":"sload","nativeSrc":"8487:5:26","nodeType":"YulIdentifier","src":"8487:5:26"},"nativeSrc":"8487:11:26","nodeType":"YulFunctionCall","src":"8487:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8461:25:26","nodeType":"YulIdentifier","src":"8461:25:26"},"nativeSrc":"8461:38:26","nodeType":"YulFunctionCall","src":"8461:38:26"},{"name":"newLen","nativeSrc":"8501:6:26","nodeType":"YulIdentifier","src":"8501:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"8411:43:26","nodeType":"YulIdentifier","src":"8411:43:26"},"nativeSrc":"8411:97:26","nodeType":"YulFunctionCall","src":"8411:97:26"},"nativeSrc":"8411:97:26","nodeType":"YulExpressionStatement","src":"8411:97:26"},{"nativeSrc":"8517:18:26","nodeType":"YulVariableDeclaration","src":"8517:18:26","value":{"kind":"number","nativeSrc":"8534:1:26","nodeType":"YulLiteral","src":"8534:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8521:9:26","nodeType":"YulTypedName","src":"8521:9:26","type":""}]},{"nativeSrc":"8544:17:26","nodeType":"YulAssignment","src":"8544:17:26","value":{"kind":"number","nativeSrc":"8557:4:26","nodeType":"YulLiteral","src":"8557:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8544:9:26","nodeType":"YulIdentifier","src":"8544:9:26"}]},{"cases":[{"body":{"nativeSrc":"8607:642:26","nodeType":"YulBlock","src":"8607:642:26","statements":[{"nativeSrc":"8621:35:26","nodeType":"YulVariableDeclaration","src":"8621:35:26","value":{"arguments":[{"name":"newLen","nativeSrc":"8640:6:26","nodeType":"YulIdentifier","src":"8640:6:26"},{"arguments":[{"kind":"number","nativeSrc":"8652:2:26","nodeType":"YulLiteral","src":"8652:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"8648:3:26","nodeType":"YulIdentifier","src":"8648:3:26"},"nativeSrc":"8648:7:26","nodeType":"YulFunctionCall","src":"8648:7:26"}],"functionName":{"name":"and","nativeSrc":"8636:3:26","nodeType":"YulIdentifier","src":"8636:3:26"},"nativeSrc":"8636:20:26","nodeType":"YulFunctionCall","src":"8636:20:26"},"variables":[{"name":"loopEnd","nativeSrc":"8625:7:26","nodeType":"YulTypedName","src":"8625:7:26","type":""}]},{"nativeSrc":"8669:49:26","nodeType":"YulVariableDeclaration","src":"8669:49:26","value":{"arguments":[{"name":"slot","nativeSrc":"8713:4:26","nodeType":"YulIdentifier","src":"8713:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"8683:29:26","nodeType":"YulIdentifier","src":"8683:29:26"},"nativeSrc":"8683:35:26","nodeType":"YulFunctionCall","src":"8683:35:26"},"variables":[{"name":"dstPtr","nativeSrc":"8673:6:26","nodeType":"YulTypedName","src":"8673:6:26","type":""}]},{"nativeSrc":"8731:10:26","nodeType":"YulVariableDeclaration","src":"8731:10:26","value":{"kind":"number","nativeSrc":"8740:1:26","nodeType":"YulLiteral","src":"8740:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8735:1:26","nodeType":"YulTypedName","src":"8735:1:26","type":""}]},{"body":{"nativeSrc":"8811:165:26","nodeType":"YulBlock","src":"8811:165:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8836:6:26","nodeType":"YulIdentifier","src":"8836:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8854:3:26","nodeType":"YulIdentifier","src":"8854:3:26"},{"name":"srcOffset","nativeSrc":"8859:9:26","nodeType":"YulIdentifier","src":"8859:9:26"}],"functionName":{"name":"add","nativeSrc":"8850:3:26","nodeType":"YulIdentifier","src":"8850:3:26"},"nativeSrc":"8850:19:26","nodeType":"YulFunctionCall","src":"8850:19:26"}],"functionName":{"name":"mload","nativeSrc":"8844:5:26","nodeType":"YulIdentifier","src":"8844:5:26"},"nativeSrc":"8844:26:26","nodeType":"YulFunctionCall","src":"8844:26:26"}],"functionName":{"name":"sstore","nativeSrc":"8829:6:26","nodeType":"YulIdentifier","src":"8829:6:26"},"nativeSrc":"8829:42:26","nodeType":"YulFunctionCall","src":"8829:42:26"},"nativeSrc":"8829:42:26","nodeType":"YulExpressionStatement","src":"8829:42:26"},{"nativeSrc":"8888:24:26","nodeType":"YulAssignment","src":"8888:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8902:6:26","nodeType":"YulIdentifier","src":"8902:6:26"},{"kind":"number","nativeSrc":"8910:1:26","nodeType":"YulLiteral","src":"8910:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8898:3:26","nodeType":"YulIdentifier","src":"8898:3:26"},"nativeSrc":"8898:14:26","nodeType":"YulFunctionCall","src":"8898:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"8888:6:26","nodeType":"YulIdentifier","src":"8888:6:26"}]},{"nativeSrc":"8929:33:26","nodeType":"YulAssignment","src":"8929:33:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8946:9:26","nodeType":"YulIdentifier","src":"8946:9:26"},{"kind":"number","nativeSrc":"8957:4:26","nodeType":"YulLiteral","src":"8957:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8942:3:26","nodeType":"YulIdentifier","src":"8942:3:26"},"nativeSrc":"8942:20:26","nodeType":"YulFunctionCall","src":"8942:20:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"8929:9:26","nodeType":"YulIdentifier","src":"8929:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8765:1:26","nodeType":"YulIdentifier","src":"8765:1:26"},{"name":"loopEnd","nativeSrc":"8768:7:26","nodeType":"YulIdentifier","src":"8768:7:26"}],"functionName":{"name":"lt","nativeSrc":"8762:2:26","nodeType":"YulIdentifier","src":"8762:2:26"},"nativeSrc":"8762:14:26","nodeType":"YulFunctionCall","src":"8762:14:26"},"nativeSrc":"8754:222:26","nodeType":"YulForLoop","post":{"nativeSrc":"8777:21:26","nodeType":"YulBlock","src":"8777:21:26","statements":[{"nativeSrc":"8779:17:26","nodeType":"YulAssignment","src":"8779:17:26","value":{"arguments":[{"name":"i","nativeSrc":"8788:1:26","nodeType":"YulIdentifier","src":"8788:1:26"},{"kind":"number","nativeSrc":"8791:4:26","nodeType":"YulLiteral","src":"8791:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8784:3:26","nodeType":"YulIdentifier","src":"8784:3:26"},"nativeSrc":"8784:12:26","nodeType":"YulFunctionCall","src":"8784:12:26"},"variableNames":[{"name":"i","nativeSrc":"8779:1:26","nodeType":"YulIdentifier","src":"8779:1:26"}]}]},"pre":{"nativeSrc":"8758:3:26","nodeType":"YulBlock","src":"8758:3:26","statements":[]},"src":"8754:222:26"},{"body":{"nativeSrc":"9024:166:26","nodeType":"YulBlock","src":"9024:166:26","statements":[{"nativeSrc":"9042:43:26","nodeType":"YulVariableDeclaration","src":"9042:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9069:3:26","nodeType":"YulIdentifier","src":"9069:3:26"},{"name":"srcOffset","nativeSrc":"9074:9:26","nodeType":"YulIdentifier","src":"9074:9:26"}],"functionName":{"name":"add","nativeSrc":"9065:3:26","nodeType":"YulIdentifier","src":"9065:3:26"},"nativeSrc":"9065:19:26","nodeType":"YulFunctionCall","src":"9065:19:26"}],"functionName":{"name":"mload","nativeSrc":"9059:5:26","nodeType":"YulIdentifier","src":"9059:5:26"},"nativeSrc":"9059:26:26","nodeType":"YulFunctionCall","src":"9059:26:26"},"variables":[{"name":"lastValue","nativeSrc":"9046:9:26","nodeType":"YulTypedName","src":"9046:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9109:6:26","nodeType":"YulIdentifier","src":"9109:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"9121:9:26","nodeType":"YulIdentifier","src":"9121:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9148:1:26","nodeType":"YulLiteral","src":"9148:1:26","type":"","value":"3"},{"name":"newLen","nativeSrc":"9151:6:26","nodeType":"YulIdentifier","src":"9151:6:26"}],"functionName":{"name":"shl","nativeSrc":"9144:3:26","nodeType":"YulIdentifier","src":"9144:3:26"},"nativeSrc":"9144:14:26","nodeType":"YulFunctionCall","src":"9144:14:26"},{"kind":"number","nativeSrc":"9160:3:26","nodeType":"YulLiteral","src":"9160:3:26","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"9140:3:26","nodeType":"YulIdentifier","src":"9140:3:26"},"nativeSrc":"9140:24:26","nodeType":"YulFunctionCall","src":"9140:24:26"},{"arguments":[{"kind":"number","nativeSrc":"9170:1:26","nodeType":"YulLiteral","src":"9170:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9166:3:26","nodeType":"YulIdentifier","src":"9166:3:26"},"nativeSrc":"9166:6:26","nodeType":"YulFunctionCall","src":"9166:6:26"}],"functionName":{"name":"shr","nativeSrc":"9136:3:26","nodeType":"YulIdentifier","src":"9136:3:26"},"nativeSrc":"9136:37:26","nodeType":"YulFunctionCall","src":"9136:37:26"}],"functionName":{"name":"not","nativeSrc":"9132:3:26","nodeType":"YulIdentifier","src":"9132:3:26"},"nativeSrc":"9132:42:26","nodeType":"YulFunctionCall","src":"9132:42:26"}],"functionName":{"name":"and","nativeSrc":"9117:3:26","nodeType":"YulIdentifier","src":"9117:3:26"},"nativeSrc":"9117:58:26","nodeType":"YulFunctionCall","src":"9117:58:26"}],"functionName":{"name":"sstore","nativeSrc":"9102:6:26","nodeType":"YulIdentifier","src":"9102:6:26"},"nativeSrc":"9102:74:26","nodeType":"YulFunctionCall","src":"9102:74:26"},"nativeSrc":"9102:74:26","nodeType":"YulExpressionStatement","src":"9102:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8995:7:26","nodeType":"YulIdentifier","src":"8995:7:26"},{"name":"newLen","nativeSrc":"9004:6:26","nodeType":"YulIdentifier","src":"9004:6:26"}],"functionName":{"name":"lt","nativeSrc":"8992:2:26","nodeType":"YulIdentifier","src":"8992:2:26"},"nativeSrc":"8992:19:26","nodeType":"YulFunctionCall","src":"8992:19:26"},"nativeSrc":"8989:201:26","nodeType":"YulIf","src":"8989:201:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9210:4:26","nodeType":"YulIdentifier","src":"9210:4:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9224:1:26","nodeType":"YulLiteral","src":"9224:1:26","type":"","value":"1"},{"name":"newLen","nativeSrc":"9227:6:26","nodeType":"YulIdentifier","src":"9227:6:26"}],"functionName":{"name":"shl","nativeSrc":"9220:3:26","nodeType":"YulIdentifier","src":"9220:3:26"},"nativeSrc":"9220:14:26","nodeType":"YulFunctionCall","src":"9220:14:26"},{"kind":"number","nativeSrc":"9236:1:26","nodeType":"YulLiteral","src":"9236:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9216:3:26","nodeType":"YulIdentifier","src":"9216:3:26"},"nativeSrc":"9216:22:26","nodeType":"YulFunctionCall","src":"9216:22:26"}],"functionName":{"name":"sstore","nativeSrc":"9203:6:26","nodeType":"YulIdentifier","src":"9203:6:26"},"nativeSrc":"9203:36:26","nodeType":"YulFunctionCall","src":"9203:36:26"},"nativeSrc":"9203:36:26","nodeType":"YulExpressionStatement","src":"9203:36:26"}]},"nativeSrc":"8600:649:26","nodeType":"YulCase","src":"8600:649:26","value":{"kind":"number","nativeSrc":"8605:1:26","nodeType":"YulLiteral","src":"8605:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"9266:234:26","nodeType":"YulBlock","src":"9266:234:26","statements":[{"nativeSrc":"9280:14:26","nodeType":"YulVariableDeclaration","src":"9280:14:26","value":{"kind":"number","nativeSrc":"9293:1:26","nodeType":"YulLiteral","src":"9293:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9284:5:26","nodeType":"YulTypedName","src":"9284:5:26","type":""}]},{"body":{"nativeSrc":"9329:67:26","nodeType":"YulBlock","src":"9329:67:26","statements":[{"nativeSrc":"9347:35:26","nodeType":"YulAssignment","src":"9347:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9366:3:26","nodeType":"YulIdentifier","src":"9366:3:26"},{"name":"srcOffset","nativeSrc":"9371:9:26","nodeType":"YulIdentifier","src":"9371:9:26"}],"functionName":{"name":"add","nativeSrc":"9362:3:26","nodeType":"YulIdentifier","src":"9362:3:26"},"nativeSrc":"9362:19:26","nodeType":"YulFunctionCall","src":"9362:19:26"}],"functionName":{"name":"mload","nativeSrc":"9356:5:26","nodeType":"YulIdentifier","src":"9356:5:26"},"nativeSrc":"9356:26:26","nodeType":"YulFunctionCall","src":"9356:26:26"},"variableNames":[{"name":"value","nativeSrc":"9347:5:26","nodeType":"YulIdentifier","src":"9347:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"9310:6:26","nodeType":"YulIdentifier","src":"9310:6:26"},"nativeSrc":"9307:89:26","nodeType":"YulIf","src":"9307:89:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9416:4:26","nodeType":"YulIdentifier","src":"9416:4:26"},{"arguments":[{"name":"value","nativeSrc":"9475:5:26","nodeType":"YulIdentifier","src":"9475:5:26"},{"name":"newLen","nativeSrc":"9482:6:26","nodeType":"YulIdentifier","src":"9482:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9422:52:26","nodeType":"YulIdentifier","src":"9422:52:26"},"nativeSrc":"9422:67:26","nodeType":"YulFunctionCall","src":"9422:67:26"}],"functionName":{"name":"sstore","nativeSrc":"9409:6:26","nodeType":"YulIdentifier","src":"9409:6:26"},"nativeSrc":"9409:81:26","nodeType":"YulFunctionCall","src":"9409:81:26"},"nativeSrc":"9409:81:26","nodeType":"YulExpressionStatement","src":"9409:81:26"}]},"nativeSrc":"9258:242:26","nodeType":"YulCase","src":"9258:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8580:6:26","nodeType":"YulIdentifier","src":"8580:6:26"},{"kind":"number","nativeSrc":"8588:2:26","nodeType":"YulLiteral","src":"8588:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8577:2:26","nodeType":"YulIdentifier","src":"8577:2:26"},"nativeSrc":"8577:14:26","nodeType":"YulFunctionCall","src":"8577:14:26"},"nativeSrc":"8570:930:26","nodeType":"YulSwitch","src":"8570:930:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8207:1299:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8288:4:26","nodeType":"YulTypedName","src":"8288:4:26","type":""},{"name":"src","nativeSrc":"8294:3:26","nodeType":"YulTypedName","src":"8294:3:26","type":""}],"src":"8207:1299:26"},{"body":{"nativeSrc":"9619:101:26","nodeType":"YulBlock","src":"9619:101:26","statements":[{"nativeSrc":"9629:26:26","nodeType":"YulAssignment","src":"9629:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9641:9:26","nodeType":"YulIdentifier","src":"9641:9:26"},{"kind":"number","nativeSrc":"9652:2:26","nodeType":"YulLiteral","src":"9652:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9637:3:26","nodeType":"YulIdentifier","src":"9637:3:26"},"nativeSrc":"9637:18:26","nodeType":"YulFunctionCall","src":"9637:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9629:4:26","nodeType":"YulIdentifier","src":"9629:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9671:9:26","nodeType":"YulIdentifier","src":"9671:9:26"},{"arguments":[{"name":"value0","nativeSrc":"9686:6:26","nodeType":"YulIdentifier","src":"9686:6:26"},{"kind":"number","nativeSrc":"9694:18:26","nodeType":"YulLiteral","src":"9694:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9682:3:26","nodeType":"YulIdentifier","src":"9682:3:26"},"nativeSrc":"9682:31:26","nodeType":"YulFunctionCall","src":"9682:31:26"}],"functionName":{"name":"mstore","nativeSrc":"9664:6:26","nodeType":"YulIdentifier","src":"9664:6:26"},"nativeSrc":"9664:50:26","nodeType":"YulFunctionCall","src":"9664:50:26"},"nativeSrc":"9664:50:26","nodeType":"YulExpressionStatement","src":"9664:50:26"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"9511:209:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9588:9:26","nodeType":"YulTypedName","src":"9588:9:26","type":""},{"name":"value0","nativeSrc":"9599:6:26","nodeType":"YulTypedName","src":"9599:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9610:4:26","nodeType":"YulTypedName","src":"9610:4:26","type":""}],"src":"9511:209:26"},{"body":{"nativeSrc":"9899:178:26","nodeType":"YulBlock","src":"9899:178:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9916:9:26","nodeType":"YulIdentifier","src":"9916:9:26"},{"kind":"number","nativeSrc":"9927:2:26","nodeType":"YulLiteral","src":"9927:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9909:6:26","nodeType":"YulIdentifier","src":"9909:6:26"},"nativeSrc":"9909:21:26","nodeType":"YulFunctionCall","src":"9909:21:26"},"nativeSrc":"9909:21:26","nodeType":"YulExpressionStatement","src":"9909:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9950:9:26","nodeType":"YulIdentifier","src":"9950:9:26"},{"kind":"number","nativeSrc":"9961:2:26","nodeType":"YulLiteral","src":"9961:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9946:3:26","nodeType":"YulIdentifier","src":"9946:3:26"},"nativeSrc":"9946:18:26","nodeType":"YulFunctionCall","src":"9946:18:26"},{"kind":"number","nativeSrc":"9966:2:26","nodeType":"YulLiteral","src":"9966:2:26","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"9939:6:26","nodeType":"YulIdentifier","src":"9939:6:26"},"nativeSrc":"9939:30:26","nodeType":"YulFunctionCall","src":"9939:30:26"},"nativeSrc":"9939:30:26","nodeType":"YulExpressionStatement","src":"9939:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9989:9:26","nodeType":"YulIdentifier","src":"9989:9:26"},{"kind":"number","nativeSrc":"10000:2:26","nodeType":"YulLiteral","src":"10000:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9985:3:26","nodeType":"YulIdentifier","src":"9985:3:26"},"nativeSrc":"9985:18:26","nodeType":"YulFunctionCall","src":"9985:18:26"},{"hexValue":"43616c6c6572206973206e6f7420636c61696d20636f6e7472616374","kind":"string","nativeSrc":"10005:30:26","nodeType":"YulLiteral","src":"10005:30:26","type":"","value":"Caller is not claim contract"}],"functionName":{"name":"mstore","nativeSrc":"9978:6:26","nodeType":"YulIdentifier","src":"9978:6:26"},"nativeSrc":"9978:58:26","nodeType":"YulFunctionCall","src":"9978:58:26"},"nativeSrc":"9978:58:26","nodeType":"YulExpressionStatement","src":"9978:58:26"},{"nativeSrc":"10045:26:26","nodeType":"YulAssignment","src":"10045:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10057:9:26","nodeType":"YulIdentifier","src":"10057:9:26"},{"kind":"number","nativeSrc":"10068:2:26","nodeType":"YulLiteral","src":"10068:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10053:3:26","nodeType":"YulIdentifier","src":"10053:3:26"},"nativeSrc":"10053:18:26","nodeType":"YulFunctionCall","src":"10053:18:26"},"variableNames":[{"name":"tail","nativeSrc":"10045:4:26","nodeType":"YulIdentifier","src":"10045:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a2b06c872673ea36eb1847032004b38488ea190b880826ef29c3bf30179c5c9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9725:352:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9876:9:26","nodeType":"YulTypedName","src":"9876:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9890:4:26","nodeType":"YulTypedName","src":"9890:4:26","type":""}],"src":"9725:352:26"},{"body":{"nativeSrc":"10129:185:26","nodeType":"YulBlock","src":"10129:185:26","statements":[{"body":{"nativeSrc":"10168:111:26","nodeType":"YulBlock","src":"10168:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10189:1:26","nodeType":"YulLiteral","src":"10189:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10196:3:26","nodeType":"YulLiteral","src":"10196:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"10201:10:26","nodeType":"YulLiteral","src":"10201:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10192:3:26","nodeType":"YulIdentifier","src":"10192:3:26"},"nativeSrc":"10192:20:26","nodeType":"YulFunctionCall","src":"10192:20:26"}],"functionName":{"name":"mstore","nativeSrc":"10182:6:26","nodeType":"YulIdentifier","src":"10182:6:26"},"nativeSrc":"10182:31:26","nodeType":"YulFunctionCall","src":"10182:31:26"},"nativeSrc":"10182:31:26","nodeType":"YulExpressionStatement","src":"10182:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10233:1:26","nodeType":"YulLiteral","src":"10233:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"10236:4:26","nodeType":"YulLiteral","src":"10236:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10226:6:26","nodeType":"YulIdentifier","src":"10226:6:26"},"nativeSrc":"10226:15:26","nodeType":"YulFunctionCall","src":"10226:15:26"},"nativeSrc":"10226:15:26","nodeType":"YulExpressionStatement","src":"10226:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10261:1:26","nodeType":"YulLiteral","src":"10261:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10264:4:26","nodeType":"YulLiteral","src":"10264:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10254:6:26","nodeType":"YulIdentifier","src":"10254:6:26"},"nativeSrc":"10254:15:26","nodeType":"YulFunctionCall","src":"10254:15:26"},"nativeSrc":"10254:15:26","nodeType":"YulExpressionStatement","src":"10254:15:26"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"10145:5:26","nodeType":"YulIdentifier","src":"10145:5:26"},{"arguments":[{"kind":"number","nativeSrc":"10156:1:26","nodeType":"YulLiteral","src":"10156:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10152:3:26","nodeType":"YulIdentifier","src":"10152:3:26"},"nativeSrc":"10152:6:26","nodeType":"YulFunctionCall","src":"10152:6:26"}],"functionName":{"name":"eq","nativeSrc":"10142:2:26","nodeType":"YulIdentifier","src":"10142:2:26"},"nativeSrc":"10142:17:26","nodeType":"YulFunctionCall","src":"10142:17:26"},"nativeSrc":"10139:140:26","nodeType":"YulIf","src":"10139:140:26"},{"nativeSrc":"10288:20:26","nodeType":"YulAssignment","src":"10288:20:26","value":{"arguments":[{"name":"value","nativeSrc":"10299:5:26","nodeType":"YulIdentifier","src":"10299:5:26"},{"kind":"number","nativeSrc":"10306:1:26","nodeType":"YulLiteral","src":"10306:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10295:3:26","nodeType":"YulIdentifier","src":"10295:3:26"},"nativeSrc":"10295:13:26","nodeType":"YulFunctionCall","src":"10295:13:26"},"variableNames":[{"name":"ret","nativeSrc":"10288:3:26","nodeType":"YulIdentifier","src":"10288:3:26"}]}]},"name":"increment_t_uint256","nativeSrc":"10082:232:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10111:5:26","nodeType":"YulTypedName","src":"10111:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"10121:3:26","nodeType":"YulTypedName","src":"10121:3:26","type":""}],"src":"10082:232:26"},{"body":{"nativeSrc":"10506:309:26","nodeType":"YulBlock","src":"10506:309:26","statements":[{"nativeSrc":"10516:27:26","nodeType":"YulVariableDeclaration","src":"10516:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"10536:6:26","nodeType":"YulIdentifier","src":"10536:6:26"}],"functionName":{"name":"mload","nativeSrc":"10530:5:26","nodeType":"YulIdentifier","src":"10530:5:26"},"nativeSrc":"10530:13:26","nodeType":"YulFunctionCall","src":"10530:13:26"},"variables":[{"name":"length","nativeSrc":"10520:6:26","nodeType":"YulTypedName","src":"10520:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"10591:6:26","nodeType":"YulIdentifier","src":"10591:6:26"},{"kind":"number","nativeSrc":"10599:4:26","nodeType":"YulLiteral","src":"10599:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10587:3:26","nodeType":"YulIdentifier","src":"10587:3:26"},"nativeSrc":"10587:17:26","nodeType":"YulFunctionCall","src":"10587:17:26"},{"name":"pos","nativeSrc":"10606:3:26","nodeType":"YulIdentifier","src":"10606:3:26"},{"name":"length","nativeSrc":"10611:6:26","nodeType":"YulIdentifier","src":"10611:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10552:34:26","nodeType":"YulIdentifier","src":"10552:34:26"},"nativeSrc":"10552:66:26","nodeType":"YulFunctionCall","src":"10552:66:26"},"nativeSrc":"10552:66:26","nodeType":"YulExpressionStatement","src":"10552:66:26"},{"nativeSrc":"10627:29:26","nodeType":"YulVariableDeclaration","src":"10627:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"10644:3:26","nodeType":"YulIdentifier","src":"10644:3:26"},{"name":"length","nativeSrc":"10649:6:26","nodeType":"YulIdentifier","src":"10649:6:26"}],"functionName":{"name":"add","nativeSrc":"10640:3:26","nodeType":"YulIdentifier","src":"10640:3:26"},"nativeSrc":"10640:16:26","nodeType":"YulFunctionCall","src":"10640:16:26"},"variables":[{"name":"end_1","nativeSrc":"10631:5:26","nodeType":"YulTypedName","src":"10631:5:26","type":""}]},{"nativeSrc":"10665:29:26","nodeType":"YulVariableDeclaration","src":"10665:29:26","value":{"arguments":[{"name":"value1","nativeSrc":"10687:6:26","nodeType":"YulIdentifier","src":"10687:6:26"}],"functionName":{"name":"mload","nativeSrc":"10681:5:26","nodeType":"YulIdentifier","src":"10681:5:26"},"nativeSrc":"10681:13:26","nodeType":"YulFunctionCall","src":"10681:13:26"},"variables":[{"name":"length_1","nativeSrc":"10669:8:26","nodeType":"YulTypedName","src":"10669:8:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"10742:6:26","nodeType":"YulIdentifier","src":"10742:6:26"},{"kind":"number","nativeSrc":"10750:4:26","nodeType":"YulLiteral","src":"10750:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10738:3:26","nodeType":"YulIdentifier","src":"10738:3:26"},"nativeSrc":"10738:17:26","nodeType":"YulFunctionCall","src":"10738:17:26"},{"name":"end_1","nativeSrc":"10757:5:26","nodeType":"YulIdentifier","src":"10757:5:26"},{"name":"length_1","nativeSrc":"10764:8:26","nodeType":"YulIdentifier","src":"10764:8:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10703:34:26","nodeType":"YulIdentifier","src":"10703:34:26"},"nativeSrc":"10703:70:26","nodeType":"YulFunctionCall","src":"10703:70:26"},"nativeSrc":"10703:70:26","nodeType":"YulExpressionStatement","src":"10703:70:26"},{"nativeSrc":"10782:27:26","nodeType":"YulAssignment","src":"10782:27:26","value":{"arguments":[{"name":"end_1","nativeSrc":"10793:5:26","nodeType":"YulIdentifier","src":"10793:5:26"},{"name":"length_1","nativeSrc":"10800:8:26","nodeType":"YulIdentifier","src":"10800:8:26"}],"functionName":{"name":"add","nativeSrc":"10789:3:26","nodeType":"YulIdentifier","src":"10789:3:26"},"nativeSrc":"10789:20:26","nodeType":"YulFunctionCall","src":"10789:20:26"},"variableNames":[{"name":"end","nativeSrc":"10782:3:26","nodeType":"YulIdentifier","src":"10782:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"10319:496:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10474:3:26","nodeType":"YulTypedName","src":"10474:3:26","type":""},{"name":"value1","nativeSrc":"10479:6:26","nodeType":"YulTypedName","src":"10479:6:26","type":""},{"name":"value0","nativeSrc":"10487:6:26","nodeType":"YulTypedName","src":"10487:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10498:3:26","nodeType":"YulTypedName","src":"10498:3:26","type":""}],"src":"10319:496:26"},{"body":{"nativeSrc":"11023:282:26","nodeType":"YulBlock","src":"11023:282:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11040:9:26","nodeType":"YulIdentifier","src":"11040:9:26"},{"arguments":[{"name":"value0","nativeSrc":"11055:6:26","nodeType":"YulIdentifier","src":"11055:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11071:3:26","nodeType":"YulLiteral","src":"11071:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"11076:1:26","nodeType":"YulLiteral","src":"11076:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11067:3:26","nodeType":"YulIdentifier","src":"11067:3:26"},"nativeSrc":"11067:11:26","nodeType":"YulFunctionCall","src":"11067:11:26"},{"kind":"number","nativeSrc":"11080:1:26","nodeType":"YulLiteral","src":"11080:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11063:3:26","nodeType":"YulIdentifier","src":"11063:3:26"},"nativeSrc":"11063:19:26","nodeType":"YulFunctionCall","src":"11063:19:26"}],"functionName":{"name":"and","nativeSrc":"11051:3:26","nodeType":"YulIdentifier","src":"11051:3:26"},"nativeSrc":"11051:32:26","nodeType":"YulFunctionCall","src":"11051:32:26"}],"functionName":{"name":"mstore","nativeSrc":"11033:6:26","nodeType":"YulIdentifier","src":"11033:6:26"},"nativeSrc":"11033:51:26","nodeType":"YulFunctionCall","src":"11033:51:26"},"nativeSrc":"11033:51:26","nodeType":"YulExpressionStatement","src":"11033:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11104:9:26","nodeType":"YulIdentifier","src":"11104:9:26"},{"kind":"number","nativeSrc":"11115:2:26","nodeType":"YulLiteral","src":"11115:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11100:3:26","nodeType":"YulIdentifier","src":"11100:3:26"},"nativeSrc":"11100:18:26","nodeType":"YulFunctionCall","src":"11100:18:26"},{"arguments":[{"name":"value1","nativeSrc":"11124:6:26","nodeType":"YulIdentifier","src":"11124:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11140:3:26","nodeType":"YulLiteral","src":"11140:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"11145:1:26","nodeType":"YulLiteral","src":"11145:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11136:3:26","nodeType":"YulIdentifier","src":"11136:3:26"},"nativeSrc":"11136:11:26","nodeType":"YulFunctionCall","src":"11136:11:26"},{"kind":"number","nativeSrc":"11149:1:26","nodeType":"YulLiteral","src":"11149:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11132:3:26","nodeType":"YulIdentifier","src":"11132:3:26"},"nativeSrc":"11132:19:26","nodeType":"YulFunctionCall","src":"11132:19:26"}],"functionName":{"name":"and","nativeSrc":"11120:3:26","nodeType":"YulIdentifier","src":"11120:3:26"},"nativeSrc":"11120:32:26","nodeType":"YulFunctionCall","src":"11120:32:26"}],"functionName":{"name":"mstore","nativeSrc":"11093:6:26","nodeType":"YulIdentifier","src":"11093:6:26"},"nativeSrc":"11093:60:26","nodeType":"YulFunctionCall","src":"11093:60:26"},"nativeSrc":"11093:60:26","nodeType":"YulExpressionStatement","src":"11093:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11173:9:26","nodeType":"YulIdentifier","src":"11173:9:26"},{"kind":"number","nativeSrc":"11184:2:26","nodeType":"YulLiteral","src":"11184:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11169:3:26","nodeType":"YulIdentifier","src":"11169:3:26"},"nativeSrc":"11169:18:26","nodeType":"YulFunctionCall","src":"11169:18:26"},{"name":"value2","nativeSrc":"11189:6:26","nodeType":"YulIdentifier","src":"11189:6:26"}],"functionName":{"name":"mstore","nativeSrc":"11162:6:26","nodeType":"YulIdentifier","src":"11162:6:26"},"nativeSrc":"11162:34:26","nodeType":"YulFunctionCall","src":"11162:34:26"},"nativeSrc":"11162:34:26","nodeType":"YulExpressionStatement","src":"11162:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11216:9:26","nodeType":"YulIdentifier","src":"11216:9:26"},{"kind":"number","nativeSrc":"11227:2:26","nodeType":"YulLiteral","src":"11227:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11212:3:26","nodeType":"YulIdentifier","src":"11212:3:26"},"nativeSrc":"11212:18:26","nodeType":"YulFunctionCall","src":"11212:18:26"},{"kind":"number","nativeSrc":"11232:3:26","nodeType":"YulLiteral","src":"11232:3:26","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"11205:6:26","nodeType":"YulIdentifier","src":"11205:6:26"},"nativeSrc":"11205:31:26","nodeType":"YulFunctionCall","src":"11205:31:26"},"nativeSrc":"11205:31:26","nodeType":"YulExpressionStatement","src":"11205:31:26"},{"nativeSrc":"11245:54:26","nodeType":"YulAssignment","src":"11245:54:26","value":{"arguments":[{"name":"value3","nativeSrc":"11271:6:26","nodeType":"YulIdentifier","src":"11271:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"11283:9:26","nodeType":"YulIdentifier","src":"11283:9:26"},{"kind":"number","nativeSrc":"11294:3:26","nodeType":"YulLiteral","src":"11294:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11279:3:26","nodeType":"YulIdentifier","src":"11279:3:26"},"nativeSrc":"11279:19:26","nodeType":"YulFunctionCall","src":"11279:19:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"11253:17:26","nodeType":"YulIdentifier","src":"11253:17:26"},"nativeSrc":"11253:46:26","nodeType":"YulFunctionCall","src":"11253:46:26"},"variableNames":[{"name":"tail","nativeSrc":"11245:4:26","nodeType":"YulIdentifier","src":"11245:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10820:485:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10968:9:26","nodeType":"YulTypedName","src":"10968:9:26","type":""},{"name":"value3","nativeSrc":"10979:6:26","nodeType":"YulTypedName","src":"10979:6:26","type":""},{"name":"value2","nativeSrc":"10987:6:26","nodeType":"YulTypedName","src":"10987:6:26","type":""},{"name":"value1","nativeSrc":"10995:6:26","nodeType":"YulTypedName","src":"10995:6:26","type":""},{"name":"value0","nativeSrc":"11003:6:26","nodeType":"YulTypedName","src":"11003:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11014:4:26","nodeType":"YulTypedName","src":"11014:4:26","type":""}],"src":"10820:485:26"},{"body":{"nativeSrc":"11390:169:26","nodeType":"YulBlock","src":"11390:169:26","statements":[{"body":{"nativeSrc":"11436:16:26","nodeType":"YulBlock","src":"11436:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11445:1:26","nodeType":"YulLiteral","src":"11445:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11448:1:26","nodeType":"YulLiteral","src":"11448:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11438:6:26","nodeType":"YulIdentifier","src":"11438:6:26"},"nativeSrc":"11438:12:26","nodeType":"YulFunctionCall","src":"11438:12:26"},"nativeSrc":"11438:12:26","nodeType":"YulExpressionStatement","src":"11438:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11411:7:26","nodeType":"YulIdentifier","src":"11411:7:26"},{"name":"headStart","nativeSrc":"11420:9:26","nodeType":"YulIdentifier","src":"11420:9:26"}],"functionName":{"name":"sub","nativeSrc":"11407:3:26","nodeType":"YulIdentifier","src":"11407:3:26"},"nativeSrc":"11407:23:26","nodeType":"YulFunctionCall","src":"11407:23:26"},{"kind":"number","nativeSrc":"11432:2:26","nodeType":"YulLiteral","src":"11432:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11403:3:26","nodeType":"YulIdentifier","src":"11403:3:26"},"nativeSrc":"11403:32:26","nodeType":"YulFunctionCall","src":"11403:32:26"},"nativeSrc":"11400:52:26","nodeType":"YulIf","src":"11400:52:26"},{"nativeSrc":"11461:29:26","nodeType":"YulVariableDeclaration","src":"11461:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"11480:9:26","nodeType":"YulIdentifier","src":"11480:9:26"}],"functionName":{"name":"mload","nativeSrc":"11474:5:26","nodeType":"YulIdentifier","src":"11474:5:26"},"nativeSrc":"11474:16:26","nodeType":"YulFunctionCall","src":"11474:16:26"},"variables":[{"name":"value","nativeSrc":"11465:5:26","nodeType":"YulTypedName","src":"11465:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11523:5:26","nodeType":"YulIdentifier","src":"11523:5:26"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"11499:23:26","nodeType":"YulIdentifier","src":"11499:23:26"},"nativeSrc":"11499:30:26","nodeType":"YulFunctionCall","src":"11499:30:26"},"nativeSrc":"11499:30:26","nodeType":"YulExpressionStatement","src":"11499:30:26"},{"nativeSrc":"11538:15:26","nodeType":"YulAssignment","src":"11538:15:26","value":{"name":"value","nativeSrc":"11548:5:26","nodeType":"YulIdentifier","src":"11548:5:26"},"variableNames":[{"name":"value0","nativeSrc":"11538:6:26","nodeType":"YulIdentifier","src":"11538:6:26"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"11310:249:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11356:9:26","nodeType":"YulTypedName","src":"11356:9:26","type":""},{"name":"dataEnd","nativeSrc":"11367:7:26","nodeType":"YulTypedName","src":"11367:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11379:6:26","nodeType":"YulTypedName","src":"11379:6:26","type":""}],"src":"11310:249:26"},{"body":{"nativeSrc":"11596:95:26","nodeType":"YulBlock","src":"11596:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11613:1:26","nodeType":"YulLiteral","src":"11613:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11620:3:26","nodeType":"YulLiteral","src":"11620:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"11625:10:26","nodeType":"YulLiteral","src":"11625:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11616:3:26","nodeType":"YulIdentifier","src":"11616:3:26"},"nativeSrc":"11616:20:26","nodeType":"YulFunctionCall","src":"11616:20:26"}],"functionName":{"name":"mstore","nativeSrc":"11606:6:26","nodeType":"YulIdentifier","src":"11606:6:26"},"nativeSrc":"11606:31:26","nodeType":"YulFunctionCall","src":"11606:31:26"},"nativeSrc":"11606:31:26","nodeType":"YulExpressionStatement","src":"11606:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11653:1:26","nodeType":"YulLiteral","src":"11653:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"11656:4:26","nodeType":"YulLiteral","src":"11656:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"11646:6:26","nodeType":"YulIdentifier","src":"11646:6:26"},"nativeSrc":"11646:15:26","nodeType":"YulFunctionCall","src":"11646:15:26"},"nativeSrc":"11646:15:26","nodeType":"YulExpressionStatement","src":"11646:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11677:1:26","nodeType":"YulLiteral","src":"11677:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11680:4:26","nodeType":"YulLiteral","src":"11680:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11670:6:26","nodeType":"YulIdentifier","src":"11670:6:26"},"nativeSrc":"11670:15:26","nodeType":"YulFunctionCall","src":"11670:15:26"},"nativeSrc":"11670:15:26","nodeType":"YulExpressionStatement","src":"11670:15:26"}]},"name":"panic_error_0x12","nativeSrc":"11564:127:26","nodeType":"YulFunctionDefinition","src":"11564:127:26"},{"body":{"nativeSrc":"11825:145:26","nodeType":"YulBlock","src":"11825:145:26","statements":[{"nativeSrc":"11835:26:26","nodeType":"YulAssignment","src":"11835:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"11847:9:26","nodeType":"YulIdentifier","src":"11847:9:26"},{"kind":"number","nativeSrc":"11858:2:26","nodeType":"YulLiteral","src":"11858:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11843:3:26","nodeType":"YulIdentifier","src":"11843:3:26"},"nativeSrc":"11843:18:26","nodeType":"YulFunctionCall","src":"11843:18:26"},"variableNames":[{"name":"tail","nativeSrc":"11835:4:26","nodeType":"YulIdentifier","src":"11835:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11877:9:26","nodeType":"YulIdentifier","src":"11877:9:26"},{"arguments":[{"name":"value0","nativeSrc":"11892:6:26","nodeType":"YulIdentifier","src":"11892:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11908:3:26","nodeType":"YulLiteral","src":"11908:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"11913:1:26","nodeType":"YulLiteral","src":"11913:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11904:3:26","nodeType":"YulIdentifier","src":"11904:3:26"},"nativeSrc":"11904:11:26","nodeType":"YulFunctionCall","src":"11904:11:26"},{"kind":"number","nativeSrc":"11917:1:26","nodeType":"YulLiteral","src":"11917:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11900:3:26","nodeType":"YulIdentifier","src":"11900:3:26"},"nativeSrc":"11900:19:26","nodeType":"YulFunctionCall","src":"11900:19:26"}],"functionName":{"name":"and","nativeSrc":"11888:3:26","nodeType":"YulIdentifier","src":"11888:3:26"},"nativeSrc":"11888:32:26","nodeType":"YulFunctionCall","src":"11888:32:26"}],"functionName":{"name":"mstore","nativeSrc":"11870:6:26","nodeType":"YulIdentifier","src":"11870:6:26"},"nativeSrc":"11870:51:26","nodeType":"YulFunctionCall","src":"11870:51:26"},"nativeSrc":"11870:51:26","nodeType":"YulExpressionStatement","src":"11870:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11941:9:26","nodeType":"YulIdentifier","src":"11941:9:26"},{"kind":"number","nativeSrc":"11952:2:26","nodeType":"YulLiteral","src":"11952:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11937:3:26","nodeType":"YulIdentifier","src":"11937:3:26"},"nativeSrc":"11937:18:26","nodeType":"YulFunctionCall","src":"11937:18:26"},{"name":"value1","nativeSrc":"11957:6:26","nodeType":"YulIdentifier","src":"11957:6:26"}],"functionName":{"name":"mstore","nativeSrc":"11930:6:26","nodeType":"YulIdentifier","src":"11930:6:26"},"nativeSrc":"11930:34:26","nodeType":"YulFunctionCall","src":"11930:34:26"},"nativeSrc":"11930:34:26","nodeType":"YulExpressionStatement","src":"11930:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"11696:274:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11786:9:26","nodeType":"YulTypedName","src":"11786:9:26","type":""},{"name":"value1","nativeSrc":"11797:6:26","nodeType":"YulTypedName","src":"11797:6:26","type":""},{"name":"value0","nativeSrc":"11805:6:26","nodeType":"YulTypedName","src":"11805:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11816:4:26","nodeType":"YulTypedName","src":"11816:4:26","type":""}],"src":"11696:274:26"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_b088184b95d3a833e7091eeb0162c048f8937d56896dab2ddbe6be00c0339c45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Claim contract already set\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_0a2b06c872673ea36eb1847032004b38488ea190b880826ef29c3bf30179c5c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Caller is not claim contract\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a257806395d89b411161007157806395d89b4114610233578063a22cb4651461023b578063b88d4fde1461024e578063c87b56dd14610261578063e985e9c51461027457600080fd5b80636352211e146101d957806366345da4146101ec5780636a627842146101ff57806370a082311461022057600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780634a30d3eb146101b35780635c6d8da1146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046110d4565b610287565b60405190151581526020015b60405180910390f35b6101406102d9565b60405161012f9190611141565b61016061015b366004611154565b61037d565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611184565b610392565b005b61018b61019b3660046111ae565b6103a1565b61018b6101ae3660046111ae565b610431565b61018b6101c13660046111eb565b610451565b61018b6101d43660046112b6565b6104cc565b6101606101e7366004611154565b6105f7565b600154610160906001600160a01b031681565b61021261020d3660046111eb565b610602565b60405190815260200161012f565b61021261022e3660046111eb565b610688565b6101406106e4565b61018b61024936600461135b565b610723565b61018b61025c366004611397565b61072e565b61014061026f366004611154565b610746565b610123610282366004611413565b6107ae565b60006001600160e01b031982166380ac58cd60e01b14806102b857506001600160e01b03198216635b5e139f60e01b145b806102d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008051602061163783398151915280546060919081906102f990611446565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611446565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505091505090565b6000610388826107fb565b506102d382610833565b61039d82823361086d565b5050565b6001600160a01b0382166103d057604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103dd83833361087a565b9050836001600160a01b0316816001600160a01b03161461042b576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103c7565b50505050565b61044c8383836040518060200160405280600081525061072e565b505050565b6001546001600160a01b0316156104aa5760405162461bcd60e51b815260206004820152601a60248201527f436c61696d20636f6e747261637420616c72656164792073657400000000000060448201526064016103c7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d6610984565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156104fe5750825b905060008267ffffffffffffffff16600114801561051b5750303b155b905081158015610529575080155b156105475760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561057157845460ff60401b1916600160401b1785555b61057b89896109ad565b600061058788826114c7565b50600180546001600160a01b0319166001600160a01b03881617815560025583156105ec57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006102d3826107fb565b6001546000906001600160a01b0316331461065f5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f7420636c61696d20636f6e74726163740000000060448201526064016103c7565b60028054908190600061067183611586565b919050555061068083826109bf565b90505b919050565b60006000805160206116378339815191526001600160a01b0383166106c3576040516322718ad960e21b8152600060048201526024016103c7565b6001600160a01b039092166000908152600390920160205250604090205490565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793018054606091600080516020611637833981519152916102f990611446565b61039d3383836109d9565b6107398484846103a1565b61042b3385858585610a8a565b6060610751826107fb565b50600061075c610bb5565b9050600081511161077c57604051806020016040528060008152506107a7565b8061078684610c47565b6040516020016107979291906115ad565b6040516020818303038152906040525b9392505050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b60008061080783610cda565b90506001600160a01b03811661068057604051637e27328960e01b8152600481018490526024016103c7565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61044c8383836001610d14565b60006000805160206116378339815191528161089585610cda565b90506001600160a01b038416156108b1576108b1818587610e2a565b6001600160a01b038116156108f1576108ce600086600080610d14565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b03861615610922576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006102d3565b6109b5610e8e565b61039d8282610eb5565b61039d828260405180602001604052806000815250610ee6565b6000805160206116378339815191526001600160a01b038316610a1a57604051630b61174360e31b81526001600160a01b03841660048201526024016103c7565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610bae57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610acc9088908890879087906004016115dc565b6020604051808303816000875af1925050508015610b07575060408051601f3d908101601f19168201909252610b0491810190611619565b60015b610b70573d808015610b35576040519150601f19603f3d011682016040523d82523d6000602084013e610b3a565b606091505b508051600003610b6857604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bac57604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b505b5050505050565b606060008054610bc490611446565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf090611446565b8015610c3d5780601f10610c1257610100808354040283529160200191610c3d565b820191906000526020600020905b815481529060010190602001808311610c2057829003601f168201915b5050505050905090565b60606000610c5483610efe565b600101905060008167ffffffffffffffff811115610c7457610c74611206565b6040519080825280601f01601f191660200182016040528015610c9e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ca857509392505050565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b6000805160206116378339815191528180610d3757506001600160a01b03831615155b15610df9576000610d47856107fb565b90506001600160a01b03841615801590610d735750836001600160a01b0316816001600160a01b031614155b8015610d865750610d8481856107ae565b155b15610daf5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016103c7565b8215610df75784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e35838383610fd6565b61044c576001600160a01b038316610e6357604051637e27328960e01b8152600481018290526024016103c7565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103c7565b610e9661103c565b610eb357604051631afcd79f60e31b815260040160405180910390fd5b565b610ebd610e8e565b60008051602061163783398151915280610ed784826114c7565b506001810161042b83826114c7565b610ef08383611056565b61044c336000858585610a8a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f3d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f69576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8757662386f26fc10000830492506010015b6305f5e1008310610f9f576305f5e100830492506008015b6127108310610fb357612710830492506004015b60648310610fc5576064830492506002015b600a83106106805760010192915050565b60006001600160a01b038316158015906110345750826001600160a01b0316846001600160a01b03161480611010575061101084846107ae565b806110345750826001600160a01b031661102983610833565b6001600160a01b0316145b949350505050565b6000611046610984565b54600160401b900460ff16919050565b6001600160a01b03821661108057604051633250574960e11b8152600060048201526024016103c7565b600061108e8383600061087a565b90506001600160a01b0381161561044c576040516339e3563760e11b8152600060048201526024016103c7565b6001600160e01b0319811681146110d157600080fd5b50565b6000602082840312156110e657600080fd5b81356107a7816110bb565b60005b8381101561110c5781810151838201526020016110f4565b50506000910152565b6000815180845261112d8160208601602086016110f1565b601f01601f19169290920160200192915050565b6020815260006107a76020830184611115565b60006020828403121561116657600080fd5b5035919050565b80356001600160a01b038116811461068357600080fd5b6000806040838503121561119757600080fd5b6111a08361116d565b946020939093013593505050565b6000806000606084860312156111c357600080fd5b6111cc8461116d565b92506111da6020850161116d565b929592945050506040919091013590565b6000602082840312156111fd57600080fd5b6107a78261116d565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561123757611237611206565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561126657611266611206565b60405283815290508082840185101561127e57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112a757600080fd5b6107a78383356020850161121c565b600080600080608085870312156112cc57600080fd5b843567ffffffffffffffff8111156112e357600080fd5b6112ef87828801611296565b945050602085013567ffffffffffffffff81111561130c57600080fd5b61131887828801611296565b935050604085013567ffffffffffffffff81111561133557600080fd5b61134187828801611296565b9250506113506060860161116d565b905092959194509250565b6000806040838503121561136e57600080fd5b6113778361116d565b91506020830135801515811461138c57600080fd5b809150509250929050565b600080600080608085870312156113ad57600080fd5b6113b68561116d565b93506113c46020860161116d565b925060408501359150606085013567ffffffffffffffff8111156113e757600080fd5b8501601f810187136113f857600080fd5b6114078782356020840161121c565b91505092959194509250565b6000806040838503121561142657600080fd5b61142f8361116d565b915061143d6020840161116d565b90509250929050565b600181811c9082168061145a57607f821691505b60208210810361147a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561044c57806000526020600020601f840160051c810160208510156114a75750805b601f840160051c820191505b81811015610bae57600081556001016114b3565b815167ffffffffffffffff8111156114e1576114e1611206565b6114f5816114ef8454611446565b84611480565b6020601f82116001811461152957600083156115115750848201515b600019600385901b1c1916600184901b178455610bae565b600084815260208120601f198516915b828110156115595787850151825560209485019460019092019101611539565b50848210156115775786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000600182016115a657634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516115bf8184602088016110f1565b8351908301906115d38183602088016110f1565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061160f90830184611115565b9695505050505050565b60006020828403121561162b57600080fd5b81516107a7816110bb56fe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300a164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x66345DA4 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4A30D3EB EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5C6D8DA1 EQ PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1184 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x212 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH2 0x2D3 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 CALLER PUSH2 0x86D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DD DUP4 DUP4 CALLER PUSH2 0x87A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20636F6E747261637420616C726561647920736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 PUSH2 0x984 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x51B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x529 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x571 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x57B DUP10 DUP10 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 DUP9 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR DUP2 SSTORE PUSH1 0x2 SSTORE DUP4 ISZERO PUSH2 0x5EC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420636C61696D20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x671 DUP4 PUSH2 0x1586 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x680 DUP4 DUP3 PUSH2 0x9BF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079301 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x39D CALLER DUP4 DUP4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x739 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x42B CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x751 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x75C PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH2 0x786 DUP5 PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x797 SWAP3 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079305 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x807 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079304 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x895 DUP6 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B1 DUP2 DUP6 DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x8CE PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x922 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP9 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xACC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB07 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB04 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB70 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF0 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC54 DUP4 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC74 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCA8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 PUSH2 0xD37 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 PUSH2 0xD47 DUP6 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD73 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD86 JUMPI POP PUSH2 0xD84 DUP2 DUP6 PUSH2 0x7AE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xDF7 JUMPI DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE35 DUP4 DUP4 DUP4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x44C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0xE96 PUSH2 0x103C JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xEBD PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH2 0xED7 DUP5 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0x42B DUP4 DUP3 PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0xEF0 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x44C CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF3D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF69 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF87 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF9F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFB3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFC5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x680 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1010 JUMPI POP PUSH2 0x1010 DUP5 DUP5 PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1029 DUP4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 PUSH2 0x984 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108E DUP4 DUP4 PUSH1 0x0 PUSH2 0x87A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10F4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x112D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A0 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11CC DUP5 PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH2 0x11DA PUSH1 0x20 DUP6 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1237 PUSH2 0x1206 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x127E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x121C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EF DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1341 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1350 PUSH1 0x60 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1377 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B6 DUP6 PUSH2 0x116D JUMP JUMPDEST SWAP4 POP PUSH2 0x13C4 PUSH1 0x20 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1407 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x121C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142F DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH2 0x143D PUSH1 0x20 DUP5 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x145A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x147A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x44C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x14A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14B3 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x14F5 DUP2 PUSH2 0x14EF DUP5 SLOAD PUSH2 0x1446 JUMP JUMPDEST DUP5 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1511 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1559 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1539 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1577 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x15BF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15D3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x160F SWAP1 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP INVALID DUP1 0xBB 0x2B PUSH4 0x8CC20BC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079300A164736F6C634300081C000A00000000 ","sourceMap":"311:1619:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:311:2;;;;;;:::i;:::-;;:::i;:::-;;;565:14:26;;558:22;540:41;;528:2;513:18;2673:311:2;;;;;;;;3545:146;;;:::i;:::-;;;;;;;:::i;4791:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:26;;;1725:51;;1713:2;1698:18;4791:154:2;1579:203:26;4617:113:2;;;;;;:::i;:::-;;:::i;:::-;;5494:578;;;;;;:::i;:::-;;:::i;6138:132::-;;;;;;:::i;:::-;;:::i;1634:182:22:-;;;;;;:::i;:::-;;:::i;833:318::-;;;;;;:::i;:::-;;:::i;3365:118:2:-;;;;;;:::i;:::-;;:::i;406:28:22:-;;;;;-1:-1:-1;;;;;406:28:22;;;1293:196;;;;;;:::i;:::-;;:::i;:::-;;;4900:25:26;;;4888:2;4873:18;1293:196:22;4754:177:26;3043:265:2;;;;;;:::i;:::-;;:::i;3755:150::-;;;:::i;5012:144::-;;;;;;:::i;:::-;;:::i;6336:233::-;;;;;;:::i;:::-;;:::i;3971:255::-;;;;;;:::i;:::-;;:::i;5222:210::-;;;;;;:::i;:::-;;:::i;2673:311::-;2786:4;-1:-1:-1;;;;;;2821:40:2;;-1:-1:-1;;;2821:40:2;;:104;;-1:-1:-1;;;;;;;2877:48:2;;-1:-1:-1;;;2877:48:2;2821:104;:156;;;-1:-1:-1;;;;;;;;;;1134:40:4;;;2941:36:2;2802:175;2673:311;-1:-1:-1;;2673:311:2:o;3545:146::-;-1:-1:-1;;;;;;;;;;;3670:14:2;;3590:13;;2076:21;;;3670:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:146;:::o;4791:154::-;4858:7;4877:22;4891:7;4877:13;:22::i;:::-;;4917:21;4930:7;4917:12;:21::i;4617:113::-;4688:35;4697:2;4701:7;966:10:3;4688:8:2;:35::i;:::-;4617:113;;:::o;5494:578::-;-1:-1:-1;;;;;5588:16:2;;5584:87;;5627:33;;-1:-1:-1;;;5627:33:2;;5657:1;5627:33;;;1725:51:26;1698:18;;5627:33:2;;;;;;;;5584:87;5889:21;5913:34;5921:2;5925:7;966:10:3;5913:7:2;:34::i;:::-;5889:58;;5978:4;-1:-1:-1;;;;;5961:21:2;:13;-1:-1:-1;;;;;5961:21:2;;5957:109;;6005:50;;-1:-1:-1;;;6005:50:2;;-1:-1:-1;;;;;6876:32:26;;;6005:50:2;;;6858:51:26;6925:18;;;6918:34;;;6988:32;;6968:18;;;6961:60;6831:18;;6005:50:2;6656:371:26;5957:109:2;5574:498;5494:578;;;:::o;6138:132::-;6224:39;6241:4;6247:2;6251:7;6224:39;;;;;;;;;;;;:16;:39::i;:::-;6138:132;;;:::o;1634:182:22:-;1711:13;;-1:-1:-1;;;;;1711:13:22;:27;1703:66;;;;-1:-1:-1;;;1703:66:22;;7234:2:26;1703:66:22;;;7216:21:26;7273:2;7253:18;;;7246:30;7312:28;7292:18;;;7285:56;7358:18;;1703:66:22;7032:350:26;1703:66:22;1779:13;:30;;-1:-1:-1;;;;;;1779:30:22;-1:-1:-1;;;;;1779:30:22;;;;;;;;;;1634:182::o;833:318::-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1012:29:22::1;1026:5;1033:7;1012:13;:29::i;:::-;1051:13;:24;1067:8:::0;1051:13;:24:::1;:::i;:::-;-1:-1:-1::0;1085:13:22::1;:30:::0;;-1:-1:-1;;;;;;1085:30:22::1;-1:-1:-1::0;;;;;1085:30:22;::::1;;::::0;;1125:15:::1;:19:::0;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;9664:50:26;;5140:14:1;;9652:2:26;9637:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;833:318:22;;;;:::o;3365:118:2:-;3428:7;3454:22;3468:7;3454:13;:22::i;1293:196:22:-;531:13;;1347:7;;-1:-1:-1;;;;;531:13:22;517:10;:27;509:68;;;;-1:-1:-1;;;509:68:22;;9927:2:26;509:68:22;;;9909:21:26;9966:2;9946:18;;;9939:30;10005;9985:18;;;9978:58;10053:18;;509:68:22;9725:352:26;509:68:22;1384:15:::1;::::0;;;;;1366::::1;1409:17;1384:15:::0;1409:17:::1;:::i;:::-;;;;;;1436:22;1446:2;1450:7;1436:9;:22::i;:::-;1475:7:::0;-1:-1:-1;587:1:22::1;1293:196:::0;;;:::o;3043:265:2:-;3106:7;-1:-1:-1;;;;;;;;;;;;;;;;3184:19:2;;3180:87;;3226:30;;-1:-1:-1;;;3226:30:2;;3253:1;3226:30;;;1725:51:26;1698:18;;3226:30:2;1579:203:26;3180:87:2;-1:-1:-1;;;;;3283:18:2;;;;;;;:11;;;;:18;;-1:-1:-1;3283:18:2;;;;;3043:265::o;3755:150::-;3889:9;3882:16;;3802:13;;-1:-1:-1;;;;;;;;;;;2076:21:2;3882:16;;;:::i;5012:144::-;5097:52;966:10:3;5130:8:2;5140;5097:18;:52::i;6336:233::-;6449:31;6462:4;6468:2;6472:7;6449:12;:31::i;:::-;6490:72;966:10:3;6538:4:2;6544:2;6548:7;6557:4;6490:33;:72::i;3971:255::-;4035:13;4060:22;4074:7;4060:13;:22::i;:::-;;4093:21;4117:10;:8;:10::i;:::-;4093:34;;4168:1;4150:7;4144:21;:25;:75;;;;;;;;;;;;;;;;;4186:7;4195:18;:7;:16;:18::i;:::-;4172:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4144:75;4137:82;3971:255;-1:-1:-1;;;3971:255:2:o;5222:210::-;-1:-1:-1;;;;;5388:27:2;;;5310:4;5388:27;;;:20;:27;;;;;;;;:37;;;;;;;;;;;;;;;5222:210::o;17910:241::-;17973:7;17992:13;18008:17;18017:7;18008:8;:17::i;:::-;17992:33;-1:-1:-1;;;;;;18039:19:2;;18035:88;;18081:31;;-1:-1:-1;;;18081:31:2;;;;;4900:25:26;;;4873:18;;18081:31:2;4754:177:26;7372:184:2;7442:7;7523:26;;;:17;:26;;;;;;-1:-1:-1;;;;;7523:26:2;;7372:184::o;16076:120::-;16156:33;16165:2;16169:7;16178:4;16184;16156:8;:33::i;10384:856::-;10470:7;-1:-1:-1;;;;;;;;;;;10470:7:2;10559:17;10568:7;10559:8;:17::i;:::-;10544:32;-1:-1:-1;;;;;;10636:18:2;;;10632:86;;10670:37;10687:4;10693;10699:7;10670:16;:37::i;:::-;-1:-1:-1;;;;;10762:18:2;;;10758:258;;10878:48;10895:1;10899:7;10916:1;10920:5;10878:8;:48::i;:::-;-1:-1:-1;;;;;10969:17:2;;;;;;:11;;;:17;;;;;:22;;-1:-1:-1;;10969:22:2;;;10758:258;-1:-1:-1;;;;;11030:16:2;;;11026:109;;-1:-1:-1;;;;;11090:15:2;;;;;;:11;;;:15;;;;;:20;;11109:1;11090:20;;;11026:109;11145:18;;;;:9;;;:18;;;;;;:23;;-1:-1:-1;;;;;;11145:23:2;-1:-1:-1;;;;;11145:23:2;;;;;;;;;11184:27;;11145:18;;11184:27;;;;;;;11229:4;10384:856;-1:-1:-1;;;;;10384:856:2:o;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;2232:149:2;6929:20:1;:18;:20::i;:::-;2335:39:2::1;2359:5;2366:7;2335:23;:39::i;12240:100::-:0;12307:26;12317:2;12321:7;12307:26;;;;;;;;;;;;:9;:26::i;17306:369::-;-1:-1:-1;;;;;;;;;;;;;;;;17468:22:2;;17464:91;;17513:31;;-1:-1:-1;;;17513:31:2;;-1:-1:-1;;;;;1743:32:26;;17513:31:2;;;1725:51:26;1698:18;;17513:31:2;1579:203:26;17464:91:2;-1:-1:-1;;;;;17564:27:2;;;;;;;:20;;;:27;;;;;;;;:37;;;;;;;;;;;;;:48;;-1:-1:-1;;17564:48:2;;;;;;;;;;17627:41;;540::26;;;17627::2;;513:18:26;17627:41:2;;;;;;;17399:276;17306:369;;;:::o;993:924:13:-;-1:-1:-1;;;;;1173:14:13;;;:18;1169:742;;1211:67;;-1:-1:-1;;;1211:67:13;;-1:-1:-1;;;;;1211:36:13;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:13;;;;;;;;-1:-1:-1;;1211:67:13;;;;;;;;;;;;:::i;:::-;;;1207:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:323;;1672:39;;-1:-1:-1;;;1672:39:13;;-1:-1:-1;;;;;1743:32:26;;1672:39:13;;;1725:51:26;1698:18;;1672:39:13;1579:203:26;1564:323:13;1839:6;1833:13;1824:6;1820:2;1816:15;1809:38;1207:694;-1:-1:-1;;;;;;1325:51:13;;-1:-1:-1;;;1325:51:13;1321:182;;1445:39;;-1:-1:-1;;;1445:39:13;;-1:-1:-1;;;;;1743:32:26;;1445:39:13;;;1725:51:26;1698:18;;1445:39:13;1579:203:26;1321:182:13;1279:238;1207:694;993:924;;;;;:::o;1822:104:22:-;1874:13;1906;1899:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:104;:::o;1308:632:16:-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:16;-1:-1:-1;1465:41:16;-1:-1:-1;1595:28:16;;;1611:2;1595:28;1650:247;-1:-1:-1;;1681:5:16;-1:-1:-1;;;1780:2:16;1769:14;;1764:32;1681:5;1751:46;1841:2;1832:11;;;-1:-1:-1;1861:21:16;1650:247;1861:21;-1:-1:-1;1917:6:16;1308:632;-1:-1:-1;;;1308:632:16:o;7084:172:2:-;7150:7;7231:18;;;:9;:18;;;;;;-1:-1:-1;;;;;7231:18:2;;7084:172::o;16378:719::-;-1:-1:-1;;;;;;;;;;;16593:9:2;;:31;;-1:-1:-1;;;;;;16606:18:2;;;;16593:31;16589:460;;;16640:13;16656:22;16670:7;16656:13;:22::i;:::-;16640:38;-1:-1:-1;;;;;;16806:18:2;;;;;;:35;;;16837:4;-1:-1:-1;;;;;16828:13:2;:5;-1:-1:-1;;;;;16828:13:2;;;16806:35;:69;;;;;16846:29;16863:5;16870:4;16846:16;:29::i;:::-;16845:30;16806:69;16802:142;;;16902:27;;-1:-1:-1;;;16902:27:2;;-1:-1:-1;;;;;1743:32:26;;16902:27:2;;;1725:51:26;1698:18;;16902:27:2;1579:203:26;16802:142:2;16962:9;16958:81;;;17016:7;17012:2;-1:-1:-1;;;;;16996:28:2;17005:5;-1:-1:-1;;;;;16996:28:2;;;;;;;;;;;16958:81;16626:423;16589:460;17059:26;;;;:17;;:26;;-1:-1:-1;;17059:26:2;;;:31;;-1:-1:-1;;;;;;17059:31:2;-1:-1:-1;;;;;17059:31:2;;;;;;;;;;16378:719::o;8571:368::-;8683:38;8697:5;8704:7;8713;8683:13;:38::i;:::-;8678:255;;-1:-1:-1;;;;;8741:19:2;;8737:186;;8787:31;;-1:-1:-1;;;8787:31:2;;;;;4900:25:26;;;4873:18;;8787:31:2;4754:177:26;8737:186:2;8864:44;;-1:-1:-1;;;8864:44:2;;-1:-1:-1;;;;;11888:32:26;;8864:44:2;;;11870:51:26;11937:18;;;11930:34;;;11843:18;;8864:44:2;11696:274:26;7082:141:1;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;7144:73;7082:141::o;2387:219:2:-;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2076:21:2;2555:15:::1;2565:5:::0;2076:21;2555:15:::1;:::i;:::-;-1:-1:-1::0;2580:9:2::1;::::0;::::1;:19;2592:7:::0;2580:9;:19:::1;:::i;12561:207::-:0;12655:18;12661:2;12665:7;12655:5;:18::i;:::-;12683:78;966:10:3;12739:1:2;12743:2;12747:7;12756:4;12683:33;:78::i;29154:916:18:-;29207:7;;-1:-1:-1;;;29282:17:18;;29278:103;;-1:-1:-1;;;29319:17:18;;;-1:-1:-1;29364:2:18;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:18;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:18;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:18;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:18;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:18;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:18:o;7867:272:2:-;7970:4;-1:-1:-1;;;;;8005:21:2;;;;;;:127;;;8052:7;-1:-1:-1;;;;;8043:16:2;:5;-1:-1:-1;;;;;8043:16:2;;:52;;;;8063:32;8080:5;8087:7;8063:16;:32::i;:::-;8043:88;;;;8124:7;-1:-1:-1;;;;;8099:32:2;:21;8112:7;8099:12;:21::i;:::-;-1:-1:-1;;;;;8099:32:2;;8043:88;7986:146;7867:272;-1:-1:-1;;;;7867:272:2:o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;11562:327:2:-;-1:-1:-1;;;;;11629:16:2;;11625:87;;11668:33;;-1:-1:-1;;;11668:33:2;;11698:1;11668:33;;;1725:51:26;1698:18;;11668:33:2;1579:203:26;11625:87:2;11721:21;11745:32;11753:2;11757:7;11774:1;11745:7;:32::i;:::-;11721:56;-1:-1:-1;;;;;;11791:27:2;;;11787:96;;11841:31;;-1:-1:-1;;;11841:31:2;;11869:1;11841:31;;;1725:51:26;1698:18;;11841:31:2;1579:203:26;14:131;-1:-1:-1;;;;;;88:32:26;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:26;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:26;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:26:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:26;;1348:226;-1:-1:-1;1348:226:26:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:26;;1894:42;;1884:70;;1950:1;1947;1940:12;1965:300;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:26:o;2270:374::-;2347:6;2355;2363;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2455:29;2474:9;2455:29;:::i;:::-;2445:39;;2503:38;2537:2;2526:9;2522:18;2503:38;:::i;:::-;2270:374;;2493:48;;-1:-1:-1;;;2610:2:26;2595:18;;;;2582:32;;2270:374::o;2649:186::-;2708:6;2761:2;2749:9;2740:7;2736:23;2732:32;2729:52;;;2777:1;2774;2767:12;2729:52;2800:29;2819:9;2800:29;:::i;2840:127::-;2901:10;2896:3;2892:20;2889:1;2882:31;2932:4;2929:1;2922:15;2956:4;2953:1;2946:15;2972:716;3037:5;3069:1;3093:18;3085:6;3082:30;3079:56;;;3115:18;;:::i;:::-;-1:-1:-1;3270:2:26;3264:9;-1:-1:-1;;3183:2:26;3162:15;;3158:29;;3328:2;3316:15;3312:29;3300:42;;3393:22;;;3372:18;3357:34;;3354:62;3351:88;;;3419:18;;:::i;:::-;3455:2;3448:22;3503;;;3488:6;-1:-1:-1;3488:6:26;3540:16;;;3537:25;-1:-1:-1;3534:45:26;;;3575:1;3572;3565:12;3534:45;3625:6;3620:3;3613:4;3605:6;3601:17;3588:44;3680:1;3673:4;3664:6;3656;3652:19;3648:30;3641:41;;2972:716;;;;;:::o;3693:222::-;3736:5;3789:3;3782:4;3774:6;3770:17;3766:27;3756:55;;3807:1;3804;3797:12;3756:55;3829:80;3905:3;3896:6;3883:20;3876:4;3868:6;3864:17;3829:80;:::i;3920:829::-;4036:6;4044;4052;4060;4113:3;4101:9;4092:7;4088:23;4084:33;4081:53;;;4130:1;4127;4120:12;4081:53;4170:9;4157:23;4203:18;4195:6;4192:30;4189:50;;;4235:1;4232;4225:12;4189:50;4258;4300:7;4291:6;4280:9;4276:22;4258:50;:::i;:::-;4248:60;;;4361:2;4350:9;4346:18;4333:32;4390:18;4380:8;4377:32;4374:52;;;4422:1;4419;4412:12;4374:52;4445;4489:7;4478:8;4467:9;4463:24;4445:52;:::i;:::-;4435:62;;;4550:2;4539:9;4535:18;4522:32;4579:18;4569:8;4566:32;4563:52;;;4611:1;4608;4601:12;4563:52;4634;4678:7;4667:8;4656:9;4652:24;4634:52;:::i;:::-;4624:62;;;4705:38;4739:2;4728:9;4724:18;4705:38;:::i;:::-;4695:48;;3920:829;;;;;;;:::o;4936:347::-;5001:6;5009;5062:2;5050:9;5041:7;5037:23;5033:32;5030:52;;;5078:1;5075;5068:12;5030:52;5101:29;5120:9;5101:29;:::i;:::-;5091:39;;5180:2;5169:9;5165:18;5152:32;5227:5;5220:13;5213:21;5206:5;5203:32;5193:60;;5249:1;5246;5239:12;5193:60;5272:5;5262:15;;;4936:347;;;;;:::o;5288:713::-;5383:6;5391;5399;5407;5460:3;5448:9;5439:7;5435:23;5431:33;5428:53;;;5477:1;5474;5467:12;5428:53;5500:29;5519:9;5500:29;:::i;:::-;5490:39;;5548:38;5582:2;5571:9;5567:18;5548:38;:::i;:::-;5538:48;-1:-1:-1;5655:2:26;5640:18;;5627:32;;-1:-1:-1;5734:2:26;5719:18;;5706:32;5761:18;5750:30;;5747:50;;;5793:1;5790;5783:12;5747:50;5816:22;;5869:4;5861:13;;5857:27;-1:-1:-1;5847:55:26;;5898:1;5895;5888:12;5847:55;5921:74;5987:7;5982:2;5969:16;5964:2;5960;5956:11;5921:74;:::i;:::-;5911:84;;;5288:713;;;;;;;:::o;6006:260::-;6074:6;6082;6135:2;6123:9;6114:7;6110:23;6106:32;6103:52;;;6151:1;6148;6141:12;6103:52;6174:29;6193:9;6174:29;:::i;:::-;6164:39;;6222:38;6256:2;6245:9;6241:18;6222:38;:::i;:::-;6212:48;;6006:260;;;;;:::o;6271:380::-;6350:1;6346:12;;;;6393;;;6414:61;;6468:4;6460:6;6456:17;6446:27;;6414:61;6521:2;6513:6;6510:14;6490:18;6487:38;6484:161;;6567:10;6562:3;6558:20;6555:1;6548:31;6602:4;6599:1;6592:15;6630:4;6627:1;6620:15;6484:161;;6271:380;;;:::o;7513:518::-;7615:2;7610:3;7607:11;7604:421;;;7651:5;7648:1;7641:16;7695:4;7692:1;7682:18;7765:2;7753:10;7749:19;7746:1;7742:27;7736:4;7732:38;7801:4;7789:10;7786:20;7783:47;;;-1:-1:-1;7824:4:26;7783:47;7879:2;7874:3;7870:12;7867:1;7863:20;7857:4;7853:31;7843:41;;7934:81;7952:2;7945:5;7942:13;7934:81;;;8011:1;7997:16;;7978:1;7967:13;7934:81;;8207:1299;8333:3;8327:10;8360:18;8352:6;8349:30;8346:56;;;8382:18;;:::i;:::-;8411:97;8501:6;8461:38;8493:4;8487:11;8461:38;:::i;:::-;8455:4;8411:97;:::i;:::-;8557:4;8588:2;8577:14;;8605:1;8600:649;;;;9293:1;9310:6;9307:89;;;-1:-1:-1;9362:19:26;;;9356:26;9307:89;-1:-1:-1;;8164:1:26;8160:11;;;8156:24;8152:29;8142:40;8188:1;8184:11;;;8139:57;9409:81;;8570:930;;8600:649;7460:1;7453:14;;;7497:4;7484:18;;-1:-1:-1;;8636:20:26;;;8754:222;8768:7;8765:1;8762:14;8754:222;;;8850:19;;;8844:26;8829:42;;8957:4;8942:20;;;;8910:1;8898:14;;;;8784:12;8754:222;;;8758:3;9004:6;8995:7;8992:19;8989:201;;;9065:19;;;9059:26;-1:-1:-1;;9148:1:26;9144:14;;;9160:3;9140:24;9136:37;9132:42;9117:58;9102:74;;8989:201;-1:-1:-1;;;;9236:1:26;9220:14;;;9216:22;9203:36;;-1:-1:-1;8207:1299:26:o;10082:232::-;10121:3;10142:17;;;10139:140;;10201:10;10196:3;10192:20;10189:1;10182:31;10236:4;10233:1;10226:15;10264:4;10261:1;10254:15;10139:140;-1:-1:-1;10306:1:26;10295:13;;10082:232::o;10319:496::-;10498:3;10536:6;10530:13;10552:66;10611:6;10606:3;10599:4;10591:6;10587:17;10552:66;:::i;:::-;10681:13;;10640:16;;;;10703:70;10681:13;10640:16;10750:4;10738:17;;10703:70;:::i;:::-;10789:20;;10319:496;-1:-1:-1;;;;10319:496:26:o;10820:485::-;-1:-1:-1;;;;;11051:32:26;;;11033:51;;11120:32;;11115:2;11100:18;;11093:60;11184:2;11169:18;;11162:34;;;11232:3;11227:2;11212:18;;11205:31;;;-1:-1:-1;;11253:46:26;;11279:19;;11271:6;11253:46;:::i;:::-;11245:54;10820:485;-1:-1:-1;;;;;;10820:485:26:o;11310:249::-;11379:6;11432:2;11420:9;11411:7;11407:23;11403:32;11400:52;;;11448:1;11445;11438:12;11400:52;11480:9;11474:16;11499:30;11523:5;11499:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimContract()":"66345da4","getApproved(uint256)":"081812fc","initialize(string,string,string,address)":"5c6d8da1","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setClaimContract(address)":"4a30d3eb","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"claimContract_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimContract\",\"type\":\"address\"}],\"name\":\"setClaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"initialize(string,string,string,address)\":{\"params\":{\"baseURI_\":\"Base URI for all tokens\",\"claimContract_\":\"Address of the Claim contract\",\"name_\":\"Token name\",\"symbol_\":\"Token symbol\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"params\":{\"to\":\"Recipient address\"},\"returns\":{\"_0\":\"tokenId of the minted NFT\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimContract(address)\":{\"params\":{\"_claimContract\":\"Address of the Claim contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"CustomNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(string,string,string,address)\":{\"notice\":\"Initializes the NFT contract\"},\"mint(address)\":{\"notice\":\"Mint a new NFT to an address\"},\"setClaimContract(address)\":{\"notice\":\"Set the Claim contract address (for future use)\"}},\"notice\":\"ERC721 NFT with minting restricted to the Claim contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomNFT.sol\":\"CustomNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/CustomNFT.sol\":{\"keccak256\":\"0xece65efa74d4ee7bd653ed59e9cef18ed071193a7bf5e1d4f2c2724a7788c580\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1465c09f51325173288682463551704b5e92e9807a90d260ab3f195e6ff41928\",\"dweb:/ipfs/QmYUnkfsj4S87sNsQUvHaMur45n1sV4DBSVsrwBgYcMzDt\"]}},\"version\":1}"}},"contracts/Factory3.sol":{"Factory3":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"projectId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"whitelistContract","type":"address"},{"indexed":false,"internalType":"address","name":"nftContract","type":"address"},{"indexed":false,"internalType":"address","name":"claimContract","type":"address"}],"name":"ProjectDeployed","type":"event"},{"inputs":[{"internalType":"bytes32","name":"projectId","type":"bytes32"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"nftName","type":"string"},{"internalType":"string","name":"nftSymbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"uint256","name":"claimQuota","type":"uint256"}],"name":"createProject","outputs":[{"internalType":"address","name":"whitelistContract","type":"address"},{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"address","name":"claimContract","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"projects","outputs":[{"internalType":"address","name":"whitelist","type":"address"},{"internalType":"address","name":"nft","type":"address"},{"internalType":"address","name":"claim","type":"address"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b506135fc8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806302df1f611461003b578063b96ea12d1461007d575b600080fd5b61004e6100493660046107d7565b6100fa565b604080516001600160a01b03948516815292841660208401529216918101919091526060015b60405180910390f35b6100c561008b36600461089e565b6000602081905290815260409020805460018201546002909201546001600160a01b0391821692821691811690600160a01b900460ff1684565b60405161007494939291906001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b60008681526020819052604081206002015481908190600160a01b900460ff16156101605760405162461bcd60e51b815260206004820152601160248201527050726f6a6563742049442065786973747360781b60448201526064015b60405180910390fd5b6001600160a01b0388166101ae5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610157565b60008751116101f05760405162461bcd60e51b815260206004820152600e60248201526d456d707479204e4654206e616d6560901b6044820152606401610157565b60008651116102345760405162461bcd60e51b815260206004820152601060248201526f115b5c1d1e48139195081cde5b589bdb60821b6044820152606401610157565b600084116102785760405162461bcd60e51b8152602060048201526011602482015270051756f7461206d757374206265203e203607c1b6044820152606401610157565b60006040518060200161028a9061070b565b6020820181038252601f19601f82011660405250905060008151602083016000f090506001600160a01b0381166103035760405162461bcd60e51b815260206004820152601760248201527f57686974656c697374206465706c6f79206661696c65640000000000000000006044820152606401610157565b60405163189acdbd60e31b81523360048201526001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b50505050809450505060006040518060200161037390610718565b6020820181038252601f19601f82011660405250905060008151602083016000f090506001600160a01b0381166103e05760405162461bcd60e51b81526020600482015260116024820152701391950819195c1b1bde4819985a5b1959607a1b6044820152606401610157565b604051635c6d8da160e01b81526001600160a01b03821690635c6d8da190610413908c908c908c906000906004016108fd565b600060405180830381600087803b15801561042d57600080fd5b505af1158015610441573d6000803e3d6000fd5b50505050809350505060006040518060200161045c90610725565b6020820181038252601f19601f82011660405250905060008151602083016000f090506001600160a01b0381166104cb5760405162461bcd60e51b815260206004820152601360248201527210db185a5b4819195c1b1bde4819985a5b1959606a1b6044820152606401610157565b604051637b809f7b60e11b81523360048201526001600160a01b038b81166024830152858116604483015286811660648301526084820188905282169063f7013ef69060a401600060405180830381600087803b15801561052b57600080fd5b505af115801561053f573d6000803e3d6000fd5b5050604051634a30d3eb60e01b81526001600160a01b0380851660048301529395509286169350634a30d3eb9260240191506105789050565b600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050506040518060800160405280846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b03168152602001600115158152506000808b815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160146101000a81548160ff021916908315150217905550905050887f252140508571b30a9b5a0127624e23960717e21758b1750e83207023ff3c0eaa8484846040516106f7939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a296509650969350505050565b61066d8061095183390190565b61168280610fbe83390190565b610fb08061264083390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261075957600080fd5b813567ffffffffffffffff81111561077357610773610732565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156107a2576107a2610732565b6040528181528382016020018510156107ba57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156107f057600080fd5b8635955060208701356001600160a01b038116811461080e57600080fd5b9450604087013567ffffffffffffffff81111561082a57600080fd5b61083689828a01610748565b945050606087013567ffffffffffffffff81111561085357600080fd5b61085f89828a01610748565b935050608087013567ffffffffffffffff81111561087c57600080fd5b61088889828a01610748565b9699959850939692959460a09093013593505050565b6000602082840312156108b057600080fd5b5035919050565b6000815180845260005b818110156108dd576020818501810151868301820152016108c1565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061091060808301876108b7565b828103602084015261092281876108b7565b9050828103604084015261093681866108b7565b91505060018060a01b03831660608301529594505050505056fe6080604052348015600f57600080fd5b5061064e8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063c4d66de814610138578063e43252d71461014b578063f2fde38b1461015e57600080fd5b80632db6fa361461008d5780633af32abf146100a2578063715018a6146100e35780638ab1d681146100eb575b600080fd5b6100a061009b366004610584565b610171565b005b6100ce6100b03660046105fb565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a0610241565b6100a06100f93660046105fb565b610255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100da565b6100a06101463660046105fb565b6102a6565b6100a06101593660046105fb565b6103bf565b6100a061016c3660046105fb565b610413565b610179610456565b60005b8181101561023c57600160008085858581811061019b5761019b61062b565b90506020020160208101906101b091906105fb565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106101ea576101ea61062b565b90506020020160208101906101ff91906105fb565b6001600160a01b03167fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f60405160405180910390a260010161017c565b505050565b610249610456565b61025360006104b1565b565b61025d610456565b6001600160a01b038116600081815260208190526040808220805460ff19169055517f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb9190a250565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102ec5750825b905060008267ffffffffffffffff1660011480156103095750303b155b905081158015610317575080155b156103355760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561035f57845460ff60401b1916600160401b1785555b61036833610522565b61037186610413565b83156103b757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6103c7610456565b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f9190a250565b61041b610456565b6001600160a01b03811661044a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610453816104b1565b50565b336104887f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102535760405163118cdaa760e01b8152336004820152602401610441565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61052a610533565b6104538161057c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661025357604051631afcd79f60e31b815260040160405180910390fd5b61041b610533565b6000806020838503121561059757600080fd5b823567ffffffffffffffff8111156105ae57600080fd5b8301601f810185136105bf57600080fd5b803567ffffffffffffffff8111156105d657600080fd5b8560208260051b84010111156105eb57600080fd5b6020919091019590945092505050565b60006020828403121561060d57600080fd5b81356001600160a01b038116811461062457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300081c000a6080604052348015600f57600080fd5b506116638061001f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a257806395d89b411161007157806395d89b4114610233578063a22cb4651461023b578063b88d4fde1461024e578063c87b56dd14610261578063e985e9c51461027457600080fd5b80636352211e146101d957806366345da4146101ec5780636a627842146101ff57806370a082311461022057600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780634a30d3eb146101b35780635c6d8da1146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046110d4565b610287565b60405190151581526020015b60405180910390f35b6101406102d9565b60405161012f9190611141565b61016061015b366004611154565b61037d565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611184565b610392565b005b61018b61019b3660046111ae565b6103a1565b61018b6101ae3660046111ae565b610431565b61018b6101c13660046111eb565b610451565b61018b6101d43660046112b6565b6104cc565b6101606101e7366004611154565b6105f7565b600154610160906001600160a01b031681565b61021261020d3660046111eb565b610602565b60405190815260200161012f565b61021261022e3660046111eb565b610688565b6101406106e4565b61018b61024936600461135b565b610723565b61018b61025c366004611397565b61072e565b61014061026f366004611154565b610746565b610123610282366004611413565b6107ae565b60006001600160e01b031982166380ac58cd60e01b14806102b857506001600160e01b03198216635b5e139f60e01b145b806102d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008051602061163783398151915280546060919081906102f990611446565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611446565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505091505090565b6000610388826107fb565b506102d382610833565b61039d82823361086d565b5050565b6001600160a01b0382166103d057604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103dd83833361087a565b9050836001600160a01b0316816001600160a01b03161461042b576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103c7565b50505050565b61044c8383836040518060200160405280600081525061072e565b505050565b6001546001600160a01b0316156104aa5760405162461bcd60e51b815260206004820152601a60248201527f436c61696d20636f6e747261637420616c72656164792073657400000000000060448201526064016103c7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d6610984565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156104fe5750825b905060008267ffffffffffffffff16600114801561051b5750303b155b905081158015610529575080155b156105475760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561057157845460ff60401b1916600160401b1785555b61057b89896109ad565b600061058788826114c7565b50600180546001600160a01b0319166001600160a01b03881617815560025583156105ec57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006102d3826107fb565b6001546000906001600160a01b0316331461065f5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f7420636c61696d20636f6e74726163740000000060448201526064016103c7565b60028054908190600061067183611586565b919050555061068083826109bf565b90505b919050565b60006000805160206116378339815191526001600160a01b0383166106c3576040516322718ad960e21b8152600060048201526024016103c7565b6001600160a01b039092166000908152600390920160205250604090205490565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793018054606091600080516020611637833981519152916102f990611446565b61039d3383836109d9565b6107398484846103a1565b61042b3385858585610a8a565b6060610751826107fb565b50600061075c610bb5565b9050600081511161077c57604051806020016040528060008152506107a7565b8061078684610c47565b6040516020016107979291906115ad565b6040516020818303038152906040525b9392505050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b60008061080783610cda565b90506001600160a01b03811661068057604051637e27328960e01b8152600481018490526024016103c7565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61044c8383836001610d14565b60006000805160206116378339815191528161089585610cda565b90506001600160a01b038416156108b1576108b1818587610e2a565b6001600160a01b038116156108f1576108ce600086600080610d14565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b03861615610922576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006102d3565b6109b5610e8e565b61039d8282610eb5565b61039d828260405180602001604052806000815250610ee6565b6000805160206116378339815191526001600160a01b038316610a1a57604051630b61174360e31b81526001600160a01b03841660048201526024016103c7565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610bae57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610acc9088908890879087906004016115dc565b6020604051808303816000875af1925050508015610b07575060408051601f3d908101601f19168201909252610b0491810190611619565b60015b610b70573d808015610b35576040519150601f19603f3d011682016040523d82523d6000602084013e610b3a565b606091505b508051600003610b6857604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bac57604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b505b5050505050565b606060008054610bc490611446565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf090611446565b8015610c3d5780601f10610c1257610100808354040283529160200191610c3d565b820191906000526020600020905b815481529060010190602001808311610c2057829003601f168201915b5050505050905090565b60606000610c5483610efe565b600101905060008167ffffffffffffffff811115610c7457610c74611206565b6040519080825280601f01601f191660200182016040528015610c9e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ca857509392505050565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b6000805160206116378339815191528180610d3757506001600160a01b03831615155b15610df9576000610d47856107fb565b90506001600160a01b03841615801590610d735750836001600160a01b0316816001600160a01b031614155b8015610d865750610d8481856107ae565b155b15610daf5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016103c7565b8215610df75784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e35838383610fd6565b61044c576001600160a01b038316610e6357604051637e27328960e01b8152600481018290526024016103c7565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103c7565b610e9661103c565b610eb357604051631afcd79f60e31b815260040160405180910390fd5b565b610ebd610e8e565b60008051602061163783398151915280610ed784826114c7565b506001810161042b83826114c7565b610ef08383611056565b61044c336000858585610a8a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f3d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f69576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8757662386f26fc10000830492506010015b6305f5e1008310610f9f576305f5e100830492506008015b6127108310610fb357612710830492506004015b60648310610fc5576064830492506002015b600a83106106805760010192915050565b60006001600160a01b038316158015906110345750826001600160a01b0316846001600160a01b03161480611010575061101084846107ae565b806110345750826001600160a01b031661102983610833565b6001600160a01b0316145b949350505050565b6000611046610984565b54600160401b900460ff16919050565b6001600160a01b03821661108057604051633250574960e11b8152600060048201526024016103c7565b600061108e8383600061087a565b90506001600160a01b0381161561044c576040516339e3563760e11b8152600060048201526024016103c7565b6001600160e01b0319811681146110d157600080fd5b50565b6000602082840312156110e657600080fd5b81356107a7816110bb565b60005b8381101561110c5781810151838201526020016110f4565b50506000910152565b6000815180845261112d8160208601602086016110f1565b601f01601f19169290920160200192915050565b6020815260006107a76020830184611115565b60006020828403121561116657600080fd5b5035919050565b80356001600160a01b038116811461068357600080fd5b6000806040838503121561119757600080fd5b6111a08361116d565b946020939093013593505050565b6000806000606084860312156111c357600080fd5b6111cc8461116d565b92506111da6020850161116d565b929592945050506040919091013590565b6000602082840312156111fd57600080fd5b6107a78261116d565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561123757611237611206565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561126657611266611206565b60405283815290508082840185101561127e57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112a757600080fd5b6107a78383356020850161121c565b600080600080608085870312156112cc57600080fd5b843567ffffffffffffffff8111156112e357600080fd5b6112ef87828801611296565b945050602085013567ffffffffffffffff81111561130c57600080fd5b61131887828801611296565b935050604085013567ffffffffffffffff81111561133557600080fd5b61134187828801611296565b9250506113506060860161116d565b905092959194509250565b6000806040838503121561136e57600080fd5b6113778361116d565b91506020830135801515811461138c57600080fd5b809150509250929050565b600080600080608085870312156113ad57600080fd5b6113b68561116d565b93506113c46020860161116d565b925060408501359150606085013567ffffffffffffffff8111156113e757600080fd5b8501601f810187136113f857600080fd5b6114078782356020840161121c565b91505092959194509250565b6000806040838503121561142657600080fd5b61142f8361116d565b915061143d6020840161116d565b90509250929050565b600181811c9082168061145a57607f821691505b60208210810361147a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561044c57806000526020600020601f840160051c810160208510156114a75750805b601f840160051c820191505b81811015610bae57600081556001016114b3565b815167ffffffffffffffff8111156114e1576114e1611206565b6114f5816114ef8454611446565b84611480565b6020601f82116001811461152957600083156115115750848201515b600019600385901b1c1916600184901b178455610bae565b600084815260208120601f198516915b828110156115595787850151825560209485019460019092019101611539565b50848210156115775786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000600182016115a657634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516115bf8184602088016110f1565b8351908301906115d38183602088016110f1565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061160f90830184611115565b9695505050505050565b60006020828403121561162b57600080fd5b81516107a7816110bb56fe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300a164736f6c634300081c000a6080604052348015600f57600080fd5b50610f918061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806393e59dc11161008c578063cebe09c911610066578063cebe09c9146101c5578063f2fde38b146101dc578063f7013ef6146101ef578063fc0c546a1461020257600080fd5b806393e59dc11461016c578063b6b55f251461017f578063c884ef831461019257600080fd5b806341107b64146100d457806347ccca02146100e95780634e71d92d146101195780635312ea8e14610121578063715018a6146101345780638da5cb5b1461013c575b600080fd5b6100e76100e2366004610ce9565b610215565b005b6001546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e76102ab565b6100e761012f366004610ce9565b6104f4565b6100e7610612565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166100fc565b6002546100fc906001600160a01b031681565b6100e761018d366004610ce9565b610626565b6101b56101a0366004610d1e565b60046020526000908152604090205460ff1681565b6040519015158152602001610110565b6101ce60035481565b604051908152602001610110565b6100e76101ea366004610d1e565b610782565b6100e76101fd366004610d40565b6107c0565b6000546100fc906001600160a01b031681565b61021d610916565b600081116102665760405162461bcd60e51b8152602060048201526011602482015270051756f7461206d757374206265203e203607c1b60448201526064015b60405180910390fd5b600380549082905560408051828152602081018490527f19d6318afb32eea58ef4a200d5730cc282d7e0bd791a8ced865532f1ac4b9b0f910160405180910390a15050565b3360009081526004602052604090205460ff16156102fd5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b604482015260640161025d565b600254604051633af32abf60e01b81523360048201526001600160a01b0390911690633af32abf90602401602060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610d9c565b6103a75760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161025d565b6001546040516335313c2160e11b81523360048201526000916001600160a01b031690636a627842906024016020604051808303816000875af192505050801561040e575060408051601f3d908101601f1916820190925261040b91810190610dbe565b60015b61047c5761041a610dd7565b806308c379a003610470575061042e610e2e565b806104395750610472565b8060405160200161044a9190610ed7565b60408051601f198184030181529082905262461bcd60e51b825261025d91600401610f10565b505b3d6000803e3d6000fd5b9050336000818152600460205260408120805460ff19166001179055546003546104b3926001600160a01b03929092169190610971565b600354604080519182526020820183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a250565b6104fc610916565b600081116105415760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161025d565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190610dbe565b9050818110156105f75760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161025d565b60005461060e906001600160a01b03163384610971565b5050565b61061a610916565b6106246000610abc565b565b61062e610916565b600081116106735760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161025d565b60008054604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610dbe565b9050818110156107315760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015260640161025d565b600054610749906001600160a01b0316333085610b2d565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25050565b61078a610916565b6001600160a01b0381166107b457604051631e4fbdf760e01b81526000600482015260240161025d565b6107bd81610abc565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156108065750825b905060008267ffffffffffffffff1660011480156108235750303b155b905081158015610831575080155b1561084f5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561087957845460ff60401b1916600160401b1785555b6108828a610c87565b600080546001600160a01b03808c166001600160a01b031992831617909255600180548b841690831617905560028054928a16929091169190911790556003869055831561090a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b336109487f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146106245760405163118cdaa760e01b815233600482015260240161025d565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916109fd9190610f43565b6000604051808303816000865af19150503d8060008114610a3a576040519150601f19603f3d011682016040523d82523d6000602084013e610a3f565b606091505b5091509150818015610a69575080511580610a69575080806020019051810190610a699190610d9c565b610ab55760405162461bcd60e51b815260206004820152601d60248201527f536166655472616e736665723a205452414e534645525f4641494c4544000000604482015260640161025d565b5050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080856001600160a01b0316604051806060016040528060258152602001610f606025913980516020909101206040516001600160a01b038089166024830152871660448201526064810186905260840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610bbd9190610f43565b6000604051808303816000865af19150503d8060008114610bfa576040519150601f19603f3d011682016040523d82523d6000602084013e610bff565b606091505b5091509150818015610c29575080511580610c29575080806020019051810190610c299190610d9c565b610c7f5760405162461bcd60e51b815260206004820152602160248201527f536166655472616e7366657246726f6d3a205452414e534645525f4641494c456044820152601160fa1b606482015260840161025d565b505050505050565b610c8f610c98565b6107bd81610ce1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661062457604051631afcd79f60e31b815260040160405180910390fd5b61078a610c98565b600060208284031215610cfb57600080fd5b5035919050565b80356001600160a01b0381168114610d1957600080fd5b919050565b600060208284031215610d3057600080fd5b610d3982610d02565b9392505050565b600080600080600060a08688031215610d5857600080fd5b610d6186610d02565b9450610d6f60208701610d02565b9350610d7d60408701610d02565b9250610d8b60608701610d02565b949793965091946080013592915050565b600060208284031215610dae57600080fd5b81518015158114610d3957600080fd5b600060208284031215610dd057600080fd5b5051919050565b600060033d1115610df05760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610e2757634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610e3c5790565b6040513d600319016004823e80513d602482011167ffffffffffffffff82111715610e6657505090565b808201805167ffffffffffffffff811115610e82575050505090565b3d8401600319018282016020011115610e9c575050505090565b610eab60208285010185610df3565b509392505050565b60005b83811015610ece578181015183820152602001610eb6565b50506000910152565b70027232a1036b4b73a103330b4b632b21d1607d1b815260008251610f03816011850160208701610eb3565b9190910160110192915050565b6020815260008251806020840152610f2f816040850160208701610eb3565b601f01601f19169190910160400192915050565b60008251610f55818460208701610eb3565b919091019291505056fe7472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629a164736f6c634300081c000aa164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35FC DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DF1F61 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB96EA12D EQ PUSH2 0x7D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50726F6A65637420494420657869737473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP8 MLOAD GT PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x456D707479204E4654206E616D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115B5C1D1E48139195081CDE5B589BDB PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x51756F7461206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x28A SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206465706C6F79206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x189ACDBD PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC4D66DE8 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP5 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x373 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1391950819195C1B1BDE4819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C6D8DA1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x5C6D8DA1 SWAP1 PUSH2 0x413 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP4 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x45C SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10DB185A5B4819195C1B1BDE4819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B809F7B PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP9 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xF7013EF6 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x4A30D3EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP4 SWAP6 POP SWAP3 DUP7 AND SWAP4 POP PUSH4 0x4A30D3EB SWAP3 PUSH1 0x24 ADD SWAP2 POP PUSH2 0x578 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP9 PUSH32 0x252140508571B30A9B5A0127624E23960717E21758B1750E83207023FF3C0EAA DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 POP SWAP7 POP SWAP7 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x66D DUP1 PUSH2 0x951 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x1682 DUP1 PUSH2 0xFBE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0xFB0 DUP1 PUSH2 0x2640 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A2 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x836 DUP10 DUP3 DUP11 ADD PUSH2 0x748 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85F DUP10 DUP3 DUP11 ADD PUSH2 0x748 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP10 DUP3 DUP11 ADD PUSH2 0x748 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DD JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x8C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x910 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x8B7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x922 DUP2 DUP8 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x936 DUP2 DUP7 PUSH2 0x8B7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DB6FA36 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x241 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x17C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x249 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x253 PUSH1 0x0 PUSH2 0x4B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x25D PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x24A12366C02E13FE4A9E03D86A8952E85BB74A456C16E4A18B6D8295700B74BB SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x309 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x35F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x368 CALLER PUSH2 0x522 JUMP JUMPDEST PUSH2 0x371 DUP7 PUSH2 0x413 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3B7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x41B PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x4B1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x488 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x441 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x533 JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x57C JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41B PUSH2 0x533 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1663 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x66345DA4 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4A30D3EB EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5C6D8DA1 EQ PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1184 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x212 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH2 0x2D3 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 CALLER PUSH2 0x86D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DD DUP4 DUP4 CALLER PUSH2 0x87A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20636F6E747261637420616C726561647920736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 PUSH2 0x984 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x51B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x529 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x571 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x57B DUP10 DUP10 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 DUP9 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR DUP2 SSTORE PUSH1 0x2 SSTORE DUP4 ISZERO PUSH2 0x5EC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420636C61696D20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x671 DUP4 PUSH2 0x1586 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x680 DUP4 DUP3 PUSH2 0x9BF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079301 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x39D CALLER DUP4 DUP4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x739 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x42B CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x751 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x75C PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH2 0x786 DUP5 PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x797 SWAP3 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079305 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x807 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079304 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x895 DUP6 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B1 DUP2 DUP6 DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x8CE PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x922 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP9 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xACC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB07 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB04 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB70 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF0 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC54 DUP4 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC74 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCA8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 PUSH2 0xD37 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 PUSH2 0xD47 DUP6 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD73 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD86 JUMPI POP PUSH2 0xD84 DUP2 DUP6 PUSH2 0x7AE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xDF7 JUMPI DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE35 DUP4 DUP4 DUP4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x44C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0xE96 PUSH2 0x103C JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xEBD PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH2 0xED7 DUP5 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0x42B DUP4 DUP3 PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0xEF0 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x44C CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF3D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF69 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF87 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF9F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFB3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFC5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x680 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1010 JUMPI POP PUSH2 0x1010 DUP5 DUP5 PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1029 DUP4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 PUSH2 0x984 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108E DUP4 DUP4 PUSH1 0x0 PUSH2 0x87A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10F4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x112D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A0 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11CC DUP5 PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH2 0x11DA PUSH1 0x20 DUP6 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1237 PUSH2 0x1206 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x127E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x121C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EF DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1341 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1350 PUSH1 0x60 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1377 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B6 DUP6 PUSH2 0x116D JUMP JUMPDEST SWAP4 POP PUSH2 0x13C4 PUSH1 0x20 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1407 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x121C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142F DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH2 0x143D PUSH1 0x20 DUP5 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x145A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x147A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x44C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x14A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14B3 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x14F5 DUP2 PUSH2 0x14EF DUP5 SLOAD PUSH2 0x1446 JUMP JUMPDEST DUP5 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1511 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1559 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1539 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1577 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x15BF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15D3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x160F SWAP1 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP INVALID DUP1 0xBB 0x2B PUSH4 0x8CC20BC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079300A164736F6C634300081C000A60806040 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF91 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93E59DC1 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCEBE09C9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCEBE09C9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF7013EF6 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93E59DC1 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41107B64 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x612 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x1CE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x51756F7461206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x19D6318AFB32EEA58EF4A200D5730CC282D7E0BD791A8CED865532F1AC4B9B0F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3AF32ABF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3AF32ABF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6A627842 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x40E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x40B SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x47C JUMPI PUSH2 0x41A PUSH2 0xDD7 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x470 JUMPI POP PUSH2 0x42E PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH2 0x439 JUMPI POP PUSH2 0x472 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x25D SWAP2 PUSH1 0x4 ADD PUSH2 0xF10 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD PUSH1 0x3 SLOAD PUSH2 0x4B3 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x60E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x971 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x61A PUSH2 0x916 JUMP JUMPDEST PUSH2 0x624 PUSH1 0x0 PUSH2 0xABC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x62E PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x749 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x78A PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xABC JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x823 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x879 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x882 DUP11 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x90A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x948 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP8 AND SWAP2 PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xA69 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xA69 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA69 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E736665723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF60 PUSH1 0x25 SWAP2 CODECOPY DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x24 DUP4 ADD MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xC29 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E7366657246726F6D3A205452414E534645525F4641494C45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xCE1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD39 DUP3 PUSH2 0xD02 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP7 PUSH2 0xD02 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6F PUSH1 0x20 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7D PUSH1 0x40 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8B PUSH1 0x60 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0xE3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE66 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE82 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP3 DUP3 ADD PUSH1 0x20 ADD GT ISZERO PUSH2 0xE9C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xEAB PUSH1 0x20 DUP3 DUP6 ADD ADD DUP6 PUSH2 0xDF3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH17 0x27232A1036B4B73A103330B4B632B21D1 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0xF03 DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x11 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF2F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF55 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH21 0x72616E7366657246726F6D28616464726573732C61 PUSH5 0x6472657373 0x2C PUSH22 0x696E7432353629A164736F6C634300081C000AA16473 PUSH16 0x6C634300081C000A0000000000000000 ","sourceMap":"132:3031:23:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@createProject_8576":{"entryPoint":250,"id":8576,"parameterSlots":6,"returnSlots":3},"@projects_8354":{"entryPoint":null,"id":8354,"parameterSlots":0,"returnSlots":0},"abi_decode_string":{"entryPoint":1864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":2206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":2007,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_string":{"entryPoint":2231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":2301,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4e05df31fd91431268821f95a90fe655758d028b190dea5d874d8f56bc432cb3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51a33edf6c53ac64407bbad4a95f4ef56f6b4dea5e575a14b604e2b90ec7c7e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a07340163f27fcae402e0c887e21c4542a001efe5445ab4fc7f783edba82e756__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a22ec9ee55772ba2eb44070b1a6346c13cf75f7221c9dcc91f977ae929e1a583__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b4adfa440da5a380b98aecdd79231a3fc616ccb7aae303b6a6d83f6b5159d693__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c09682283f2f9884e0ca47f0e0660b6f79192bc0c7211f33fec920217ff4bcef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":1842,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7780:26","nodeType":"YulBlock","src":"0:7780:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"46:95:26","nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:26","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:26","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:26","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:26","nodeType":"YulIdentifier","src":"66:3:26"},"nativeSrc":"66:20:26","nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nativeSrc":"56:6:26","nodeType":"YulIdentifier","src":"56:6:26"},"nativeSrc":"56:31:26","nodeType":"YulFunctionCall","src":"56:31:26"},"nativeSrc":"56:31:26","nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:26","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:26","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:26","nodeType":"YulIdentifier","src":"96:6:26"},"nativeSrc":"96:15:26","nodeType":"YulFunctionCall","src":"96:15:26"},"nativeSrc":"96:15:26","nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:26","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:26","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:26","nodeType":"YulIdentifier","src":"120:6:26"},"nativeSrc":"120:15:26","nodeType":"YulFunctionCall","src":"120:15:26"},"nativeSrc":"120:15:26","nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nativeSrc":"14:127:26","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nativeSrc":"199:673:26","nodeType":"YulBlock","src":"199:673:26","statements":[{"body":{"nativeSrc":"248:16:26","nodeType":"YulBlock","src":"248:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"257:1:26","nodeType":"YulLiteral","src":"257:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"260:1:26","nodeType":"YulLiteral","src":"260:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"250:6:26","nodeType":"YulIdentifier","src":"250:6:26"},"nativeSrc":"250:12:26","nodeType":"YulFunctionCall","src":"250:12:26"},"nativeSrc":"250:12:26","nodeType":"YulExpressionStatement","src":"250:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"227:6:26","nodeType":"YulIdentifier","src":"227:6:26"},{"kind":"number","nativeSrc":"235:4:26","nodeType":"YulLiteral","src":"235:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"223:3:26","nodeType":"YulIdentifier","src":"223:3:26"},"nativeSrc":"223:17:26","nodeType":"YulFunctionCall","src":"223:17:26"},{"name":"end","nativeSrc":"242:3:26","nodeType":"YulIdentifier","src":"242:3:26"}],"functionName":{"name":"slt","nativeSrc":"219:3:26","nodeType":"YulIdentifier","src":"219:3:26"},"nativeSrc":"219:27:26","nodeType":"YulFunctionCall","src":"219:27:26"}],"functionName":{"name":"iszero","nativeSrc":"212:6:26","nodeType":"YulIdentifier","src":"212:6:26"},"nativeSrc":"212:35:26","nodeType":"YulFunctionCall","src":"212:35:26"},"nativeSrc":"209:55:26","nodeType":"YulIf","src":"209:55:26"},{"nativeSrc":"273:34:26","nodeType":"YulVariableDeclaration","src":"273:34:26","value":{"arguments":[{"name":"offset","nativeSrc":"300:6:26","nodeType":"YulIdentifier","src":"300:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"287:12:26","nodeType":"YulIdentifier","src":"287:12:26"},"nativeSrc":"287:20:26","nodeType":"YulFunctionCall","src":"287:20:26"},"variables":[{"name":"length","nativeSrc":"277:6:26","nodeType":"YulTypedName","src":"277:6:26","type":""}]},{"body":{"nativeSrc":"350:22:26","nodeType":"YulBlock","src":"350:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"352:16:26","nodeType":"YulIdentifier","src":"352:16:26"},"nativeSrc":"352:18:26","nodeType":"YulFunctionCall","src":"352:18:26"},"nativeSrc":"352:18:26","nodeType":"YulExpressionStatement","src":"352:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"322:6:26","nodeType":"YulIdentifier","src":"322:6:26"},{"kind":"number","nativeSrc":"330:18:26","nodeType":"YulLiteral","src":"330:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"319:2:26","nodeType":"YulIdentifier","src":"319:2:26"},"nativeSrc":"319:30:26","nodeType":"YulFunctionCall","src":"319:30:26"},"nativeSrc":"316:56:26","nodeType":"YulIf","src":"316:56:26"},{"nativeSrc":"381:23:26","nodeType":"YulVariableDeclaration","src":"381:23:26","value":{"arguments":[{"kind":"number","nativeSrc":"401:2:26","nodeType":"YulLiteral","src":"401:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"395:5:26","nodeType":"YulIdentifier","src":"395:5:26"},"nativeSrc":"395:9:26","nodeType":"YulFunctionCall","src":"395:9:26"},"variables":[{"name":"memPtr","nativeSrc":"385:6:26","nodeType":"YulTypedName","src":"385:6:26","type":""}]},{"nativeSrc":"413:85:26","nodeType":"YulVariableDeclaration","src":"413:85:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"435:6:26","nodeType":"YulIdentifier","src":"435:6:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"459:6:26","nodeType":"YulIdentifier","src":"459:6:26"},{"kind":"number","nativeSrc":"467:4:26","nodeType":"YulLiteral","src":"467:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"455:3:26","nodeType":"YulIdentifier","src":"455:3:26"},"nativeSrc":"455:17:26","nodeType":"YulFunctionCall","src":"455:17:26"},{"arguments":[{"kind":"number","nativeSrc":"478:2:26","nodeType":"YulLiteral","src":"478:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"474:3:26","nodeType":"YulIdentifier","src":"474:3:26"},"nativeSrc":"474:7:26","nodeType":"YulFunctionCall","src":"474:7:26"}],"functionName":{"name":"and","nativeSrc":"451:3:26","nodeType":"YulIdentifier","src":"451:3:26"},"nativeSrc":"451:31:26","nodeType":"YulFunctionCall","src":"451:31:26"},{"kind":"number","nativeSrc":"484:2:26","nodeType":"YulLiteral","src":"484:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"447:3:26","nodeType":"YulIdentifier","src":"447:3:26"},"nativeSrc":"447:40:26","nodeType":"YulFunctionCall","src":"447:40:26"},{"arguments":[{"kind":"number","nativeSrc":"493:2:26","nodeType":"YulLiteral","src":"493:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"489:3:26","nodeType":"YulIdentifier","src":"489:3:26"},"nativeSrc":"489:7:26","nodeType":"YulFunctionCall","src":"489:7:26"}],"functionName":{"name":"and","nativeSrc":"443:3:26","nodeType":"YulIdentifier","src":"443:3:26"},"nativeSrc":"443:54:26","nodeType":"YulFunctionCall","src":"443:54:26"}],"functionName":{"name":"add","nativeSrc":"431:3:26","nodeType":"YulIdentifier","src":"431:3:26"},"nativeSrc":"431:67:26","nodeType":"YulFunctionCall","src":"431:67:26"},"variables":[{"name":"newFreePtr","nativeSrc":"417:10:26","nodeType":"YulTypedName","src":"417:10:26","type":""}]},{"body":{"nativeSrc":"573:22:26","nodeType":"YulBlock","src":"573:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"575:16:26","nodeType":"YulIdentifier","src":"575:16:26"},"nativeSrc":"575:18:26","nodeType":"YulFunctionCall","src":"575:18:26"},"nativeSrc":"575:18:26","nodeType":"YulExpressionStatement","src":"575:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"516:10:26","nodeType":"YulIdentifier","src":"516:10:26"},{"kind":"number","nativeSrc":"528:18:26","nodeType":"YulLiteral","src":"528:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"513:2:26","nodeType":"YulIdentifier","src":"513:2:26"},"nativeSrc":"513:34:26","nodeType":"YulFunctionCall","src":"513:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"552:10:26","nodeType":"YulIdentifier","src":"552:10:26"},{"name":"memPtr","nativeSrc":"564:6:26","nodeType":"YulIdentifier","src":"564:6:26"}],"functionName":{"name":"lt","nativeSrc":"549:2:26","nodeType":"YulIdentifier","src":"549:2:26"},"nativeSrc":"549:22:26","nodeType":"YulFunctionCall","src":"549:22:26"}],"functionName":{"name":"or","nativeSrc":"510:2:26","nodeType":"YulIdentifier","src":"510:2:26"},"nativeSrc":"510:62:26","nodeType":"YulFunctionCall","src":"510:62:26"},"nativeSrc":"507:88:26","nodeType":"YulIf","src":"507:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"611:2:26","nodeType":"YulLiteral","src":"611:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"615:10:26","nodeType":"YulIdentifier","src":"615:10:26"}],"functionName":{"name":"mstore","nativeSrc":"604:6:26","nodeType":"YulIdentifier","src":"604:6:26"},"nativeSrc":"604:22:26","nodeType":"YulFunctionCall","src":"604:22:26"},"nativeSrc":"604:22:26","nodeType":"YulExpressionStatement","src":"604:22:26"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"642:6:26","nodeType":"YulIdentifier","src":"642:6:26"},{"name":"length","nativeSrc":"650:6:26","nodeType":"YulIdentifier","src":"650:6:26"}],"functionName":{"name":"mstore","nativeSrc":"635:6:26","nodeType":"YulIdentifier","src":"635:6:26"},"nativeSrc":"635:22:26","nodeType":"YulFunctionCall","src":"635:22:26"},"nativeSrc":"635:22:26","nodeType":"YulExpressionStatement","src":"635:22:26"},{"body":{"nativeSrc":"709:16:26","nodeType":"YulBlock","src":"709:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"718:1:26","nodeType":"YulLiteral","src":"718:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"721:1:26","nodeType":"YulLiteral","src":"721:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"711:6:26","nodeType":"YulIdentifier","src":"711:6:26"},"nativeSrc":"711:12:26","nodeType":"YulFunctionCall","src":"711:12:26"},"nativeSrc":"711:12:26","nodeType":"YulExpressionStatement","src":"711:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"680:6:26","nodeType":"YulIdentifier","src":"680:6:26"},{"name":"length","nativeSrc":"688:6:26","nodeType":"YulIdentifier","src":"688:6:26"}],"functionName":{"name":"add","nativeSrc":"676:3:26","nodeType":"YulIdentifier","src":"676:3:26"},"nativeSrc":"676:19:26","nodeType":"YulFunctionCall","src":"676:19:26"},{"kind":"number","nativeSrc":"697:4:26","nodeType":"YulLiteral","src":"697:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"672:3:26","nodeType":"YulIdentifier","src":"672:3:26"},"nativeSrc":"672:30:26","nodeType":"YulFunctionCall","src":"672:30:26"},{"name":"end","nativeSrc":"704:3:26","nodeType":"YulIdentifier","src":"704:3:26"}],"functionName":{"name":"gt","nativeSrc":"669:2:26","nodeType":"YulIdentifier","src":"669:2:26"},"nativeSrc":"669:39:26","nodeType":"YulFunctionCall","src":"669:39:26"},"nativeSrc":"666:59:26","nodeType":"YulIf","src":"666:59:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"751:6:26","nodeType":"YulIdentifier","src":"751:6:26"},{"kind":"number","nativeSrc":"759:4:26","nodeType":"YulLiteral","src":"759:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"747:3:26","nodeType":"YulIdentifier","src":"747:3:26"},"nativeSrc":"747:17:26","nodeType":"YulFunctionCall","src":"747:17:26"},{"arguments":[{"name":"offset","nativeSrc":"770:6:26","nodeType":"YulIdentifier","src":"770:6:26"},{"kind":"number","nativeSrc":"778:4:26","nodeType":"YulLiteral","src":"778:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"766:3:26","nodeType":"YulIdentifier","src":"766:3:26"},"nativeSrc":"766:17:26","nodeType":"YulFunctionCall","src":"766:17:26"},{"name":"length","nativeSrc":"785:6:26","nodeType":"YulIdentifier","src":"785:6:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"734:12:26","nodeType":"YulIdentifier","src":"734:12:26"},"nativeSrc":"734:58:26","nodeType":"YulFunctionCall","src":"734:58:26"},"nativeSrc":"734:58:26","nodeType":"YulExpressionStatement","src":"734:58:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"816:6:26","nodeType":"YulIdentifier","src":"816:6:26"},{"name":"length","nativeSrc":"824:6:26","nodeType":"YulIdentifier","src":"824:6:26"}],"functionName":{"name":"add","nativeSrc":"812:3:26","nodeType":"YulIdentifier","src":"812:3:26"},"nativeSrc":"812:19:26","nodeType":"YulFunctionCall","src":"812:19:26"},{"kind":"number","nativeSrc":"833:4:26","nodeType":"YulLiteral","src":"833:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"808:3:26","nodeType":"YulIdentifier","src":"808:3:26"},"nativeSrc":"808:30:26","nodeType":"YulFunctionCall","src":"808:30:26"},{"kind":"number","nativeSrc":"840:1:26","nodeType":"YulLiteral","src":"840:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"801:6:26","nodeType":"YulIdentifier","src":"801:6:26"},"nativeSrc":"801:41:26","nodeType":"YulFunctionCall","src":"801:41:26"},"nativeSrc":"801:41:26","nodeType":"YulExpressionStatement","src":"801:41:26"},{"nativeSrc":"851:15:26","nodeType":"YulAssignment","src":"851:15:26","value":{"name":"memPtr","nativeSrc":"860:6:26","nodeType":"YulIdentifier","src":"860:6:26"},"variableNames":[{"name":"array","nativeSrc":"851:5:26","nodeType":"YulIdentifier","src":"851:5:26"}]}]},"name":"abi_decode_string","nativeSrc":"146:726:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"173:6:26","nodeType":"YulTypedName","src":"173:6:26","type":""},{"name":"end","nativeSrc":"181:3:26","nodeType":"YulTypedName","src":"181:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"189:5:26","nodeType":"YulTypedName","src":"189:5:26","type":""}],"src":"146:726:26"},{"body":{"nativeSrc":"1062:988:26","nodeType":"YulBlock","src":"1062:988:26","statements":[{"body":{"nativeSrc":"1109:16:26","nodeType":"YulBlock","src":"1109:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1118:1:26","nodeType":"YulLiteral","src":"1118:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1121:1:26","nodeType":"YulLiteral","src":"1121:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1111:6:26","nodeType":"YulIdentifier","src":"1111:6:26"},"nativeSrc":"1111:12:26","nodeType":"YulFunctionCall","src":"1111:12:26"},"nativeSrc":"1111:12:26","nodeType":"YulExpressionStatement","src":"1111:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1083:7:26","nodeType":"YulIdentifier","src":"1083:7:26"},{"name":"headStart","nativeSrc":"1092:9:26","nodeType":"YulIdentifier","src":"1092:9:26"}],"functionName":{"name":"sub","nativeSrc":"1079:3:26","nodeType":"YulIdentifier","src":"1079:3:26"},"nativeSrc":"1079:23:26","nodeType":"YulFunctionCall","src":"1079:23:26"},{"kind":"number","nativeSrc":"1104:3:26","nodeType":"YulLiteral","src":"1104:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"1075:3:26","nodeType":"YulIdentifier","src":"1075:3:26"},"nativeSrc":"1075:33:26","nodeType":"YulFunctionCall","src":"1075:33:26"},"nativeSrc":"1072:53:26","nodeType":"YulIf","src":"1072:53:26"},{"nativeSrc":"1134:14:26","nodeType":"YulVariableDeclaration","src":"1134:14:26","value":{"kind":"number","nativeSrc":"1147:1:26","nodeType":"YulLiteral","src":"1147:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1138:5:26","nodeType":"YulTypedName","src":"1138:5:26","type":""}]},{"nativeSrc":"1157:32:26","nodeType":"YulAssignment","src":"1157:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1179:9:26","nodeType":"YulIdentifier","src":"1179:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"1166:12:26","nodeType":"YulIdentifier","src":"1166:12:26"},"nativeSrc":"1166:23:26","nodeType":"YulFunctionCall","src":"1166:23:26"},"variableNames":[{"name":"value","nativeSrc":"1157:5:26","nodeType":"YulIdentifier","src":"1157:5:26"}]},{"nativeSrc":"1198:15:26","nodeType":"YulAssignment","src":"1198:15:26","value":{"name":"value","nativeSrc":"1208:5:26","nodeType":"YulIdentifier","src":"1208:5:26"},"variableNames":[{"name":"value0","nativeSrc":"1198:6:26","nodeType":"YulIdentifier","src":"1198:6:26"}]},{"nativeSrc":"1222:47:26","nodeType":"YulVariableDeclaration","src":"1222:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1254:9:26","nodeType":"YulIdentifier","src":"1254:9:26"},{"kind":"number","nativeSrc":"1265:2:26","nodeType":"YulLiteral","src":"1265:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1250:3:26","nodeType":"YulIdentifier","src":"1250:3:26"},"nativeSrc":"1250:18:26","nodeType":"YulFunctionCall","src":"1250:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1237:12:26","nodeType":"YulIdentifier","src":"1237:12:26"},"nativeSrc":"1237:32:26","nodeType":"YulFunctionCall","src":"1237:32:26"},"variables":[{"name":"value_1","nativeSrc":"1226:7:26","nodeType":"YulTypedName","src":"1226:7:26","type":""}]},{"body":{"nativeSrc":"1336:16:26","nodeType":"YulBlock","src":"1336:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1345:1:26","nodeType":"YulLiteral","src":"1345:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1348:1:26","nodeType":"YulLiteral","src":"1348:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1338:6:26","nodeType":"YulIdentifier","src":"1338:6:26"},"nativeSrc":"1338:12:26","nodeType":"YulFunctionCall","src":"1338:12:26"},"nativeSrc":"1338:12:26","nodeType":"YulExpressionStatement","src":"1338:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"1291:7:26","nodeType":"YulIdentifier","src":"1291:7:26"},{"arguments":[{"name":"value_1","nativeSrc":"1304:7:26","nodeType":"YulIdentifier","src":"1304:7:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1321:3:26","nodeType":"YulLiteral","src":"1321:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"1326:1:26","nodeType":"YulLiteral","src":"1326:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1317:3:26","nodeType":"YulIdentifier","src":"1317:3:26"},"nativeSrc":"1317:11:26","nodeType":"YulFunctionCall","src":"1317:11:26"},{"kind":"number","nativeSrc":"1330:1:26","nodeType":"YulLiteral","src":"1330:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1313:3:26","nodeType":"YulIdentifier","src":"1313:3:26"},"nativeSrc":"1313:19:26","nodeType":"YulFunctionCall","src":"1313:19:26"}],"functionName":{"name":"and","nativeSrc":"1300:3:26","nodeType":"YulIdentifier","src":"1300:3:26"},"nativeSrc":"1300:33:26","nodeType":"YulFunctionCall","src":"1300:33:26"}],"functionName":{"name":"eq","nativeSrc":"1288:2:26","nodeType":"YulIdentifier","src":"1288:2:26"},"nativeSrc":"1288:46:26","nodeType":"YulFunctionCall","src":"1288:46:26"}],"functionName":{"name":"iszero","nativeSrc":"1281:6:26","nodeType":"YulIdentifier","src":"1281:6:26"},"nativeSrc":"1281:54:26","nodeType":"YulFunctionCall","src":"1281:54:26"},"nativeSrc":"1278:74:26","nodeType":"YulIf","src":"1278:74:26"},{"nativeSrc":"1361:17:26","nodeType":"YulAssignment","src":"1361:17:26","value":{"name":"value_1","nativeSrc":"1371:7:26","nodeType":"YulIdentifier","src":"1371:7:26"},"variableNames":[{"name":"value1","nativeSrc":"1361:6:26","nodeType":"YulIdentifier","src":"1361:6:26"}]},{"nativeSrc":"1387:46:26","nodeType":"YulVariableDeclaration","src":"1387:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1418:9:26","nodeType":"YulIdentifier","src":"1418:9:26"},{"kind":"number","nativeSrc":"1429:2:26","nodeType":"YulLiteral","src":"1429:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1414:3:26","nodeType":"YulIdentifier","src":"1414:3:26"},"nativeSrc":"1414:18:26","nodeType":"YulFunctionCall","src":"1414:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1401:12:26","nodeType":"YulIdentifier","src":"1401:12:26"},"nativeSrc":"1401:32:26","nodeType":"YulFunctionCall","src":"1401:32:26"},"variables":[{"name":"offset","nativeSrc":"1391:6:26","nodeType":"YulTypedName","src":"1391:6:26","type":""}]},{"body":{"nativeSrc":"1476:16:26","nodeType":"YulBlock","src":"1476:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1485:1:26","nodeType":"YulLiteral","src":"1485:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1488:1:26","nodeType":"YulLiteral","src":"1488:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1478:6:26","nodeType":"YulIdentifier","src":"1478:6:26"},"nativeSrc":"1478:12:26","nodeType":"YulFunctionCall","src":"1478:12:26"},"nativeSrc":"1478:12:26","nodeType":"YulExpressionStatement","src":"1478:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1448:6:26","nodeType":"YulIdentifier","src":"1448:6:26"},{"kind":"number","nativeSrc":"1456:18:26","nodeType":"YulLiteral","src":"1456:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1445:2:26","nodeType":"YulIdentifier","src":"1445:2:26"},"nativeSrc":"1445:30:26","nodeType":"YulFunctionCall","src":"1445:30:26"},"nativeSrc":"1442:50:26","nodeType":"YulIf","src":"1442:50:26"},{"nativeSrc":"1501:60:26","nodeType":"YulAssignment","src":"1501:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1533:9:26","nodeType":"YulIdentifier","src":"1533:9:26"},{"name":"offset","nativeSrc":"1544:6:26","nodeType":"YulIdentifier","src":"1544:6:26"}],"functionName":{"name":"add","nativeSrc":"1529:3:26","nodeType":"YulIdentifier","src":"1529:3:26"},"nativeSrc":"1529:22:26","nodeType":"YulFunctionCall","src":"1529:22:26"},{"name":"dataEnd","nativeSrc":"1553:7:26","nodeType":"YulIdentifier","src":"1553:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"1511:17:26","nodeType":"YulIdentifier","src":"1511:17:26"},"nativeSrc":"1511:50:26","nodeType":"YulFunctionCall","src":"1511:50:26"},"variableNames":[{"name":"value2","nativeSrc":"1501:6:26","nodeType":"YulIdentifier","src":"1501:6:26"}]},{"nativeSrc":"1570:48:26","nodeType":"YulVariableDeclaration","src":"1570:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1603:9:26","nodeType":"YulIdentifier","src":"1603:9:26"},{"kind":"number","nativeSrc":"1614:2:26","nodeType":"YulLiteral","src":"1614:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1599:3:26","nodeType":"YulIdentifier","src":"1599:3:26"},"nativeSrc":"1599:18:26","nodeType":"YulFunctionCall","src":"1599:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1586:12:26","nodeType":"YulIdentifier","src":"1586:12:26"},"nativeSrc":"1586:32:26","nodeType":"YulFunctionCall","src":"1586:32:26"},"variables":[{"name":"offset_1","nativeSrc":"1574:8:26","nodeType":"YulTypedName","src":"1574:8:26","type":""}]},{"body":{"nativeSrc":"1663:16:26","nodeType":"YulBlock","src":"1663:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1672:1:26","nodeType":"YulLiteral","src":"1672:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1675:1:26","nodeType":"YulLiteral","src":"1675:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1665:6:26","nodeType":"YulIdentifier","src":"1665:6:26"},"nativeSrc":"1665:12:26","nodeType":"YulFunctionCall","src":"1665:12:26"},"nativeSrc":"1665:12:26","nodeType":"YulExpressionStatement","src":"1665:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1633:8:26","nodeType":"YulIdentifier","src":"1633:8:26"},{"kind":"number","nativeSrc":"1643:18:26","nodeType":"YulLiteral","src":"1643:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1630:2:26","nodeType":"YulIdentifier","src":"1630:2:26"},"nativeSrc":"1630:32:26","nodeType":"YulFunctionCall","src":"1630:32:26"},"nativeSrc":"1627:52:26","nodeType":"YulIf","src":"1627:52:26"},{"nativeSrc":"1688:62:26","nodeType":"YulAssignment","src":"1688:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1720:9:26","nodeType":"YulIdentifier","src":"1720:9:26"},{"name":"offset_1","nativeSrc":"1731:8:26","nodeType":"YulIdentifier","src":"1731:8:26"}],"functionName":{"name":"add","nativeSrc":"1716:3:26","nodeType":"YulIdentifier","src":"1716:3:26"},"nativeSrc":"1716:24:26","nodeType":"YulFunctionCall","src":"1716:24:26"},{"name":"dataEnd","nativeSrc":"1742:7:26","nodeType":"YulIdentifier","src":"1742:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"1698:17:26","nodeType":"YulIdentifier","src":"1698:17:26"},"nativeSrc":"1698:52:26","nodeType":"YulFunctionCall","src":"1698:52:26"},"variableNames":[{"name":"value3","nativeSrc":"1688:6:26","nodeType":"YulIdentifier","src":"1688:6:26"}]},{"nativeSrc":"1759:49:26","nodeType":"YulVariableDeclaration","src":"1759:49:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1792:9:26","nodeType":"YulIdentifier","src":"1792:9:26"},{"kind":"number","nativeSrc":"1803:3:26","nodeType":"YulLiteral","src":"1803:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1788:3:26","nodeType":"YulIdentifier","src":"1788:3:26"},"nativeSrc":"1788:19:26","nodeType":"YulFunctionCall","src":"1788:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"1775:12:26","nodeType":"YulIdentifier","src":"1775:12:26"},"nativeSrc":"1775:33:26","nodeType":"YulFunctionCall","src":"1775:33:26"},"variables":[{"name":"offset_2","nativeSrc":"1763:8:26","nodeType":"YulTypedName","src":"1763:8:26","type":""}]},{"body":{"nativeSrc":"1853:16:26","nodeType":"YulBlock","src":"1853:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1862:1:26","nodeType":"YulLiteral","src":"1862:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1865:1:26","nodeType":"YulLiteral","src":"1865:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1855:6:26","nodeType":"YulIdentifier","src":"1855:6:26"},"nativeSrc":"1855:12:26","nodeType":"YulFunctionCall","src":"1855:12:26"},"nativeSrc":"1855:12:26","nodeType":"YulExpressionStatement","src":"1855:12:26"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"1823:8:26","nodeType":"YulIdentifier","src":"1823:8:26"},{"kind":"number","nativeSrc":"1833:18:26","nodeType":"YulLiteral","src":"1833:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1820:2:26","nodeType":"YulIdentifier","src":"1820:2:26"},"nativeSrc":"1820:32:26","nodeType":"YulFunctionCall","src":"1820:32:26"},"nativeSrc":"1817:52:26","nodeType":"YulIf","src":"1817:52:26"},{"nativeSrc":"1878:62:26","nodeType":"YulAssignment","src":"1878:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1910:9:26","nodeType":"YulIdentifier","src":"1910:9:26"},{"name":"offset_2","nativeSrc":"1921:8:26","nodeType":"YulIdentifier","src":"1921:8:26"}],"functionName":{"name":"add","nativeSrc":"1906:3:26","nodeType":"YulIdentifier","src":"1906:3:26"},"nativeSrc":"1906:24:26","nodeType":"YulFunctionCall","src":"1906:24:26"},{"name":"dataEnd","nativeSrc":"1932:7:26","nodeType":"YulIdentifier","src":"1932:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"1888:17:26","nodeType":"YulIdentifier","src":"1888:17:26"},"nativeSrc":"1888:52:26","nodeType":"YulFunctionCall","src":"1888:52:26"},"variableNames":[{"name":"value4","nativeSrc":"1878:6:26","nodeType":"YulIdentifier","src":"1878:6:26"}]},{"nativeSrc":"1949:16:26","nodeType":"YulVariableDeclaration","src":"1949:16:26","value":{"kind":"number","nativeSrc":"1964:1:26","nodeType":"YulLiteral","src":"1964:1:26","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"1953:7:26","nodeType":"YulTypedName","src":"1953:7:26","type":""}]},{"nativeSrc":"1974:44:26","nodeType":"YulAssignment","src":"1974:44:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2002:9:26","nodeType":"YulIdentifier","src":"2002:9:26"},{"kind":"number","nativeSrc":"2013:3:26","nodeType":"YulLiteral","src":"2013:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"1998:3:26","nodeType":"YulIdentifier","src":"1998:3:26"},"nativeSrc":"1998:19:26","nodeType":"YulFunctionCall","src":"1998:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"1985:12:26","nodeType":"YulIdentifier","src":"1985:12:26"},"nativeSrc":"1985:33:26","nodeType":"YulFunctionCall","src":"1985:33:26"},"variableNames":[{"name":"value_2","nativeSrc":"1974:7:26","nodeType":"YulIdentifier","src":"1974:7:26"}]},{"nativeSrc":"2027:17:26","nodeType":"YulAssignment","src":"2027:17:26","value":{"name":"value_2","nativeSrc":"2037:7:26","nodeType":"YulIdentifier","src":"2037:7:26"},"variableNames":[{"name":"value5","nativeSrc":"2027:6:26","nodeType":"YulIdentifier","src":"2027:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nativeSrc":"877:1173:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"988:9:26","nodeType":"YulTypedName","src":"988:9:26","type":""},{"name":"dataEnd","nativeSrc":"999:7:26","nodeType":"YulTypedName","src":"999:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1011:6:26","nodeType":"YulTypedName","src":"1011:6:26","type":""},{"name":"value1","nativeSrc":"1019:6:26","nodeType":"YulTypedName","src":"1019:6:26","type":""},{"name":"value2","nativeSrc":"1027:6:26","nodeType":"YulTypedName","src":"1027:6:26","type":""},{"name":"value3","nativeSrc":"1035:6:26","nodeType":"YulTypedName","src":"1035:6:26","type":""},{"name":"value4","nativeSrc":"1043:6:26","nodeType":"YulTypedName","src":"1043:6:26","type":""},{"name":"value5","nativeSrc":"1051:6:26","nodeType":"YulTypedName","src":"1051:6:26","type":""}],"src":"877:1173:26"},{"body":{"nativeSrc":"2212:240:26","nodeType":"YulBlock","src":"2212:240:26","statements":[{"nativeSrc":"2222:26:26","nodeType":"YulAssignment","src":"2222:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2234:9:26","nodeType":"YulIdentifier","src":"2234:9:26"},{"kind":"number","nativeSrc":"2245:2:26","nodeType":"YulLiteral","src":"2245:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2230:3:26","nodeType":"YulIdentifier","src":"2230:3:26"},"nativeSrc":"2230:18:26","nodeType":"YulFunctionCall","src":"2230:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2222:4:26","nodeType":"YulIdentifier","src":"2222:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2264:9:26","nodeType":"YulIdentifier","src":"2264:9:26"},{"arguments":[{"name":"value0","nativeSrc":"2279:6:26","nodeType":"YulIdentifier","src":"2279:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2295:3:26","nodeType":"YulLiteral","src":"2295:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2300:1:26","nodeType":"YulLiteral","src":"2300:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2291:3:26","nodeType":"YulIdentifier","src":"2291:3:26"},"nativeSrc":"2291:11:26","nodeType":"YulFunctionCall","src":"2291:11:26"},{"kind":"number","nativeSrc":"2304:1:26","nodeType":"YulLiteral","src":"2304:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2287:3:26","nodeType":"YulIdentifier","src":"2287:3:26"},"nativeSrc":"2287:19:26","nodeType":"YulFunctionCall","src":"2287:19:26"}],"functionName":{"name":"and","nativeSrc":"2275:3:26","nodeType":"YulIdentifier","src":"2275:3:26"},"nativeSrc":"2275:32:26","nodeType":"YulFunctionCall","src":"2275:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2257:6:26","nodeType":"YulIdentifier","src":"2257:6:26"},"nativeSrc":"2257:51:26","nodeType":"YulFunctionCall","src":"2257:51:26"},"nativeSrc":"2257:51:26","nodeType":"YulExpressionStatement","src":"2257:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2328:9:26","nodeType":"YulIdentifier","src":"2328:9:26"},{"kind":"number","nativeSrc":"2339:2:26","nodeType":"YulLiteral","src":"2339:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2324:3:26","nodeType":"YulIdentifier","src":"2324:3:26"},"nativeSrc":"2324:18:26","nodeType":"YulFunctionCall","src":"2324:18:26"},{"arguments":[{"name":"value1","nativeSrc":"2348:6:26","nodeType":"YulIdentifier","src":"2348:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2364:3:26","nodeType":"YulLiteral","src":"2364:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2369:1:26","nodeType":"YulLiteral","src":"2369:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2360:3:26","nodeType":"YulIdentifier","src":"2360:3:26"},"nativeSrc":"2360:11:26","nodeType":"YulFunctionCall","src":"2360:11:26"},{"kind":"number","nativeSrc":"2373:1:26","nodeType":"YulLiteral","src":"2373:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2356:3:26","nodeType":"YulIdentifier","src":"2356:3:26"},"nativeSrc":"2356:19:26","nodeType":"YulFunctionCall","src":"2356:19:26"}],"functionName":{"name":"and","nativeSrc":"2344:3:26","nodeType":"YulIdentifier","src":"2344:3:26"},"nativeSrc":"2344:32:26","nodeType":"YulFunctionCall","src":"2344:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2317:6:26","nodeType":"YulIdentifier","src":"2317:6:26"},"nativeSrc":"2317:60:26","nodeType":"YulFunctionCall","src":"2317:60:26"},"nativeSrc":"2317:60:26","nodeType":"YulExpressionStatement","src":"2317:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2397:9:26","nodeType":"YulIdentifier","src":"2397:9:26"},{"kind":"number","nativeSrc":"2408:2:26","nodeType":"YulLiteral","src":"2408:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2393:3:26","nodeType":"YulIdentifier","src":"2393:3:26"},"nativeSrc":"2393:18:26","nodeType":"YulFunctionCall","src":"2393:18:26"},{"arguments":[{"name":"value2","nativeSrc":"2417:6:26","nodeType":"YulIdentifier","src":"2417:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2433:3:26","nodeType":"YulLiteral","src":"2433:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2438:1:26","nodeType":"YulLiteral","src":"2438:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2429:3:26","nodeType":"YulIdentifier","src":"2429:3:26"},"nativeSrc":"2429:11:26","nodeType":"YulFunctionCall","src":"2429:11:26"},{"kind":"number","nativeSrc":"2442:1:26","nodeType":"YulLiteral","src":"2442:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2425:3:26","nodeType":"YulIdentifier","src":"2425:3:26"},"nativeSrc":"2425:19:26","nodeType":"YulFunctionCall","src":"2425:19:26"}],"functionName":{"name":"and","nativeSrc":"2413:3:26","nodeType":"YulIdentifier","src":"2413:3:26"},"nativeSrc":"2413:32:26","nodeType":"YulFunctionCall","src":"2413:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2386:6:26","nodeType":"YulIdentifier","src":"2386:6:26"},"nativeSrc":"2386:60:26","nodeType":"YulFunctionCall","src":"2386:60:26"},"nativeSrc":"2386:60:26","nodeType":"YulExpressionStatement","src":"2386:60:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nativeSrc":"2055:397:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2165:9:26","nodeType":"YulTypedName","src":"2165:9:26","type":""},{"name":"value2","nativeSrc":"2176:6:26","nodeType":"YulTypedName","src":"2176:6:26","type":""},{"name":"value1","nativeSrc":"2184:6:26","nodeType":"YulTypedName","src":"2184:6:26","type":""},{"name":"value0","nativeSrc":"2192:6:26","nodeType":"YulTypedName","src":"2192:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2203:4:26","nodeType":"YulTypedName","src":"2203:4:26","type":""}],"src":"2055:397:26"},{"body":{"nativeSrc":"2527:156:26","nodeType":"YulBlock","src":"2527:156:26","statements":[{"body":{"nativeSrc":"2573:16:26","nodeType":"YulBlock","src":"2573:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2582:1:26","nodeType":"YulLiteral","src":"2582:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2585:1:26","nodeType":"YulLiteral","src":"2585:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2575:6:26","nodeType":"YulIdentifier","src":"2575:6:26"},"nativeSrc":"2575:12:26","nodeType":"YulFunctionCall","src":"2575:12:26"},"nativeSrc":"2575:12:26","nodeType":"YulExpressionStatement","src":"2575:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2548:7:26","nodeType":"YulIdentifier","src":"2548:7:26"},{"name":"headStart","nativeSrc":"2557:9:26","nodeType":"YulIdentifier","src":"2557:9:26"}],"functionName":{"name":"sub","nativeSrc":"2544:3:26","nodeType":"YulIdentifier","src":"2544:3:26"},"nativeSrc":"2544:23:26","nodeType":"YulFunctionCall","src":"2544:23:26"},{"kind":"number","nativeSrc":"2569:2:26","nodeType":"YulLiteral","src":"2569:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2540:3:26","nodeType":"YulIdentifier","src":"2540:3:26"},"nativeSrc":"2540:32:26","nodeType":"YulFunctionCall","src":"2540:32:26"},"nativeSrc":"2537:52:26","nodeType":"YulIf","src":"2537:52:26"},{"nativeSrc":"2598:14:26","nodeType":"YulVariableDeclaration","src":"2598:14:26","value":{"kind":"number","nativeSrc":"2611:1:26","nodeType":"YulLiteral","src":"2611:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2602:5:26","nodeType":"YulTypedName","src":"2602:5:26","type":""}]},{"nativeSrc":"2621:32:26","nodeType":"YulAssignment","src":"2621:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2643:9:26","nodeType":"YulIdentifier","src":"2643:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"2630:12:26","nodeType":"YulIdentifier","src":"2630:12:26"},"nativeSrc":"2630:23:26","nodeType":"YulFunctionCall","src":"2630:23:26"},"variableNames":[{"name":"value","nativeSrc":"2621:5:26","nodeType":"YulIdentifier","src":"2621:5:26"}]},{"nativeSrc":"2662:15:26","nodeType":"YulAssignment","src":"2662:15:26","value":{"name":"value","nativeSrc":"2672:5:26","nodeType":"YulIdentifier","src":"2672:5:26"},"variableNames":[{"name":"value0","nativeSrc":"2662:6:26","nodeType":"YulIdentifier","src":"2662:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2457:226:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2493:9:26","nodeType":"YulTypedName","src":"2493:9:26","type":""},{"name":"dataEnd","nativeSrc":"2504:7:26","nodeType":"YulTypedName","src":"2504:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2516:6:26","nodeType":"YulTypedName","src":"2516:6:26","type":""}],"src":"2457:226:26"},{"body":{"nativeSrc":"2867:300:26","nodeType":"YulBlock","src":"2867:300:26","statements":[{"nativeSrc":"2877:27:26","nodeType":"YulAssignment","src":"2877:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2889:9:26","nodeType":"YulIdentifier","src":"2889:9:26"},{"kind":"number","nativeSrc":"2900:3:26","nodeType":"YulLiteral","src":"2900:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2885:3:26","nodeType":"YulIdentifier","src":"2885:3:26"},"nativeSrc":"2885:19:26","nodeType":"YulFunctionCall","src":"2885:19:26"},"variableNames":[{"name":"tail","nativeSrc":"2877:4:26","nodeType":"YulIdentifier","src":"2877:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2920:9:26","nodeType":"YulIdentifier","src":"2920:9:26"},{"arguments":[{"name":"value0","nativeSrc":"2935:6:26","nodeType":"YulIdentifier","src":"2935:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2951:3:26","nodeType":"YulLiteral","src":"2951:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2956:1:26","nodeType":"YulLiteral","src":"2956:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2947:3:26","nodeType":"YulIdentifier","src":"2947:3:26"},"nativeSrc":"2947:11:26","nodeType":"YulFunctionCall","src":"2947:11:26"},{"kind":"number","nativeSrc":"2960:1:26","nodeType":"YulLiteral","src":"2960:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2943:3:26","nodeType":"YulIdentifier","src":"2943:3:26"},"nativeSrc":"2943:19:26","nodeType":"YulFunctionCall","src":"2943:19:26"}],"functionName":{"name":"and","nativeSrc":"2931:3:26","nodeType":"YulIdentifier","src":"2931:3:26"},"nativeSrc":"2931:32:26","nodeType":"YulFunctionCall","src":"2931:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2913:6:26","nodeType":"YulIdentifier","src":"2913:6:26"},"nativeSrc":"2913:51:26","nodeType":"YulFunctionCall","src":"2913:51:26"},"nativeSrc":"2913:51:26","nodeType":"YulExpressionStatement","src":"2913:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2984:9:26","nodeType":"YulIdentifier","src":"2984:9:26"},{"kind":"number","nativeSrc":"2995:2:26","nodeType":"YulLiteral","src":"2995:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2980:3:26","nodeType":"YulIdentifier","src":"2980:3:26"},"nativeSrc":"2980:18:26","nodeType":"YulFunctionCall","src":"2980:18:26"},{"arguments":[{"name":"value1","nativeSrc":"3004:6:26","nodeType":"YulIdentifier","src":"3004:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3020:3:26","nodeType":"YulLiteral","src":"3020:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"3025:1:26","nodeType":"YulLiteral","src":"3025:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3016:3:26","nodeType":"YulIdentifier","src":"3016:3:26"},"nativeSrc":"3016:11:26","nodeType":"YulFunctionCall","src":"3016:11:26"},{"kind":"number","nativeSrc":"3029:1:26","nodeType":"YulLiteral","src":"3029:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3012:3:26","nodeType":"YulIdentifier","src":"3012:3:26"},"nativeSrc":"3012:19:26","nodeType":"YulFunctionCall","src":"3012:19:26"}],"functionName":{"name":"and","nativeSrc":"3000:3:26","nodeType":"YulIdentifier","src":"3000:3:26"},"nativeSrc":"3000:32:26","nodeType":"YulFunctionCall","src":"3000:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2973:6:26","nodeType":"YulIdentifier","src":"2973:6:26"},"nativeSrc":"2973:60:26","nodeType":"YulFunctionCall","src":"2973:60:26"},"nativeSrc":"2973:60:26","nodeType":"YulExpressionStatement","src":"2973:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3053:9:26","nodeType":"YulIdentifier","src":"3053:9:26"},{"kind":"number","nativeSrc":"3064:2:26","nodeType":"YulLiteral","src":"3064:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3049:3:26","nodeType":"YulIdentifier","src":"3049:3:26"},"nativeSrc":"3049:18:26","nodeType":"YulFunctionCall","src":"3049:18:26"},{"arguments":[{"name":"value2","nativeSrc":"3073:6:26","nodeType":"YulIdentifier","src":"3073:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3089:3:26","nodeType":"YulLiteral","src":"3089:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"3094:1:26","nodeType":"YulLiteral","src":"3094:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3085:3:26","nodeType":"YulIdentifier","src":"3085:3:26"},"nativeSrc":"3085:11:26","nodeType":"YulFunctionCall","src":"3085:11:26"},{"kind":"number","nativeSrc":"3098:1:26","nodeType":"YulLiteral","src":"3098:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3081:3:26","nodeType":"YulIdentifier","src":"3081:3:26"},"nativeSrc":"3081:19:26","nodeType":"YulFunctionCall","src":"3081:19:26"}],"functionName":{"name":"and","nativeSrc":"3069:3:26","nodeType":"YulIdentifier","src":"3069:3:26"},"nativeSrc":"3069:32:26","nodeType":"YulFunctionCall","src":"3069:32:26"}],"functionName":{"name":"mstore","nativeSrc":"3042:6:26","nodeType":"YulIdentifier","src":"3042:6:26"},"nativeSrc":"3042:60:26","nodeType":"YulFunctionCall","src":"3042:60:26"},"nativeSrc":"3042:60:26","nodeType":"YulExpressionStatement","src":"3042:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3122:9:26","nodeType":"YulIdentifier","src":"3122:9:26"},{"kind":"number","nativeSrc":"3133:2:26","nodeType":"YulLiteral","src":"3133:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3118:3:26","nodeType":"YulIdentifier","src":"3118:3:26"},"nativeSrc":"3118:18:26","nodeType":"YulFunctionCall","src":"3118:18:26"},{"arguments":[{"arguments":[{"name":"value3","nativeSrc":"3152:6:26","nodeType":"YulIdentifier","src":"3152:6:26"}],"functionName":{"name":"iszero","nativeSrc":"3145:6:26","nodeType":"YulIdentifier","src":"3145:6:26"},"nativeSrc":"3145:14:26","nodeType":"YulFunctionCall","src":"3145:14:26"}],"functionName":{"name":"iszero","nativeSrc":"3138:6:26","nodeType":"YulIdentifier","src":"3138:6:26"},"nativeSrc":"3138:22:26","nodeType":"YulFunctionCall","src":"3138:22:26"}],"functionName":{"name":"mstore","nativeSrc":"3111:6:26","nodeType":"YulIdentifier","src":"3111:6:26"},"nativeSrc":"3111:50:26","nodeType":"YulFunctionCall","src":"3111:50:26"},"nativeSrc":"3111:50:26","nodeType":"YulExpressionStatement","src":"3111:50:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed","nativeSrc":"2688:479:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2812:9:26","nodeType":"YulTypedName","src":"2812:9:26","type":""},{"name":"value3","nativeSrc":"2823:6:26","nodeType":"YulTypedName","src":"2823:6:26","type":""},{"name":"value2","nativeSrc":"2831:6:26","nodeType":"YulTypedName","src":"2831:6:26","type":""},{"name":"value1","nativeSrc":"2839:6:26","nodeType":"YulTypedName","src":"2839:6:26","type":""},{"name":"value0","nativeSrc":"2847:6:26","nodeType":"YulTypedName","src":"2847:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2858:4:26","nodeType":"YulTypedName","src":"2858:4:26","type":""}],"src":"2688:479:26"},{"body":{"nativeSrc":"3346:167:26","nodeType":"YulBlock","src":"3346:167:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3363:9:26","nodeType":"YulIdentifier","src":"3363:9:26"},{"kind":"number","nativeSrc":"3374:2:26","nodeType":"YulLiteral","src":"3374:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3356:6:26","nodeType":"YulIdentifier","src":"3356:6:26"},"nativeSrc":"3356:21:26","nodeType":"YulFunctionCall","src":"3356:21:26"},"nativeSrc":"3356:21:26","nodeType":"YulExpressionStatement","src":"3356:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3397:9:26","nodeType":"YulIdentifier","src":"3397:9:26"},{"kind":"number","nativeSrc":"3408:2:26","nodeType":"YulLiteral","src":"3408:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3393:3:26","nodeType":"YulIdentifier","src":"3393:3:26"},"nativeSrc":"3393:18:26","nodeType":"YulFunctionCall","src":"3393:18:26"},{"kind":"number","nativeSrc":"3413:2:26","nodeType":"YulLiteral","src":"3413:2:26","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"3386:6:26","nodeType":"YulIdentifier","src":"3386:6:26"},"nativeSrc":"3386:30:26","nodeType":"YulFunctionCall","src":"3386:30:26"},"nativeSrc":"3386:30:26","nodeType":"YulExpressionStatement","src":"3386:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3436:9:26","nodeType":"YulIdentifier","src":"3436:9:26"},{"kind":"number","nativeSrc":"3447:2:26","nodeType":"YulLiteral","src":"3447:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3432:3:26","nodeType":"YulIdentifier","src":"3432:3:26"},"nativeSrc":"3432:18:26","nodeType":"YulFunctionCall","src":"3432:18:26"},{"hexValue":"50726f6a65637420494420657869737473","kind":"string","nativeSrc":"3452:19:26","nodeType":"YulLiteral","src":"3452:19:26","type":"","value":"Project ID exists"}],"functionName":{"name":"mstore","nativeSrc":"3425:6:26","nodeType":"YulIdentifier","src":"3425:6:26"},"nativeSrc":"3425:47:26","nodeType":"YulFunctionCall","src":"3425:47:26"},"nativeSrc":"3425:47:26","nodeType":"YulExpressionStatement","src":"3425:47:26"},{"nativeSrc":"3481:26:26","nodeType":"YulAssignment","src":"3481:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3493:9:26","nodeType":"YulIdentifier","src":"3493:9:26"},{"kind":"number","nativeSrc":"3504:2:26","nodeType":"YulLiteral","src":"3504:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3489:3:26","nodeType":"YulIdentifier","src":"3489:3:26"},"nativeSrc":"3489:18:26","nodeType":"YulFunctionCall","src":"3489:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3481:4:26","nodeType":"YulIdentifier","src":"3481:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c09682283f2f9884e0ca47f0e0660b6f79192bc0c7211f33fec920217ff4bcef__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3172:341:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3323:9:26","nodeType":"YulTypedName","src":"3323:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3337:4:26","nodeType":"YulTypedName","src":"3337:4:26","type":""}],"src":"3172:341:26"},{"body":{"nativeSrc":"3692:171:26","nodeType":"YulBlock","src":"3692:171:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3709:9:26","nodeType":"YulIdentifier","src":"3709:9:26"},{"kind":"number","nativeSrc":"3720:2:26","nodeType":"YulLiteral","src":"3720:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3702:6:26","nodeType":"YulIdentifier","src":"3702:6:26"},"nativeSrc":"3702:21:26","nodeType":"YulFunctionCall","src":"3702:21:26"},"nativeSrc":"3702:21:26","nodeType":"YulExpressionStatement","src":"3702:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3743:9:26","nodeType":"YulIdentifier","src":"3743:9:26"},{"kind":"number","nativeSrc":"3754:2:26","nodeType":"YulLiteral","src":"3754:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3739:3:26","nodeType":"YulIdentifier","src":"3739:3:26"},"nativeSrc":"3739:18:26","nodeType":"YulFunctionCall","src":"3739:18:26"},{"kind":"number","nativeSrc":"3759:2:26","nodeType":"YulLiteral","src":"3759:2:26","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"3732:6:26","nodeType":"YulIdentifier","src":"3732:6:26"},"nativeSrc":"3732:30:26","nodeType":"YulFunctionCall","src":"3732:30:26"},"nativeSrc":"3732:30:26","nodeType":"YulExpressionStatement","src":"3732:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3782:9:26","nodeType":"YulIdentifier","src":"3782:9:26"},{"kind":"number","nativeSrc":"3793:2:26","nodeType":"YulLiteral","src":"3793:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3778:3:26","nodeType":"YulIdentifier","src":"3778:3:26"},"nativeSrc":"3778:18:26","nodeType":"YulFunctionCall","src":"3778:18:26"},{"hexValue":"496e76616c696420746f6b656e2061646472657373","kind":"string","nativeSrc":"3798:23:26","nodeType":"YulLiteral","src":"3798:23:26","type":"","value":"Invalid token address"}],"functionName":{"name":"mstore","nativeSrc":"3771:6:26","nodeType":"YulIdentifier","src":"3771:6:26"},"nativeSrc":"3771:51:26","nodeType":"YulFunctionCall","src":"3771:51:26"},"nativeSrc":"3771:51:26","nodeType":"YulExpressionStatement","src":"3771:51:26"},{"nativeSrc":"3831:26:26","nodeType":"YulAssignment","src":"3831:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3843:9:26","nodeType":"YulIdentifier","src":"3843:9:26"},{"kind":"number","nativeSrc":"3854:2:26","nodeType":"YulLiteral","src":"3854:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3839:3:26","nodeType":"YulIdentifier","src":"3839:3:26"},"nativeSrc":"3839:18:26","nodeType":"YulFunctionCall","src":"3839:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3831:4:26","nodeType":"YulIdentifier","src":"3831:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3518:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3669:9:26","nodeType":"YulTypedName","src":"3669:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3683:4:26","nodeType":"YulTypedName","src":"3683:4:26","type":""}],"src":"3518:345:26"},{"body":{"nativeSrc":"4042:164:26","nodeType":"YulBlock","src":"4042:164:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4059:9:26","nodeType":"YulIdentifier","src":"4059:9:26"},{"kind":"number","nativeSrc":"4070:2:26","nodeType":"YulLiteral","src":"4070:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4052:6:26","nodeType":"YulIdentifier","src":"4052:6:26"},"nativeSrc":"4052:21:26","nodeType":"YulFunctionCall","src":"4052:21:26"},"nativeSrc":"4052:21:26","nodeType":"YulExpressionStatement","src":"4052:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4093:9:26","nodeType":"YulIdentifier","src":"4093:9:26"},{"kind":"number","nativeSrc":"4104:2:26","nodeType":"YulLiteral","src":"4104:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4089:3:26","nodeType":"YulIdentifier","src":"4089:3:26"},"nativeSrc":"4089:18:26","nodeType":"YulFunctionCall","src":"4089:18:26"},{"kind":"number","nativeSrc":"4109:2:26","nodeType":"YulLiteral","src":"4109:2:26","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"4082:6:26","nodeType":"YulIdentifier","src":"4082:6:26"},"nativeSrc":"4082:30:26","nodeType":"YulFunctionCall","src":"4082:30:26"},"nativeSrc":"4082:30:26","nodeType":"YulExpressionStatement","src":"4082:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4132:9:26","nodeType":"YulIdentifier","src":"4132:9:26"},{"kind":"number","nativeSrc":"4143:2:26","nodeType":"YulLiteral","src":"4143:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4128:3:26","nodeType":"YulIdentifier","src":"4128:3:26"},"nativeSrc":"4128:18:26","nodeType":"YulFunctionCall","src":"4128:18:26"},{"hexValue":"456d707479204e4654206e616d65","kind":"string","nativeSrc":"4148:16:26","nodeType":"YulLiteral","src":"4148:16:26","type":"","value":"Empty NFT name"}],"functionName":{"name":"mstore","nativeSrc":"4121:6:26","nodeType":"YulIdentifier","src":"4121:6:26"},"nativeSrc":"4121:44:26","nodeType":"YulFunctionCall","src":"4121:44:26"},"nativeSrc":"4121:44:26","nodeType":"YulExpressionStatement","src":"4121:44:26"},{"nativeSrc":"4174:26:26","nodeType":"YulAssignment","src":"4174:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4186:9:26","nodeType":"YulIdentifier","src":"4186:9:26"},{"kind":"number","nativeSrc":"4197:2:26","nodeType":"YulLiteral","src":"4197:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4182:3:26","nodeType":"YulIdentifier","src":"4182:3:26"},"nativeSrc":"4182:18:26","nodeType":"YulFunctionCall","src":"4182:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4174:4:26","nodeType":"YulIdentifier","src":"4174:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4adfa440da5a380b98aecdd79231a3fc616ccb7aae303b6a6d83f6b5159d693__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3868:338:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4019:9:26","nodeType":"YulTypedName","src":"4019:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4033:4:26","nodeType":"YulTypedName","src":"4033:4:26","type":""}],"src":"3868:338:26"},{"body":{"nativeSrc":"4385:166:26","nodeType":"YulBlock","src":"4385:166:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4402:9:26","nodeType":"YulIdentifier","src":"4402:9:26"},{"kind":"number","nativeSrc":"4413:2:26","nodeType":"YulLiteral","src":"4413:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4395:6:26","nodeType":"YulIdentifier","src":"4395:6:26"},"nativeSrc":"4395:21:26","nodeType":"YulFunctionCall","src":"4395:21:26"},"nativeSrc":"4395:21:26","nodeType":"YulExpressionStatement","src":"4395:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4436:9:26","nodeType":"YulIdentifier","src":"4436:9:26"},{"kind":"number","nativeSrc":"4447:2:26","nodeType":"YulLiteral","src":"4447:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4432:3:26","nodeType":"YulIdentifier","src":"4432:3:26"},"nativeSrc":"4432:18:26","nodeType":"YulFunctionCall","src":"4432:18:26"},{"kind":"number","nativeSrc":"4452:2:26","nodeType":"YulLiteral","src":"4452:2:26","type":"","value":"16"}],"functionName":{"name":"mstore","nativeSrc":"4425:6:26","nodeType":"YulIdentifier","src":"4425:6:26"},"nativeSrc":"4425:30:26","nodeType":"YulFunctionCall","src":"4425:30:26"},"nativeSrc":"4425:30:26","nodeType":"YulExpressionStatement","src":"4425:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4475:9:26","nodeType":"YulIdentifier","src":"4475:9:26"},{"kind":"number","nativeSrc":"4486:2:26","nodeType":"YulLiteral","src":"4486:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4471:3:26","nodeType":"YulIdentifier","src":"4471:3:26"},"nativeSrc":"4471:18:26","nodeType":"YulFunctionCall","src":"4471:18:26"},{"hexValue":"456d707479204e46542073796d626f6c","kind":"string","nativeSrc":"4491:18:26","nodeType":"YulLiteral","src":"4491:18:26","type":"","value":"Empty NFT symbol"}],"functionName":{"name":"mstore","nativeSrc":"4464:6:26","nodeType":"YulIdentifier","src":"4464:6:26"},"nativeSrc":"4464:46:26","nodeType":"YulFunctionCall","src":"4464:46:26"},"nativeSrc":"4464:46:26","nodeType":"YulExpressionStatement","src":"4464:46:26"},{"nativeSrc":"4519:26:26","nodeType":"YulAssignment","src":"4519:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4531:9:26","nodeType":"YulIdentifier","src":"4531:9:26"},{"kind":"number","nativeSrc":"4542:2:26","nodeType":"YulLiteral","src":"4542:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4527:3:26","nodeType":"YulIdentifier","src":"4527:3:26"},"nativeSrc":"4527:18:26","nodeType":"YulFunctionCall","src":"4527:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4519:4:26","nodeType":"YulIdentifier","src":"4519:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_a07340163f27fcae402e0c887e21c4542a001efe5445ab4fc7f783edba82e756__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4211:340:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4362:9:26","nodeType":"YulTypedName","src":"4362:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4376:4:26","nodeType":"YulTypedName","src":"4376:4:26","type":""}],"src":"4211:340:26"},{"body":{"nativeSrc":"4730:167:26","nodeType":"YulBlock","src":"4730:167:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4747:9:26","nodeType":"YulIdentifier","src":"4747:9:26"},{"kind":"number","nativeSrc":"4758:2:26","nodeType":"YulLiteral","src":"4758:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4740:6:26","nodeType":"YulIdentifier","src":"4740:6:26"},"nativeSrc":"4740:21:26","nodeType":"YulFunctionCall","src":"4740:21:26"},"nativeSrc":"4740:21:26","nodeType":"YulExpressionStatement","src":"4740:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4781:9:26","nodeType":"YulIdentifier","src":"4781:9:26"},{"kind":"number","nativeSrc":"4792:2:26","nodeType":"YulLiteral","src":"4792:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4777:3:26","nodeType":"YulIdentifier","src":"4777:3:26"},"nativeSrc":"4777:18:26","nodeType":"YulFunctionCall","src":"4777:18:26"},{"kind":"number","nativeSrc":"4797:2:26","nodeType":"YulLiteral","src":"4797:2:26","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"4770:6:26","nodeType":"YulIdentifier","src":"4770:6:26"},"nativeSrc":"4770:30:26","nodeType":"YulFunctionCall","src":"4770:30:26"},"nativeSrc":"4770:30:26","nodeType":"YulExpressionStatement","src":"4770:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4820:9:26","nodeType":"YulIdentifier","src":"4820:9:26"},{"kind":"number","nativeSrc":"4831:2:26","nodeType":"YulLiteral","src":"4831:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4816:3:26","nodeType":"YulIdentifier","src":"4816:3:26"},"nativeSrc":"4816:18:26","nodeType":"YulFunctionCall","src":"4816:18:26"},{"hexValue":"51756f7461206d757374206265203e2030","kind":"string","nativeSrc":"4836:19:26","nodeType":"YulLiteral","src":"4836:19:26","type":"","value":"Quota must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"4809:6:26","nodeType":"YulIdentifier","src":"4809:6:26"},"nativeSrc":"4809:47:26","nodeType":"YulFunctionCall","src":"4809:47:26"},"nativeSrc":"4809:47:26","nodeType":"YulExpressionStatement","src":"4809:47:26"},{"nativeSrc":"4865:26:26","nodeType":"YulAssignment","src":"4865:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4877:9:26","nodeType":"YulIdentifier","src":"4877:9:26"},{"kind":"number","nativeSrc":"4888:2:26","nodeType":"YulLiteral","src":"4888:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4873:3:26","nodeType":"YulIdentifier","src":"4873:3:26"},"nativeSrc":"4873:18:26","nodeType":"YulFunctionCall","src":"4873:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4865:4:26","nodeType":"YulIdentifier","src":"4865:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4556:341:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4707:9:26","nodeType":"YulTypedName","src":"4707:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4721:4:26","nodeType":"YulTypedName","src":"4721:4:26","type":""}],"src":"4556:341:26"},{"body":{"nativeSrc":"5076:173:26","nodeType":"YulBlock","src":"5076:173:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5093:9:26","nodeType":"YulIdentifier","src":"5093:9:26"},{"kind":"number","nativeSrc":"5104:2:26","nodeType":"YulLiteral","src":"5104:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5086:6:26","nodeType":"YulIdentifier","src":"5086:6:26"},"nativeSrc":"5086:21:26","nodeType":"YulFunctionCall","src":"5086:21:26"},"nativeSrc":"5086:21:26","nodeType":"YulExpressionStatement","src":"5086:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5127:9:26","nodeType":"YulIdentifier","src":"5127:9:26"},{"kind":"number","nativeSrc":"5138:2:26","nodeType":"YulLiteral","src":"5138:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5123:3:26","nodeType":"YulIdentifier","src":"5123:3:26"},"nativeSrc":"5123:18:26","nodeType":"YulFunctionCall","src":"5123:18:26"},{"kind":"number","nativeSrc":"5143:2:26","nodeType":"YulLiteral","src":"5143:2:26","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"5116:6:26","nodeType":"YulIdentifier","src":"5116:6:26"},"nativeSrc":"5116:30:26","nodeType":"YulFunctionCall","src":"5116:30:26"},"nativeSrc":"5116:30:26","nodeType":"YulExpressionStatement","src":"5116:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5166:9:26","nodeType":"YulIdentifier","src":"5166:9:26"},{"kind":"number","nativeSrc":"5177:2:26","nodeType":"YulLiteral","src":"5177:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5162:3:26","nodeType":"YulIdentifier","src":"5162:3:26"},"nativeSrc":"5162:18:26","nodeType":"YulFunctionCall","src":"5162:18:26"},{"hexValue":"57686974656c697374206465706c6f79206661696c6564","kind":"string","nativeSrc":"5182:25:26","nodeType":"YulLiteral","src":"5182:25:26","type":"","value":"Whitelist deploy failed"}],"functionName":{"name":"mstore","nativeSrc":"5155:6:26","nodeType":"YulIdentifier","src":"5155:6:26"},"nativeSrc":"5155:53:26","nodeType":"YulFunctionCall","src":"5155:53:26"},"nativeSrc":"5155:53:26","nodeType":"YulExpressionStatement","src":"5155:53:26"},{"nativeSrc":"5217:26:26","nodeType":"YulAssignment","src":"5217:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5229:9:26","nodeType":"YulIdentifier","src":"5229:9:26"},{"kind":"number","nativeSrc":"5240:2:26","nodeType":"YulLiteral","src":"5240:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5225:3:26","nodeType":"YulIdentifier","src":"5225:3:26"},"nativeSrc":"5225:18:26","nodeType":"YulFunctionCall","src":"5225:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5217:4:26","nodeType":"YulIdentifier","src":"5217:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_51a33edf6c53ac64407bbad4a95f4ef56f6b4dea5e575a14b604e2b90ec7c7e4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4902:347:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5053:9:26","nodeType":"YulTypedName","src":"5053:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5067:4:26","nodeType":"YulTypedName","src":"5067:4:26","type":""}],"src":"4902:347:26"},{"body":{"nativeSrc":"5355:102:26","nodeType":"YulBlock","src":"5355:102:26","statements":[{"nativeSrc":"5365:26:26","nodeType":"YulAssignment","src":"5365:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5377:9:26","nodeType":"YulIdentifier","src":"5377:9:26"},{"kind":"number","nativeSrc":"5388:2:26","nodeType":"YulLiteral","src":"5388:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5373:3:26","nodeType":"YulIdentifier","src":"5373:3:26"},"nativeSrc":"5373:18:26","nodeType":"YulFunctionCall","src":"5373:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5365:4:26","nodeType":"YulIdentifier","src":"5365:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5407:9:26","nodeType":"YulIdentifier","src":"5407:9:26"},{"arguments":[{"name":"value0","nativeSrc":"5422:6:26","nodeType":"YulIdentifier","src":"5422:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5438:3:26","nodeType":"YulLiteral","src":"5438:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"5443:1:26","nodeType":"YulLiteral","src":"5443:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5434:3:26","nodeType":"YulIdentifier","src":"5434:3:26"},"nativeSrc":"5434:11:26","nodeType":"YulFunctionCall","src":"5434:11:26"},{"kind":"number","nativeSrc":"5447:1:26","nodeType":"YulLiteral","src":"5447:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5430:3:26","nodeType":"YulIdentifier","src":"5430:3:26"},"nativeSrc":"5430:19:26","nodeType":"YulFunctionCall","src":"5430:19:26"}],"functionName":{"name":"and","nativeSrc":"5418:3:26","nodeType":"YulIdentifier","src":"5418:3:26"},"nativeSrc":"5418:32:26","nodeType":"YulFunctionCall","src":"5418:32:26"}],"functionName":{"name":"mstore","nativeSrc":"5400:6:26","nodeType":"YulIdentifier","src":"5400:6:26"},"nativeSrc":"5400:51:26","nodeType":"YulFunctionCall","src":"5400:51:26"},"nativeSrc":"5400:51:26","nodeType":"YulExpressionStatement","src":"5400:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5254:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:26","nodeType":"YulTypedName","src":"5324:9:26","type":""},{"name":"value0","nativeSrc":"5335:6:26","nodeType":"YulTypedName","src":"5335:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5346:4:26","nodeType":"YulTypedName","src":"5346:4:26","type":""}],"src":"5254:203:26"},{"body":{"nativeSrc":"5636:167:26","nodeType":"YulBlock","src":"5636:167:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5653:9:26","nodeType":"YulIdentifier","src":"5653:9:26"},{"kind":"number","nativeSrc":"5664:2:26","nodeType":"YulLiteral","src":"5664:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5646:6:26","nodeType":"YulIdentifier","src":"5646:6:26"},"nativeSrc":"5646:21:26","nodeType":"YulFunctionCall","src":"5646:21:26"},"nativeSrc":"5646:21:26","nodeType":"YulExpressionStatement","src":"5646:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5687:9:26","nodeType":"YulIdentifier","src":"5687:9:26"},{"kind":"number","nativeSrc":"5698:2:26","nodeType":"YulLiteral","src":"5698:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5683:3:26","nodeType":"YulIdentifier","src":"5683:3:26"},"nativeSrc":"5683:18:26","nodeType":"YulFunctionCall","src":"5683:18:26"},{"kind":"number","nativeSrc":"5703:2:26","nodeType":"YulLiteral","src":"5703:2:26","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"5676:6:26","nodeType":"YulIdentifier","src":"5676:6:26"},"nativeSrc":"5676:30:26","nodeType":"YulFunctionCall","src":"5676:30:26"},"nativeSrc":"5676:30:26","nodeType":"YulExpressionStatement","src":"5676:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5726:9:26","nodeType":"YulIdentifier","src":"5726:9:26"},{"kind":"number","nativeSrc":"5737:2:26","nodeType":"YulLiteral","src":"5737:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5722:3:26","nodeType":"YulIdentifier","src":"5722:3:26"},"nativeSrc":"5722:18:26","nodeType":"YulFunctionCall","src":"5722:18:26"},{"hexValue":"4e4654206465706c6f79206661696c6564","kind":"string","nativeSrc":"5742:19:26","nodeType":"YulLiteral","src":"5742:19:26","type":"","value":"NFT deploy failed"}],"functionName":{"name":"mstore","nativeSrc":"5715:6:26","nodeType":"YulIdentifier","src":"5715:6:26"},"nativeSrc":"5715:47:26","nodeType":"YulFunctionCall","src":"5715:47:26"},"nativeSrc":"5715:47:26","nodeType":"YulExpressionStatement","src":"5715:47:26"},{"nativeSrc":"5771:26:26","nodeType":"YulAssignment","src":"5771:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5783:9:26","nodeType":"YulIdentifier","src":"5783:9:26"},{"kind":"number","nativeSrc":"5794:2:26","nodeType":"YulLiteral","src":"5794:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5779:3:26","nodeType":"YulIdentifier","src":"5779:3:26"},"nativeSrc":"5779:18:26","nodeType":"YulFunctionCall","src":"5779:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5771:4:26","nodeType":"YulIdentifier","src":"5771:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_a22ec9ee55772ba2eb44070b1a6346c13cf75f7221c9dcc91f977ae929e1a583__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5462:341:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5613:9:26","nodeType":"YulTypedName","src":"5613:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5627:4:26","nodeType":"YulTypedName","src":"5627:4:26","type":""}],"src":"5462:341:26"},{"body":{"nativeSrc":"5858:350:26","nodeType":"YulBlock","src":"5858:350:26","statements":[{"nativeSrc":"5868:26:26","nodeType":"YulVariableDeclaration","src":"5868:26:26","value":{"arguments":[{"name":"value","nativeSrc":"5888:5:26","nodeType":"YulIdentifier","src":"5888:5:26"}],"functionName":{"name":"mload","nativeSrc":"5882:5:26","nodeType":"YulIdentifier","src":"5882:5:26"},"nativeSrc":"5882:12:26","nodeType":"YulFunctionCall","src":"5882:12:26"},"variables":[{"name":"length","nativeSrc":"5872:6:26","nodeType":"YulTypedName","src":"5872:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5910:3:26","nodeType":"YulIdentifier","src":"5910:3:26"},{"name":"length","nativeSrc":"5915:6:26","nodeType":"YulIdentifier","src":"5915:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5903:6:26","nodeType":"YulIdentifier","src":"5903:6:26"},"nativeSrc":"5903:19:26","nodeType":"YulFunctionCall","src":"5903:19:26"},"nativeSrc":"5903:19:26","nodeType":"YulExpressionStatement","src":"5903:19:26"},{"nativeSrc":"5931:10:26","nodeType":"YulVariableDeclaration","src":"5931:10:26","value":{"kind":"number","nativeSrc":"5940:1:26","nodeType":"YulLiteral","src":"5940:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5935:1:26","nodeType":"YulTypedName","src":"5935:1:26","type":""}]},{"body":{"nativeSrc":"6002:87:26","nodeType":"YulBlock","src":"6002:87:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"6031:3:26","nodeType":"YulIdentifier","src":"6031:3:26"},{"name":"i","nativeSrc":"6036:1:26","nodeType":"YulIdentifier","src":"6036:1:26"}],"functionName":{"name":"add","nativeSrc":"6027:3:26","nodeType":"YulIdentifier","src":"6027:3:26"},"nativeSrc":"6027:11:26","nodeType":"YulFunctionCall","src":"6027:11:26"},{"kind":"number","nativeSrc":"6040:4:26","nodeType":"YulLiteral","src":"6040:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6023:3:26","nodeType":"YulIdentifier","src":"6023:3:26"},"nativeSrc":"6023:22:26","nodeType":"YulFunctionCall","src":"6023:22:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6061:5:26","nodeType":"YulIdentifier","src":"6061:5:26"},{"name":"i","nativeSrc":"6068:1:26","nodeType":"YulIdentifier","src":"6068:1:26"}],"functionName":{"name":"add","nativeSrc":"6057:3:26","nodeType":"YulIdentifier","src":"6057:3:26"},"nativeSrc":"6057:13:26","nodeType":"YulFunctionCall","src":"6057:13:26"},{"kind":"number","nativeSrc":"6072:4:26","nodeType":"YulLiteral","src":"6072:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6053:3:26","nodeType":"YulIdentifier","src":"6053:3:26"},"nativeSrc":"6053:24:26","nodeType":"YulFunctionCall","src":"6053:24:26"}],"functionName":{"name":"mload","nativeSrc":"6047:5:26","nodeType":"YulIdentifier","src":"6047:5:26"},"nativeSrc":"6047:31:26","nodeType":"YulFunctionCall","src":"6047:31:26"}],"functionName":{"name":"mstore","nativeSrc":"6016:6:26","nodeType":"YulIdentifier","src":"6016:6:26"},"nativeSrc":"6016:63:26","nodeType":"YulFunctionCall","src":"6016:63:26"},"nativeSrc":"6016:63:26","nodeType":"YulExpressionStatement","src":"6016:63:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5961:1:26","nodeType":"YulIdentifier","src":"5961:1:26"},{"name":"length","nativeSrc":"5964:6:26","nodeType":"YulIdentifier","src":"5964:6:26"}],"functionName":{"name":"lt","nativeSrc":"5958:2:26","nodeType":"YulIdentifier","src":"5958:2:26"},"nativeSrc":"5958:13:26","nodeType":"YulFunctionCall","src":"5958:13:26"},"nativeSrc":"5950:139:26","nodeType":"YulForLoop","post":{"nativeSrc":"5972:21:26","nodeType":"YulBlock","src":"5972:21:26","statements":[{"nativeSrc":"5974:17:26","nodeType":"YulAssignment","src":"5974:17:26","value":{"arguments":[{"name":"i","nativeSrc":"5983:1:26","nodeType":"YulIdentifier","src":"5983:1:26"},{"kind":"number","nativeSrc":"5986:4:26","nodeType":"YulLiteral","src":"5986:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5979:3:26","nodeType":"YulIdentifier","src":"5979:3:26"},"nativeSrc":"5979:12:26","nodeType":"YulFunctionCall","src":"5979:12:26"},"variableNames":[{"name":"i","nativeSrc":"5974:1:26","nodeType":"YulIdentifier","src":"5974:1:26"}]}]},"pre":{"nativeSrc":"5954:3:26","nodeType":"YulBlock","src":"5954:3:26","statements":[]},"src":"5950:139:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"6113:3:26","nodeType":"YulIdentifier","src":"6113:3:26"},{"name":"length","nativeSrc":"6118:6:26","nodeType":"YulIdentifier","src":"6118:6:26"}],"functionName":{"name":"add","nativeSrc":"6109:3:26","nodeType":"YulIdentifier","src":"6109:3:26"},"nativeSrc":"6109:16:26","nodeType":"YulFunctionCall","src":"6109:16:26"},{"kind":"number","nativeSrc":"6127:4:26","nodeType":"YulLiteral","src":"6127:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6105:3:26","nodeType":"YulIdentifier","src":"6105:3:26"},"nativeSrc":"6105:27:26","nodeType":"YulFunctionCall","src":"6105:27:26"},{"kind":"number","nativeSrc":"6134:1:26","nodeType":"YulLiteral","src":"6134:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6098:6:26","nodeType":"YulIdentifier","src":"6098:6:26"},"nativeSrc":"6098:38:26","nodeType":"YulFunctionCall","src":"6098:38:26"},"nativeSrc":"6098:38:26","nodeType":"YulExpressionStatement","src":"6098:38:26"},{"nativeSrc":"6145:57:26","nodeType":"YulAssignment","src":"6145:57:26","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"6160:3:26","nodeType":"YulIdentifier","src":"6160:3:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6173:6:26","nodeType":"YulIdentifier","src":"6173:6:26"},{"kind":"number","nativeSrc":"6181:2:26","nodeType":"YulLiteral","src":"6181:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6169:3:26","nodeType":"YulIdentifier","src":"6169:3:26"},"nativeSrc":"6169:15:26","nodeType":"YulFunctionCall","src":"6169:15:26"},{"arguments":[{"kind":"number","nativeSrc":"6190:2:26","nodeType":"YulLiteral","src":"6190:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6186:3:26","nodeType":"YulIdentifier","src":"6186:3:26"},"nativeSrc":"6186:7:26","nodeType":"YulFunctionCall","src":"6186:7:26"}],"functionName":{"name":"and","nativeSrc":"6165:3:26","nodeType":"YulIdentifier","src":"6165:3:26"},"nativeSrc":"6165:29:26","nodeType":"YulFunctionCall","src":"6165:29:26"}],"functionName":{"name":"add","nativeSrc":"6156:3:26","nodeType":"YulIdentifier","src":"6156:3:26"},"nativeSrc":"6156:39:26","nodeType":"YulFunctionCall","src":"6156:39:26"},{"kind":"number","nativeSrc":"6197:4:26","nodeType":"YulLiteral","src":"6197:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6152:3:26","nodeType":"YulIdentifier","src":"6152:3:26"},"nativeSrc":"6152:50:26","nodeType":"YulFunctionCall","src":"6152:50:26"},"variableNames":[{"name":"end","nativeSrc":"6145:3:26","nodeType":"YulIdentifier","src":"6145:3:26"}]}]},"name":"abi_encode_string","nativeSrc":"5808:400:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5835:5:26","nodeType":"YulTypedName","src":"5835:5:26","type":""},{"name":"pos","nativeSrc":"5842:3:26","nodeType":"YulTypedName","src":"5842:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5850:3:26","nodeType":"YulTypedName","src":"5850:3:26","type":""}],"src":"5808:400:26"},{"body":{"nativeSrc":"6458:400:26","nodeType":"YulBlock","src":"6458:400:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6475:9:26","nodeType":"YulIdentifier","src":"6475:9:26"},{"kind":"number","nativeSrc":"6486:3:26","nodeType":"YulLiteral","src":"6486:3:26","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"6468:6:26","nodeType":"YulIdentifier","src":"6468:6:26"},"nativeSrc":"6468:22:26","nodeType":"YulFunctionCall","src":"6468:22:26"},"nativeSrc":"6468:22:26","nodeType":"YulExpressionStatement","src":"6468:22:26"},{"nativeSrc":"6499:60:26","nodeType":"YulVariableDeclaration","src":"6499:60:26","value":{"arguments":[{"name":"value0","nativeSrc":"6531:6:26","nodeType":"YulIdentifier","src":"6531:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"6543:9:26","nodeType":"YulIdentifier","src":"6543:9:26"},{"kind":"number","nativeSrc":"6554:3:26","nodeType":"YulLiteral","src":"6554:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6539:3:26","nodeType":"YulIdentifier","src":"6539:3:26"},"nativeSrc":"6539:19:26","nodeType":"YulFunctionCall","src":"6539:19:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6513:17:26","nodeType":"YulIdentifier","src":"6513:17:26"},"nativeSrc":"6513:46:26","nodeType":"YulFunctionCall","src":"6513:46:26"},"variables":[{"name":"tail_1","nativeSrc":"6503:6:26","nodeType":"YulTypedName","src":"6503:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6579:9:26","nodeType":"YulIdentifier","src":"6579:9:26"},{"kind":"number","nativeSrc":"6590:2:26","nodeType":"YulLiteral","src":"6590:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6575:3:26","nodeType":"YulIdentifier","src":"6575:3:26"},"nativeSrc":"6575:18:26","nodeType":"YulFunctionCall","src":"6575:18:26"},{"arguments":[{"name":"tail_1","nativeSrc":"6599:6:26","nodeType":"YulIdentifier","src":"6599:6:26"},{"name":"headStart","nativeSrc":"6607:9:26","nodeType":"YulIdentifier","src":"6607:9:26"}],"functionName":{"name":"sub","nativeSrc":"6595:3:26","nodeType":"YulIdentifier","src":"6595:3:26"},"nativeSrc":"6595:22:26","nodeType":"YulFunctionCall","src":"6595:22:26"}],"functionName":{"name":"mstore","nativeSrc":"6568:6:26","nodeType":"YulIdentifier","src":"6568:6:26"},"nativeSrc":"6568:50:26","nodeType":"YulFunctionCall","src":"6568:50:26"},"nativeSrc":"6568:50:26","nodeType":"YulExpressionStatement","src":"6568:50:26"},{"nativeSrc":"6627:47:26","nodeType":"YulVariableDeclaration","src":"6627:47:26","value":{"arguments":[{"name":"value1","nativeSrc":"6659:6:26","nodeType":"YulIdentifier","src":"6659:6:26"},{"name":"tail_1","nativeSrc":"6667:6:26","nodeType":"YulIdentifier","src":"6667:6:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6641:17:26","nodeType":"YulIdentifier","src":"6641:17:26"},"nativeSrc":"6641:33:26","nodeType":"YulFunctionCall","src":"6641:33:26"},"variables":[{"name":"tail_2","nativeSrc":"6631:6:26","nodeType":"YulTypedName","src":"6631:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6694:9:26","nodeType":"YulIdentifier","src":"6694:9:26"},{"kind":"number","nativeSrc":"6705:2:26","nodeType":"YulLiteral","src":"6705:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6690:3:26","nodeType":"YulIdentifier","src":"6690:3:26"},"nativeSrc":"6690:18:26","nodeType":"YulFunctionCall","src":"6690:18:26"},{"arguments":[{"name":"tail_2","nativeSrc":"6714:6:26","nodeType":"YulIdentifier","src":"6714:6:26"},{"name":"headStart","nativeSrc":"6722:9:26","nodeType":"YulIdentifier","src":"6722:9:26"}],"functionName":{"name":"sub","nativeSrc":"6710:3:26","nodeType":"YulIdentifier","src":"6710:3:26"},"nativeSrc":"6710:22:26","nodeType":"YulFunctionCall","src":"6710:22:26"}],"functionName":{"name":"mstore","nativeSrc":"6683:6:26","nodeType":"YulIdentifier","src":"6683:6:26"},"nativeSrc":"6683:50:26","nodeType":"YulFunctionCall","src":"6683:50:26"},"nativeSrc":"6683:50:26","nodeType":"YulExpressionStatement","src":"6683:50:26"},{"nativeSrc":"6742:41:26","nodeType":"YulAssignment","src":"6742:41:26","value":{"arguments":[{"name":"value2","nativeSrc":"6768:6:26","nodeType":"YulIdentifier","src":"6768:6:26"},{"name":"tail_2","nativeSrc":"6776:6:26","nodeType":"YulIdentifier","src":"6776:6:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6750:17:26","nodeType":"YulIdentifier","src":"6750:17:26"},"nativeSrc":"6750:33:26","nodeType":"YulFunctionCall","src":"6750:33:26"},"variableNames":[{"name":"tail","nativeSrc":"6742:4:26","nodeType":"YulIdentifier","src":"6742:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6803:9:26","nodeType":"YulIdentifier","src":"6803:9:26"},{"kind":"number","nativeSrc":"6814:2:26","nodeType":"YulLiteral","src":"6814:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6799:3:26","nodeType":"YulIdentifier","src":"6799:3:26"},"nativeSrc":"6799:18:26","nodeType":"YulFunctionCall","src":"6799:18:26"},{"arguments":[{"name":"value3","nativeSrc":"6823:6:26","nodeType":"YulIdentifier","src":"6823:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6839:3:26","nodeType":"YulLiteral","src":"6839:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"6844:1:26","nodeType":"YulLiteral","src":"6844:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6835:3:26","nodeType":"YulIdentifier","src":"6835:3:26"},"nativeSrc":"6835:11:26","nodeType":"YulFunctionCall","src":"6835:11:26"},{"kind":"number","nativeSrc":"6848:1:26","nodeType":"YulLiteral","src":"6848:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6831:3:26","nodeType":"YulIdentifier","src":"6831:3:26"},"nativeSrc":"6831:19:26","nodeType":"YulFunctionCall","src":"6831:19:26"}],"functionName":{"name":"and","nativeSrc":"6819:3:26","nodeType":"YulIdentifier","src":"6819:3:26"},"nativeSrc":"6819:32:26","nodeType":"YulFunctionCall","src":"6819:32:26"}],"functionName":{"name":"mstore","nativeSrc":"6792:6:26","nodeType":"YulIdentifier","src":"6792:6:26"},"nativeSrc":"6792:60:26","nodeType":"YulFunctionCall","src":"6792:60:26"},"nativeSrc":"6792:60:26","nodeType":"YulExpressionStatement","src":"6792:60:26"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed","nativeSrc":"6213:645:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6403:9:26","nodeType":"YulTypedName","src":"6403:9:26","type":""},{"name":"value3","nativeSrc":"6414:6:26","nodeType":"YulTypedName","src":"6414:6:26","type":""},{"name":"value2","nativeSrc":"6422:6:26","nodeType":"YulTypedName","src":"6422:6:26","type":""},{"name":"value1","nativeSrc":"6430:6:26","nodeType":"YulTypedName","src":"6430:6:26","type":""},{"name":"value0","nativeSrc":"6438:6:26","nodeType":"YulTypedName","src":"6438:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6449:4:26","nodeType":"YulTypedName","src":"6449:4:26","type":""}],"src":"6213:645:26"},{"body":{"nativeSrc":"7037:169:26","nodeType":"YulBlock","src":"7037:169:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7054:9:26","nodeType":"YulIdentifier","src":"7054:9:26"},{"kind":"number","nativeSrc":"7065:2:26","nodeType":"YulLiteral","src":"7065:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7047:6:26","nodeType":"YulIdentifier","src":"7047:6:26"},"nativeSrc":"7047:21:26","nodeType":"YulFunctionCall","src":"7047:21:26"},"nativeSrc":"7047:21:26","nodeType":"YulExpressionStatement","src":"7047:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7088:9:26","nodeType":"YulIdentifier","src":"7088:9:26"},{"kind":"number","nativeSrc":"7099:2:26","nodeType":"YulLiteral","src":"7099:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7084:3:26","nodeType":"YulIdentifier","src":"7084:3:26"},"nativeSrc":"7084:18:26","nodeType":"YulFunctionCall","src":"7084:18:26"},{"kind":"number","nativeSrc":"7104:2:26","nodeType":"YulLiteral","src":"7104:2:26","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"7077:6:26","nodeType":"YulIdentifier","src":"7077:6:26"},"nativeSrc":"7077:30:26","nodeType":"YulFunctionCall","src":"7077:30:26"},"nativeSrc":"7077:30:26","nodeType":"YulExpressionStatement","src":"7077:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7127:9:26","nodeType":"YulIdentifier","src":"7127:9:26"},{"kind":"number","nativeSrc":"7138:2:26","nodeType":"YulLiteral","src":"7138:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7123:3:26","nodeType":"YulIdentifier","src":"7123:3:26"},"nativeSrc":"7123:18:26","nodeType":"YulFunctionCall","src":"7123:18:26"},{"hexValue":"436c61696d206465706c6f79206661696c6564","kind":"string","nativeSrc":"7143:21:26","nodeType":"YulLiteral","src":"7143:21:26","type":"","value":"Claim deploy failed"}],"functionName":{"name":"mstore","nativeSrc":"7116:6:26","nodeType":"YulIdentifier","src":"7116:6:26"},"nativeSrc":"7116:49:26","nodeType":"YulFunctionCall","src":"7116:49:26"},"nativeSrc":"7116:49:26","nodeType":"YulExpressionStatement","src":"7116:49:26"},{"nativeSrc":"7174:26:26","nodeType":"YulAssignment","src":"7174:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7186:9:26","nodeType":"YulIdentifier","src":"7186:9:26"},{"kind":"number","nativeSrc":"7197:2:26","nodeType":"YulLiteral","src":"7197:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7182:3:26","nodeType":"YulIdentifier","src":"7182:3:26"},"nativeSrc":"7182:18:26","nodeType":"YulFunctionCall","src":"7182:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7174:4:26","nodeType":"YulIdentifier","src":"7174:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4e05df31fd91431268821f95a90fe655758d028b190dea5d874d8f56bc432cb3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6863:343:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7014:9:26","nodeType":"YulTypedName","src":"7014:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7028:4:26","nodeType":"YulTypedName","src":"7028:4:26","type":""}],"src":"6863:343:26"},{"body":{"nativeSrc":"7424:354:26","nodeType":"YulBlock","src":"7424:354:26","statements":[{"nativeSrc":"7434:27:26","nodeType":"YulAssignment","src":"7434:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7446:9:26","nodeType":"YulIdentifier","src":"7446:9:26"},{"kind":"number","nativeSrc":"7457:3:26","nodeType":"YulLiteral","src":"7457:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7442:3:26","nodeType":"YulIdentifier","src":"7442:3:26"},"nativeSrc":"7442:19:26","nodeType":"YulFunctionCall","src":"7442:19:26"},"variableNames":[{"name":"tail","nativeSrc":"7434:4:26","nodeType":"YulIdentifier","src":"7434:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7477:9:26","nodeType":"YulIdentifier","src":"7477:9:26"},{"arguments":[{"name":"value0","nativeSrc":"7492:6:26","nodeType":"YulIdentifier","src":"7492:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7508:3:26","nodeType":"YulLiteral","src":"7508:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7513:1:26","nodeType":"YulLiteral","src":"7513:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7504:3:26","nodeType":"YulIdentifier","src":"7504:3:26"},"nativeSrc":"7504:11:26","nodeType":"YulFunctionCall","src":"7504:11:26"},{"kind":"number","nativeSrc":"7517:1:26","nodeType":"YulLiteral","src":"7517:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7500:3:26","nodeType":"YulIdentifier","src":"7500:3:26"},"nativeSrc":"7500:19:26","nodeType":"YulFunctionCall","src":"7500:19:26"}],"functionName":{"name":"and","nativeSrc":"7488:3:26","nodeType":"YulIdentifier","src":"7488:3:26"},"nativeSrc":"7488:32:26","nodeType":"YulFunctionCall","src":"7488:32:26"}],"functionName":{"name":"mstore","nativeSrc":"7470:6:26","nodeType":"YulIdentifier","src":"7470:6:26"},"nativeSrc":"7470:51:26","nodeType":"YulFunctionCall","src":"7470:51:26"},"nativeSrc":"7470:51:26","nodeType":"YulExpressionStatement","src":"7470:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7541:9:26","nodeType":"YulIdentifier","src":"7541:9:26"},{"kind":"number","nativeSrc":"7552:2:26","nodeType":"YulLiteral","src":"7552:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7537:3:26","nodeType":"YulIdentifier","src":"7537:3:26"},"nativeSrc":"7537:18:26","nodeType":"YulFunctionCall","src":"7537:18:26"},{"arguments":[{"name":"value1","nativeSrc":"7561:6:26","nodeType":"YulIdentifier","src":"7561:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7577:3:26","nodeType":"YulLiteral","src":"7577:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7582:1:26","nodeType":"YulLiteral","src":"7582:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7573:3:26","nodeType":"YulIdentifier","src":"7573:3:26"},"nativeSrc":"7573:11:26","nodeType":"YulFunctionCall","src":"7573:11:26"},{"kind":"number","nativeSrc":"7586:1:26","nodeType":"YulLiteral","src":"7586:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7569:3:26","nodeType":"YulIdentifier","src":"7569:3:26"},"nativeSrc":"7569:19:26","nodeType":"YulFunctionCall","src":"7569:19:26"}],"functionName":{"name":"and","nativeSrc":"7557:3:26","nodeType":"YulIdentifier","src":"7557:3:26"},"nativeSrc":"7557:32:26","nodeType":"YulFunctionCall","src":"7557:32:26"}],"functionName":{"name":"mstore","nativeSrc":"7530:6:26","nodeType":"YulIdentifier","src":"7530:6:26"},"nativeSrc":"7530:60:26","nodeType":"YulFunctionCall","src":"7530:60:26"},"nativeSrc":"7530:60:26","nodeType":"YulExpressionStatement","src":"7530:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7610:9:26","nodeType":"YulIdentifier","src":"7610:9:26"},{"kind":"number","nativeSrc":"7621:2:26","nodeType":"YulLiteral","src":"7621:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7606:3:26","nodeType":"YulIdentifier","src":"7606:3:26"},"nativeSrc":"7606:18:26","nodeType":"YulFunctionCall","src":"7606:18:26"},{"arguments":[{"name":"value2","nativeSrc":"7630:6:26","nodeType":"YulIdentifier","src":"7630:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7646:3:26","nodeType":"YulLiteral","src":"7646:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7651:1:26","nodeType":"YulLiteral","src":"7651:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7642:3:26","nodeType":"YulIdentifier","src":"7642:3:26"},"nativeSrc":"7642:11:26","nodeType":"YulFunctionCall","src":"7642:11:26"},{"kind":"number","nativeSrc":"7655:1:26","nodeType":"YulLiteral","src":"7655:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7638:3:26","nodeType":"YulIdentifier","src":"7638:3:26"},"nativeSrc":"7638:19:26","nodeType":"YulFunctionCall","src":"7638:19:26"}],"functionName":{"name":"and","nativeSrc":"7626:3:26","nodeType":"YulIdentifier","src":"7626:3:26"},"nativeSrc":"7626:32:26","nodeType":"YulFunctionCall","src":"7626:32:26"}],"functionName":{"name":"mstore","nativeSrc":"7599:6:26","nodeType":"YulIdentifier","src":"7599:6:26"},"nativeSrc":"7599:60:26","nodeType":"YulFunctionCall","src":"7599:60:26"},"nativeSrc":"7599:60:26","nodeType":"YulExpressionStatement","src":"7599:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7679:9:26","nodeType":"YulIdentifier","src":"7679:9:26"},{"kind":"number","nativeSrc":"7690:2:26","nodeType":"YulLiteral","src":"7690:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7675:3:26","nodeType":"YulIdentifier","src":"7675:3:26"},"nativeSrc":"7675:18:26","nodeType":"YulFunctionCall","src":"7675:18:26"},{"arguments":[{"name":"value3","nativeSrc":"7699:6:26","nodeType":"YulIdentifier","src":"7699:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7715:3:26","nodeType":"YulLiteral","src":"7715:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"7720:1:26","nodeType":"YulLiteral","src":"7720:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7711:3:26","nodeType":"YulIdentifier","src":"7711:3:26"},"nativeSrc":"7711:11:26","nodeType":"YulFunctionCall","src":"7711:11:26"},{"kind":"number","nativeSrc":"7724:1:26","nodeType":"YulLiteral","src":"7724:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7707:3:26","nodeType":"YulIdentifier","src":"7707:3:26"},"nativeSrc":"7707:19:26","nodeType":"YulFunctionCall","src":"7707:19:26"}],"functionName":{"name":"and","nativeSrc":"7695:3:26","nodeType":"YulIdentifier","src":"7695:3:26"},"nativeSrc":"7695:32:26","nodeType":"YulFunctionCall","src":"7695:32:26"}],"functionName":{"name":"mstore","nativeSrc":"7668:6:26","nodeType":"YulIdentifier","src":"7668:6:26"},"nativeSrc":"7668:60:26","nodeType":"YulFunctionCall","src":"7668:60:26"},"nativeSrc":"7668:60:26","nodeType":"YulExpressionStatement","src":"7668:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7748:9:26","nodeType":"YulIdentifier","src":"7748:9:26"},{"kind":"number","nativeSrc":"7759:3:26","nodeType":"YulLiteral","src":"7759:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7744:3:26","nodeType":"YulIdentifier","src":"7744:3:26"},"nativeSrc":"7744:19:26","nodeType":"YulFunctionCall","src":"7744:19:26"},{"name":"value4","nativeSrc":"7765:6:26","nodeType":"YulIdentifier","src":"7765:6:26"}],"functionName":{"name":"mstore","nativeSrc":"7737:6:26","nodeType":"YulIdentifier","src":"7737:6:26"},"nativeSrc":"7737:35:26","nodeType":"YulFunctionCall","src":"7737:35:26"},"nativeSrc":"7737:35:26","nodeType":"YulExpressionStatement","src":"7737:35:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"7211:567:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7361:9:26","nodeType":"YulTypedName","src":"7361:9:26","type":""},{"name":"value4","nativeSrc":"7372:6:26","nodeType":"YulTypedName","src":"7372:6:26","type":""},{"name":"value3","nativeSrc":"7380:6:26","nodeType":"YulTypedName","src":"7380:6:26","type":""},{"name":"value2","nativeSrc":"7388:6:26","nodeType":"YulTypedName","src":"7388:6:26","type":""},{"name":"value1","nativeSrc":"7396:6:26","nodeType":"YulTypedName","src":"7396:6:26","type":""},{"name":"value0","nativeSrc":"7404:6:26","nodeType":"YulTypedName","src":"7404:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7415:4:26","nodeType":"YulTypedName","src":"7415:4:26","type":""}],"src":"7211:567:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_2), dataEnd)\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 160))\n        value5 := value_2\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_stringliteral_c09682283f2f9884e0ca47f0e0660b6f79192bc0c7211f33fec920217ff4bcef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Project ID exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4adfa440da5a380b98aecdd79231a3fc616ccb7aae303b6a6d83f6b5159d693__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Empty NFT name\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a07340163f27fcae402e0c887e21c4542a001efe5445ab4fc7f783edba82e756__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Empty NFT symbol\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_26e1a242726be9660bbe48edb474a6b3ca1cd9ee4416d8bbba266cf8f6cbe337__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Quota must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51a33edf6c53ac64407bbad4a95f4ef56f6b4dea5e575a14b604e2b90ec7c7e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Whitelist deploy failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a22ec9ee55772ba2eb44070b1a6346c13cf75f7221c9dcc91f977ae929e1a583__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"NFT deploy failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_4e05df31fd91431268821f95a90fe655758d028b190dea5d874d8f56bc432cb3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Claim deploy failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c806302df1f611461003b578063b96ea12d1461007d575b600080fd5b61004e6100493660046107d7565b6100fa565b604080516001600160a01b03948516815292841660208401529216918101919091526060015b60405180910390f35b6100c561008b36600461089e565b6000602081905290815260409020805460018201546002909201546001600160a01b0391821692821691811690600160a01b900460ff1684565b60405161007494939291906001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b60008681526020819052604081206002015481908190600160a01b900460ff16156101605760405162461bcd60e51b815260206004820152601160248201527050726f6a6563742049442065786973747360781b60448201526064015b60405180910390fd5b6001600160a01b0388166101ae5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610157565b60008751116101f05760405162461bcd60e51b815260206004820152600e60248201526d456d707479204e4654206e616d6560901b6044820152606401610157565b60008651116102345760405162461bcd60e51b815260206004820152601060248201526f115b5c1d1e48139195081cde5b589bdb60821b6044820152606401610157565b600084116102785760405162461bcd60e51b8152602060048201526011602482015270051756f7461206d757374206265203e203607c1b6044820152606401610157565b60006040518060200161028a9061070b565b6020820181038252601f19601f82011660405250905060008151602083016000f090506001600160a01b0381166103035760405162461bcd60e51b815260206004820152601760248201527f57686974656c697374206465706c6f79206661696c65640000000000000000006044820152606401610157565b60405163189acdbd60e31b81523360048201526001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b50505050809450505060006040518060200161037390610718565b6020820181038252601f19601f82011660405250905060008151602083016000f090506001600160a01b0381166103e05760405162461bcd60e51b81526020600482015260116024820152701391950819195c1b1bde4819985a5b1959607a1b6044820152606401610157565b604051635c6d8da160e01b81526001600160a01b03821690635c6d8da190610413908c908c908c906000906004016108fd565b600060405180830381600087803b15801561042d57600080fd5b505af1158015610441573d6000803e3d6000fd5b50505050809350505060006040518060200161045c90610725565b6020820181038252601f19601f82011660405250905060008151602083016000f090506001600160a01b0381166104cb5760405162461bcd60e51b815260206004820152601360248201527210db185a5b4819195c1b1bde4819985a5b1959606a1b6044820152606401610157565b604051637b809f7b60e11b81523360048201526001600160a01b038b81166024830152858116604483015286811660648301526084820188905282169063f7013ef69060a401600060405180830381600087803b15801561052b57600080fd5b505af115801561053f573d6000803e3d6000fd5b5050604051634a30d3eb60e01b81526001600160a01b0380851660048301529395509286169350634a30d3eb9260240191506105789050565b600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050506040518060800160405280846001600160a01b03168152602001836001600160a01b03168152602001826001600160a01b03168152602001600115158152506000808b815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160146101000a81548160ff021916908315150217905550905050887f252140508571b30a9b5a0127624e23960717e21758b1750e83207023ff3c0eaa8484846040516106f7939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a296509650969350505050565b61066d8061095183390190565b61168280610fbe83390190565b610fb08061264083390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261075957600080fd5b813567ffffffffffffffff81111561077357610773610732565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156107a2576107a2610732565b6040528181528382016020018510156107ba57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156107f057600080fd5b8635955060208701356001600160a01b038116811461080e57600080fd5b9450604087013567ffffffffffffffff81111561082a57600080fd5b61083689828a01610748565b945050606087013567ffffffffffffffff81111561085357600080fd5b61085f89828a01610748565b935050608087013567ffffffffffffffff81111561087c57600080fd5b61088889828a01610748565b9699959850939692959460a09093013593505050565b6000602082840312156108b057600080fd5b5035919050565b6000815180845260005b818110156108dd576020818501810151868301820152016108c1565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061091060808301876108b7565b828103602084015261092281876108b7565b9050828103604084015261093681866108b7565b91505060018060a01b03831660608301529594505050505056fe6080604052348015600f57600080fd5b5061064e8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063c4d66de814610138578063e43252d71461014b578063f2fde38b1461015e57600080fd5b80632db6fa361461008d5780633af32abf146100a2578063715018a6146100e35780638ab1d681146100eb575b600080fd5b6100a061009b366004610584565b610171565b005b6100ce6100b03660046105fb565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a0610241565b6100a06100f93660046105fb565b610255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100da565b6100a06101463660046105fb565b6102a6565b6100a06101593660046105fb565b6103bf565b6100a061016c3660046105fb565b610413565b610179610456565b60005b8181101561023c57600160008085858581811061019b5761019b61062b565b90506020020160208101906101b091906105fb565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106101ea576101ea61062b565b90506020020160208101906101ff91906105fb565b6001600160a01b03167fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f60405160405180910390a260010161017c565b505050565b610249610456565b61025360006104b1565b565b61025d610456565b6001600160a01b038116600081815260208190526040808220805460ff19169055517f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb9190a250565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102ec5750825b905060008267ffffffffffffffff1660011480156103095750303b155b905081158015610317575080155b156103355760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561035f57845460ff60401b1916600160401b1785555b61036833610522565b61037186610413565b83156103b757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6103c7610456565b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f9190a250565b61041b610456565b6001600160a01b03811661044a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610453816104b1565b50565b336104887f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102535760405163118cdaa760e01b8152336004820152602401610441565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61052a610533565b6104538161057c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661025357604051631afcd79f60e31b815260040160405180910390fd5b61041b610533565b6000806020838503121561059757600080fd5b823567ffffffffffffffff8111156105ae57600080fd5b8301601f810185136105bf57600080fd5b803567ffffffffffffffff8111156105d657600080fd5b8560208260051b84010111156105eb57600080fd5b6020919091019590945092505050565b60006020828403121561060d57600080fd5b81356001600160a01b038116811461062457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300081c000a6080604052348015600f57600080fd5b506116638061001f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a257806395d89b411161007157806395d89b4114610233578063a22cb4651461023b578063b88d4fde1461024e578063c87b56dd14610261578063e985e9c51461027457600080fd5b80636352211e146101d957806366345da4146101ec5780636a627842146101ff57806370a082311461022057600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780634a30d3eb146101b35780635c6d8da1146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046110d4565b610287565b60405190151581526020015b60405180910390f35b6101406102d9565b60405161012f9190611141565b61016061015b366004611154565b61037d565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611184565b610392565b005b61018b61019b3660046111ae565b6103a1565b61018b6101ae3660046111ae565b610431565b61018b6101c13660046111eb565b610451565b61018b6101d43660046112b6565b6104cc565b6101606101e7366004611154565b6105f7565b600154610160906001600160a01b031681565b61021261020d3660046111eb565b610602565b60405190815260200161012f565b61021261022e3660046111eb565b610688565b6101406106e4565b61018b61024936600461135b565b610723565b61018b61025c366004611397565b61072e565b61014061026f366004611154565b610746565b610123610282366004611413565b6107ae565b60006001600160e01b031982166380ac58cd60e01b14806102b857506001600160e01b03198216635b5e139f60e01b145b806102d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008051602061163783398151915280546060919081906102f990611446565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611446565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505091505090565b6000610388826107fb565b506102d382610833565b61039d82823361086d565b5050565b6001600160a01b0382166103d057604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103dd83833361087a565b9050836001600160a01b0316816001600160a01b03161461042b576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103c7565b50505050565b61044c8383836040518060200160405280600081525061072e565b505050565b6001546001600160a01b0316156104aa5760405162461bcd60e51b815260206004820152601a60248201527f436c61696d20636f6e747261637420616c72656164792073657400000000000060448201526064016103c7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d6610984565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156104fe5750825b905060008267ffffffffffffffff16600114801561051b5750303b155b905081158015610529575080155b156105475760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561057157845460ff60401b1916600160401b1785555b61057b89896109ad565b600061058788826114c7565b50600180546001600160a01b0319166001600160a01b03881617815560025583156105ec57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006102d3826107fb565b6001546000906001600160a01b0316331461065f5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f7420636c61696d20636f6e74726163740000000060448201526064016103c7565b60028054908190600061067183611586565b919050555061068083826109bf565b90505b919050565b60006000805160206116378339815191526001600160a01b0383166106c3576040516322718ad960e21b8152600060048201526024016103c7565b6001600160a01b039092166000908152600390920160205250604090205490565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793018054606091600080516020611637833981519152916102f990611446565b61039d3383836109d9565b6107398484846103a1565b61042b3385858585610a8a565b6060610751826107fb565b50600061075c610bb5565b9050600081511161077c57604051806020016040528060008152506107a7565b8061078684610c47565b6040516020016107979291906115ad565b6040516020818303038152906040525b9392505050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b60008061080783610cda565b90506001600160a01b03811661068057604051637e27328960e01b8152600481018490526024016103c7565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61044c8383836001610d14565b60006000805160206116378339815191528161089585610cda565b90506001600160a01b038416156108b1576108b1818587610e2a565b6001600160a01b038116156108f1576108ce600086600080610d14565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b03861615610922576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006102d3565b6109b5610e8e565b61039d8282610eb5565b61039d828260405180602001604052806000815250610ee6565b6000805160206116378339815191526001600160a01b038316610a1a57604051630b61174360e31b81526001600160a01b03841660048201526024016103c7565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610bae57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610acc9088908890879087906004016115dc565b6020604051808303816000875af1925050508015610b07575060408051601f3d908101601f19168201909252610b0491810190611619565b60015b610b70573d808015610b35576040519150601f19603f3d011682016040523d82523d6000602084013e610b3a565b606091505b508051600003610b6857604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610bac57604051633250574960e11b81526001600160a01b03851660048201526024016103c7565b505b5050505050565b606060008054610bc490611446565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf090611446565b8015610c3d5780601f10610c1257610100808354040283529160200191610c3d565b820191906000526020600020905b815481529060010190602001808311610c2057829003601f168201915b5050505050905090565b60606000610c5483610efe565b600101905060008167ffffffffffffffff811115610c7457610c74611206565b6040519080825280601f01601f191660200182016040528015610c9e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ca857509392505050565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b6000805160206116378339815191528180610d3757506001600160a01b03831615155b15610df9576000610d47856107fb565b90506001600160a01b03841615801590610d735750836001600160a01b0316816001600160a01b031614155b8015610d865750610d8481856107ae565b155b15610daf5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016103c7565b8215610df75784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e35838383610fd6565b61044c576001600160a01b038316610e6357604051637e27328960e01b8152600481018290526024016103c7565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103c7565b610e9661103c565b610eb357604051631afcd79f60e31b815260040160405180910390fd5b565b610ebd610e8e565b60008051602061163783398151915280610ed784826114c7565b506001810161042b83826114c7565b610ef08383611056565b61044c336000858585610a8a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f3d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f69576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8757662386f26fc10000830492506010015b6305f5e1008310610f9f576305f5e100830492506008015b6127108310610fb357612710830492506004015b60648310610fc5576064830492506002015b600a83106106805760010192915050565b60006001600160a01b038316158015906110345750826001600160a01b0316846001600160a01b03161480611010575061101084846107ae565b806110345750826001600160a01b031661102983610833565b6001600160a01b0316145b949350505050565b6000611046610984565b54600160401b900460ff16919050565b6001600160a01b03821661108057604051633250574960e11b8152600060048201526024016103c7565b600061108e8383600061087a565b90506001600160a01b0381161561044c576040516339e3563760e11b8152600060048201526024016103c7565b6001600160e01b0319811681146110d157600080fd5b50565b6000602082840312156110e657600080fd5b81356107a7816110bb565b60005b8381101561110c5781810151838201526020016110f4565b50506000910152565b6000815180845261112d8160208601602086016110f1565b601f01601f19169290920160200192915050565b6020815260006107a76020830184611115565b60006020828403121561116657600080fd5b5035919050565b80356001600160a01b038116811461068357600080fd5b6000806040838503121561119757600080fd5b6111a08361116d565b946020939093013593505050565b6000806000606084860312156111c357600080fd5b6111cc8461116d565b92506111da6020850161116d565b929592945050506040919091013590565b6000602082840312156111fd57600080fd5b6107a78261116d565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561123757611237611206565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561126657611266611206565b60405283815290508082840185101561127e57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112a757600080fd5b6107a78383356020850161121c565b600080600080608085870312156112cc57600080fd5b843567ffffffffffffffff8111156112e357600080fd5b6112ef87828801611296565b945050602085013567ffffffffffffffff81111561130c57600080fd5b61131887828801611296565b935050604085013567ffffffffffffffff81111561133557600080fd5b61134187828801611296565b9250506113506060860161116d565b905092959194509250565b6000806040838503121561136e57600080fd5b6113778361116d565b91506020830135801515811461138c57600080fd5b809150509250929050565b600080600080608085870312156113ad57600080fd5b6113b68561116d565b93506113c46020860161116d565b925060408501359150606085013567ffffffffffffffff8111156113e757600080fd5b8501601f810187136113f857600080fd5b6114078782356020840161121c565b91505092959194509250565b6000806040838503121561142657600080fd5b61142f8361116d565b915061143d6020840161116d565b90509250929050565b600181811c9082168061145a57607f821691505b60208210810361147a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561044c57806000526020600020601f840160051c810160208510156114a75750805b601f840160051c820191505b81811015610bae57600081556001016114b3565b815167ffffffffffffffff8111156114e1576114e1611206565b6114f5816114ef8454611446565b84611480565b6020601f82116001811461152957600083156115115750848201515b600019600385901b1c1916600184901b178455610bae565b600084815260208120601f198516915b828110156115595787850151825560209485019460019092019101611539565b50848210156115775786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000600182016115a657634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516115bf8184602088016110f1565b8351908301906115d38183602088016110f1565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061160f90830184611115565b9695505050505050565b60006020828403121561162b57600080fd5b81516107a7816110bb56fe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300a164736f6c634300081c000a6080604052348015600f57600080fd5b50610f918061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806393e59dc11161008c578063cebe09c911610066578063cebe09c9146101c5578063f2fde38b146101dc578063f7013ef6146101ef578063fc0c546a1461020257600080fd5b806393e59dc11461016c578063b6b55f251461017f578063c884ef831461019257600080fd5b806341107b64146100d457806347ccca02146100e95780634e71d92d146101195780635312ea8e14610121578063715018a6146101345780638da5cb5b1461013c575b600080fd5b6100e76100e2366004610ce9565b610215565b005b6001546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e76102ab565b6100e761012f366004610ce9565b6104f4565b6100e7610612565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166100fc565b6002546100fc906001600160a01b031681565b6100e761018d366004610ce9565b610626565b6101b56101a0366004610d1e565b60046020526000908152604090205460ff1681565b6040519015158152602001610110565b6101ce60035481565b604051908152602001610110565b6100e76101ea366004610d1e565b610782565b6100e76101fd366004610d40565b6107c0565b6000546100fc906001600160a01b031681565b61021d610916565b600081116102665760405162461bcd60e51b8152602060048201526011602482015270051756f7461206d757374206265203e203607c1b60448201526064015b60405180910390fd5b600380549082905560408051828152602081018490527f19d6318afb32eea58ef4a200d5730cc282d7e0bd791a8ced865532f1ac4b9b0f910160405180910390a15050565b3360009081526004602052604090205460ff16156102fd5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b604482015260640161025d565b600254604051633af32abf60e01b81523360048201526001600160a01b0390911690633af32abf90602401602060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610d9c565b6103a75760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161025d565b6001546040516335313c2160e11b81523360048201526000916001600160a01b031690636a627842906024016020604051808303816000875af192505050801561040e575060408051601f3d908101601f1916820190925261040b91810190610dbe565b60015b61047c5761041a610dd7565b806308c379a003610470575061042e610e2e565b806104395750610472565b8060405160200161044a9190610ed7565b60408051601f198184030181529082905262461bcd60e51b825261025d91600401610f10565b505b3d6000803e3d6000fd5b9050336000818152600460205260408120805460ff19166001179055546003546104b3926001600160a01b03929092169190610971565b600354604080519182526020820183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a250565b6104fc610916565b600081116105415760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161025d565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190610dbe565b9050818110156105f75760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161025d565b60005461060e906001600160a01b03163384610971565b5050565b61061a610916565b6106246000610abc565b565b61062e610916565b600081116106735760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161025d565b60008054604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610dbe565b9050818110156107315760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015260640161025d565b600054610749906001600160a01b0316333085610b2d565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25050565b61078a610916565b6001600160a01b0381166107b457604051631e4fbdf760e01b81526000600482015260240161025d565b6107bd81610abc565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156108065750825b905060008267ffffffffffffffff1660011480156108235750303b155b905081158015610831575080155b1561084f5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561087957845460ff60401b1916600160401b1785555b6108828a610c87565b600080546001600160a01b03808c166001600160a01b031992831617909255600180548b841690831617905560028054928a16929091169190911790556003869055831561090a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b336109487f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146106245760405163118cdaa760e01b815233600482015260240161025d565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916109fd9190610f43565b6000604051808303816000865af19150503d8060008114610a3a576040519150601f19603f3d011682016040523d82523d6000602084013e610a3f565b606091505b5091509150818015610a69575080511580610a69575080806020019051810190610a699190610d9c565b610ab55760405162461bcd60e51b815260206004820152601d60248201527f536166655472616e736665723a205452414e534645525f4641494c4544000000604482015260640161025d565b5050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080856001600160a01b0316604051806060016040528060258152602001610f606025913980516020909101206040516001600160a01b038089166024830152871660448201526064810186905260840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610bbd9190610f43565b6000604051808303816000865af19150503d8060008114610bfa576040519150601f19603f3d011682016040523d82523d6000602084013e610bff565b606091505b5091509150818015610c29575080511580610c29575080806020019051810190610c299190610d9c565b610c7f5760405162461bcd60e51b815260206004820152602160248201527f536166655472616e7366657246726f6d3a205452414e534645525f4641494c456044820152601160fa1b606482015260840161025d565b505050505050565b610c8f610c98565b6107bd81610ce1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661062457604051631afcd79f60e31b815260040160405180910390fd5b61078a610c98565b600060208284031215610cfb57600080fd5b5035919050565b80356001600160a01b0381168114610d1957600080fd5b919050565b600060208284031215610d3057600080fd5b610d3982610d02565b9392505050565b600080600080600060a08688031215610d5857600080fd5b610d6186610d02565b9450610d6f60208701610d02565b9350610d7d60408701610d02565b9250610d8b60608701610d02565b949793965091946080013592915050565b600060208284031215610dae57600080fd5b81518015158114610d3957600080fd5b600060208284031215610dd057600080fd5b5051919050565b600060033d1115610df05760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610e2757634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610e3c5790565b6040513d600319016004823e80513d602482011167ffffffffffffffff82111715610e6657505090565b808201805167ffffffffffffffff811115610e82575050505090565b3d8401600319018282016020011115610e9c575050505090565b610eab60208285010185610df3565b509392505050565b60005b83811015610ece578181015183820152602001610eb6565b50506000910152565b70027232a1036b4b73a103330b4b632b21d1607d1b815260008251610f03816011850160208701610eb3565b9190910160110192915050565b6020815260008251806020840152610f2f816040850160208701610eb3565b601f01601f19169190910160400192915050565b60008251610f55818460208701610eb3565b919091019291505056fe7472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629a164736f6c634300081c000aa164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DF1F61 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB96EA12D EQ PUSH2 0x7D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50726F6A65637420494420657869737473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP8 MLOAD GT PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x456D707479204E4654206E616D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115B5C1D1E48139195081CDE5B589BDB PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x51756F7461206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x28A SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206465706C6F79206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x189ACDBD PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC4D66DE8 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP5 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x373 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1391950819195C1B1BDE4819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C6D8DA1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x5C6D8DA1 SWAP1 PUSH2 0x413 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP4 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x45C SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10DB185A5B4819195C1B1BDE4819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B809F7B PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP9 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xF7013EF6 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x4A30D3EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP4 SWAP6 POP SWAP3 DUP7 AND SWAP4 POP PUSH4 0x4A30D3EB SWAP3 PUSH1 0x24 ADD SWAP2 POP PUSH2 0x578 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP9 PUSH32 0x252140508571B30A9B5A0127624E23960717E21758B1750E83207023FF3C0EAA DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 POP SWAP7 POP SWAP7 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x66D DUP1 PUSH2 0x951 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x1682 DUP1 PUSH2 0xFBE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0xFB0 DUP1 PUSH2 0x2640 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A2 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x836 DUP10 DUP3 DUP11 ADD PUSH2 0x748 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85F DUP10 DUP3 DUP11 ADD PUSH2 0x748 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP10 DUP3 DUP11 ADD PUSH2 0x748 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DD JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x8C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x910 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x8B7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x922 DUP2 DUP8 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x936 DUP2 DUP7 PUSH2 0x8B7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DB6FA36 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x241 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x17C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x249 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x253 PUSH1 0x0 PUSH2 0x4B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x25D PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x24A12366C02E13FE4A9E03D86A8952E85BB74A456C16E4A18B6D8295700B74BB SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x309 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x35F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x368 CALLER PUSH2 0x522 JUMP JUMPDEST PUSH2 0x371 DUP7 PUSH2 0x413 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3B7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x41B PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x4B1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x488 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x441 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x533 JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x57C JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41B PUSH2 0x533 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1663 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x66345DA4 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4A30D3EB EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x5C6D8DA1 EQ PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1184 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x212 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH2 0x2D3 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 CALLER PUSH2 0x86D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DD DUP4 DUP4 CALLER PUSH2 0x87A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20636F6E747261637420616C726561647920736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 PUSH2 0x984 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x51B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x529 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x571 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x57B DUP10 DUP10 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 DUP9 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR DUP2 SSTORE PUSH1 0x2 SSTORE DUP4 ISZERO PUSH2 0x5EC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420636C61696D20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x671 DUP4 PUSH2 0x1586 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x680 DUP4 DUP3 PUSH2 0x9BF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079301 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2F9 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x39D CALLER DUP4 DUP4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x739 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x42B CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x751 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x75C PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH2 0x786 DUP5 PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x797 SWAP3 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079305 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x807 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079304 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x44C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x895 DUP6 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B1 DUP2 DUP6 DUP8 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x8CE PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x922 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP9 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x39D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xACC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB07 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB04 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB70 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF0 SWAP1 PUSH2 0x1446 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC54 DUP4 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC74 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCA8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 PUSH2 0xD37 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 PUSH2 0xD47 DUP6 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD73 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD86 JUMPI POP PUSH2 0xD84 DUP2 DUP6 PUSH2 0x7AE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xDF7 JUMPI DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE35 DUP4 DUP4 DUP4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x44C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0xE96 PUSH2 0x103C JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xEBD PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH2 0xED7 DUP5 DUP3 PUSH2 0x14C7 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0x42B DUP4 DUP3 PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0xEF0 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x44C CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF3D JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF69 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF87 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF9F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFB3 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFC5 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x680 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1010 JUMPI POP PUSH2 0x1010 DUP5 DUP5 PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH2 0x1034 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1029 DUP4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 PUSH2 0x984 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108E DUP4 DUP4 PUSH1 0x0 PUSH2 0x87A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10F4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x112D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A0 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11CC DUP5 PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH2 0x11DA PUSH1 0x20 DUP6 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1237 PUSH2 0x1206 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x127E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x121C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EF DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1341 DUP8 DUP3 DUP9 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1350 PUSH1 0x60 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1377 DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B6 DUP6 PUSH2 0x116D JUMP JUMPDEST SWAP4 POP PUSH2 0x13C4 PUSH1 0x20 DUP7 ADD PUSH2 0x116D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1407 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x121C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142F DUP4 PUSH2 0x116D JUMP JUMPDEST SWAP2 POP PUSH2 0x143D PUSH1 0x20 DUP5 ADD PUSH2 0x116D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x145A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x147A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x44C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x14A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14B3 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x14F5 DUP2 PUSH2 0x14EF DUP5 SLOAD PUSH2 0x1446 JUMP JUMPDEST DUP5 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1529 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1511 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1559 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1539 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1577 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x15BF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x15D3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10F1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x160F SWAP1 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7A7 DUP2 PUSH2 0x10BB JUMP INVALID DUP1 0xBB 0x2B PUSH4 0x8CC20BC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079300A164736F6C634300081C000A60806040 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF91 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93E59DC1 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCEBE09C9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCEBE09C9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF7013EF6 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93E59DC1 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41107B64 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x612 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x1CE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x51756F7461206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x19D6318AFB32EEA58EF4A200D5730CC282D7E0BD791A8CED865532F1AC4B9B0F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3AF32ABF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3AF32ABF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6A627842 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x40E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x40B SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x47C JUMPI PUSH2 0x41A PUSH2 0xDD7 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x470 JUMPI POP PUSH2 0x42E PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH2 0x439 JUMPI POP PUSH2 0x472 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x25D SWAP2 PUSH1 0x4 ADD PUSH2 0xF10 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD PUSH1 0x3 SLOAD PUSH2 0x4B3 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x60E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x971 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x61A PUSH2 0x916 JUMP JUMPDEST PUSH2 0x624 PUSH1 0x0 PUSH2 0xABC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x62E PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x749 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x78A PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xABC JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x823 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x879 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x882 DUP11 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x90A JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x948 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP8 AND SWAP2 PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xA69 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xA69 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA69 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E736665723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF60 PUSH1 0x25 SWAP2 CODECOPY DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x24 DUP4 ADD MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xC29 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166655472616E7366657246726F6D3A205452414E534645525F4641494C45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x7BD DUP2 PUSH2 0xCE1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD39 DUP3 PUSH2 0xD02 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD61 DUP7 PUSH2 0xD02 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6F PUSH1 0x20 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP4 POP PUSH2 0xD7D PUSH1 0x40 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8B PUSH1 0x60 DUP8 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0xE3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE66 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE82 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP3 DUP3 ADD PUSH1 0x20 ADD GT ISZERO PUSH2 0xE9C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xEAB PUSH1 0x20 DUP3 DUP6 ADD ADD DUP6 PUSH2 0xDF3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH17 0x27232A1036B4B73A103330B4B632B21D1 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0xF03 DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x11 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF2F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF55 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH21 0x72616E7366657246726F6D28616464726573732C61 PUSH5 0x6472657373 0x2C PUSH22 0x696E7432353629A164736F6C634300081C000AA16473 PUSH16 0x6C634300081C000A0000000000000000 ","sourceMap":"132:3031:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:2547;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2275:32:26;;;2257:51;;2344:32;;;2339:2;2324:18;;2317:60;2413:32;;2393:18;;;2386:60;;;;2245:2;2230:18;614:2547:23;;;;;;;;280:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;280:47:23;;;;;;;;;;-1:-1:-1;;;280:47:23;;;;;;;;;;;;;;;-1:-1:-1;;;;;2931:32:26;;;2913:51;;3000:32;;;2995:2;2980:18;;2973:60;3069:32;;3064:2;3049:18;;3042:60;3145:14;;3138:22;3133:2;3118:18;;3111:50;2900:3;2885:19;;2688:479;614:2547:23;870:25;997:19;;;;;;;;;;:26;;;870:25;;;;-1:-1:-1;;;997:26:23;;;;996:27;988:57;;;;-1:-1:-1;;;988:57:23;;3374:2:26;988:57:23;;;3356:21:26;3413:2;3393:18;;;3386:30;-1:-1:-1;;;3432:18:26;;;3425:47;3489:18;;988:57:23;;;;;;;;;-1:-1:-1;;;;;1063:26:23;;1055:60;;;;-1:-1:-1;;;1055:60:23;;3720:2:26;1055:60:23;;;3702:21:26;3759:2;3739:18;;;3732:30;-1:-1:-1;;;3778:18:26;;;3771:51;3839:18;;1055:60:23;3518:345:26;1055:60:23;1157:1;1139:7;1133:21;:25;1125:52;;;;-1:-1:-1;;;1125:52:23;;4070:2:26;1125:52:23;;;4052:21:26;4109:2;4089:18;;;4082:30;-1:-1:-1;;;4128:18:26;;;4121:44;4182:18;;1125:52:23;3868:338:26;1125:52:23;1221:1;1201:9;1195:23;:27;1187:56;;;;-1:-1:-1;;;1187:56:23;;4413:2:26;1187:56:23;;;4395:21:26;4452:2;4432:18;;;4425:30;-1:-1:-1;;;4471:18:26;;;4464:46;4527:18;;1187:56:23;4211:340:26;1187:56:23;1274:1;1261:10;:14;1253:44;;;;-1:-1:-1;;;1253:44:23;;4758:2:26;1253:44:23;;;4740:21:26;4797:2;4777:18;;;4770:30;-1:-1:-1;;;4816:18:26;;;4809:47;4873:18;;1253:44:23;4556:341:26;1253:44:23;1365:19;1387:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1365:50;;1429:20;1533:6;1527:13;1520:4;1512:6;1508:17;1505:1;1498:43;1490:51;-1:-1:-1;;;;;;1576:18:23;;1568:54;;;;-1:-1:-1;;;1568:54:23;;5104:2:26;1568:54:23;;;5086:21:26;5143:2;5123:18;;;5116:30;5182:25;5162:18;;;5155:53;5225:18;;1568:54:23;4902:347:26;1568:54:23;1636:38;;-1:-1:-1;;;1636:38:23;;1663:10;1636:38;;;5400:51:26;-1:-1:-1;;;;;1636:26:23;;;;;5373:18:26;;1636:38:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:4;1688:24;;1351:372;;1820:20;1843:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1820:51;;1885:20;1990:7;1984:14;1977:4;1968:7;1964:18;1961:1;1954:45;1946:53;-1:-1:-1;;;;;;2034:18:23;;2026:48;;;;-1:-1:-1;;;2026:48:23;;5664:2:26;2026:48:23;;;5646:21:26;5703:2;5683:18;;;5676:30;-1:-1:-1;;;5722:18:26;;;5715:47;5779:18;;2026:48:23;5462:341:26;2026:48:23;2088:67;;-1:-1:-1;;;2088:67:23;;-1:-1:-1;;;;;2088:26:23;;;;;:67;;2115:7;;2124:9;;2135:7;;2152:1;;2088:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:4;2169:18;;1806:392;;2287:19;2309:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2287:46;;2347:20;2451:6;2445:13;2438:4;2430:6;2426:17;2423:1;2416:43;2408:51;-1:-1:-1;;;;;;2494:18:23;;2486:50;;;;-1:-1:-1;;;2486:50:23;;7065:2:26;2486:50:23;;;7047:21:26;7104:2;7084:18;;;7077:30;-1:-1:-1;;;7123:18:26;;;7116:49;7182:18;;2486:50:23;6863:343:26;2486:50:23;2550:92;;-1:-1:-1;;;2550:92:23;;2573:10;2550:92;;;7470:51:26;-1:-1:-1;;;;;7557:32:26;;;7537:18;;;7530:60;7626:32;;;7606:18;;;7599:60;7695:32;;;7675:18;;;7668:60;7744:19;;;7737:35;;;2550:22:23;;;;;7442:19:26;;2550:92:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2732:54:23;;-1:-1:-1;;;2732:54:23;;-1:-1:-1;;;;;5418:32:26;;;2732:54:23;;;5400:51:26;2672:4:23;;-1:-1:-1;2732:39:23;;;;-1:-1:-1;2732:39:23;;5373:18:26;;;-1:-1:-1;2732:54:23;;-1:-1:-1;5254:203:26;2732:54:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:155;;;;;;;;2883:17;-1:-1:-1;;;;;2846:155:23;;;;;2919:11;-1:-1:-1;;;;;2846:155:23;;;;;2951:13;-1:-1:-1;;;;;2846:155:23;;;;;2986:4;2846:155;;;;;2824:8;:19;2833:9;2824:19;;;;;;;;;;;:177;;;;;;;;;;;;;-1:-1:-1;;;;;2824:177:23;;;;;-1:-1:-1;;;;;2824:177:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2824:177:23;;;;;-1:-1:-1;;;;;2824:177:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2824:177:23;;;;;-1:-1:-1;;;;;2824:177:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:9;3017:73;3044:17;3063:11;3076:13;3017:73;;;;;;;-1:-1:-1;;;;;2275:32:26;;;2257:51;;2344:32;;;2339:2;2324:18;;2317:60;2413:32;;;2408:2;2393:18;;2386:60;2245:2;2230:18;;2055:397;3017:73:23;;;;;;;;614:2547;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:726;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;300:6;287:20;330:18;322:6;319:30;316:56;;;352:18;;:::i;:::-;401:2;395:9;493:2;455:17;;-1:-1:-1;;451:31:26;;;484:2;447:40;443:54;431:67;;528:18;513:34;;549:22;;;510:62;507:88;;;575:18;;:::i;:::-;611:2;604:22;635;;;676:19;;;697:4;672:30;669:39;-1:-1:-1;666:59:26;;;721:1;718;711:12;666:59;785:6;778:4;770:6;766:17;759:4;751:6;747:17;734:58;840:1;812:19;;;833:4;808:30;801:41;;;;816:6;146:726;-1:-1:-1;;;146:726:26:o;877:1173::-;1011:6;1019;1027;1035;1043;1051;1104:3;1092:9;1083:7;1079:23;1075:33;1072:53;;;1121:1;1118;1111:12;1072:53;1166:23;;;-1:-1:-1;1265:2:26;1250:18;;1237:32;-1:-1:-1;;;;;1300:33:26;;1288:46;;1278:74;;1348:1;1345;1338:12;1278:74;1371:7;-1:-1:-1;1429:2:26;1414:18;;1401:32;1456:18;1445:30;;1442:50;;;1488:1;1485;1478:12;1442:50;1511;1553:7;1544:6;1533:9;1529:22;1511:50;:::i;:::-;1501:60;;;1614:2;1603:9;1599:18;1586:32;1643:18;1633:8;1630:32;1627:52;;;1675:1;1672;1665:12;1627:52;1698;1742:7;1731:8;1720:9;1716:24;1698:52;:::i;:::-;1688:62;;;1803:3;1792:9;1788:19;1775:33;1833:18;1823:8;1820:32;1817:52;;;1865:1;1862;1855:12;1817:52;1888;1932:7;1921:8;1910:9;1906:24;1888:52;:::i;:::-;877:1173;;;;-1:-1:-1;877:1173:26;;;;;2013:3;1998:19;;;1985:33;;-1:-1:-1;;;877:1173:26:o;2457:226::-;2516:6;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;-1:-1:-1;2630:23:26;;2457:226;-1:-1:-1;2457:226:26:o;5808:400::-;5850:3;5888:5;5882:12;5915:6;5910:3;5903:19;5940:1;5950:139;5964:6;5961:1;5958:13;5950:139;;;6072:4;6057:13;;;6053:24;;6047:31;6027:11;;;6023:22;;6016:63;5979:12;5950:139;;;5954:3;6134:1;6127:4;6118:6;6113:3;6109:16;6105:27;6098:38;6197:4;6190:2;6186:7;6181:2;6173:6;6169:15;6165:29;6160:3;6156:39;6152:50;6145:57;;;5808:400;;;;:::o;6213:645::-;6486:3;6475:9;6468:22;6449:4;6513:46;6554:3;6543:9;6539:19;6531:6;6513:46;:::i;:::-;6607:9;6599:6;6595:22;6590:2;6579:9;6575:18;6568:50;6641:33;6667:6;6659;6641:33;:::i;:::-;6627:47;;6722:9;6714:6;6710:22;6705:2;6694:9;6690:18;6683:50;6750:33;6776:6;6768;6750:33;:::i;:::-;6742:41;;;6848:1;6844;6839:3;6835:11;6831:19;6823:6;6819:32;6814:2;6803:9;6799:18;6792:60;6213:645;;;;;;;:::o"},"methodIdentifiers":{"createProject(bytes32,address,string,string,string,uint256)":"02df1f61","projects(bytes32)":"b96ea12d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"whitelistContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimContract\",\"type\":\"address\"}],\"name\":\"ProjectDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nftName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nftSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"claimQuota\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"whitelistContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"whitelist\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claim\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createProject(bytes32,address,string,string,string,uint256)\":{\"notice\":\"\\u521b\\u5efa\\u4e00\\u4e2a\\u65b0\\u7684\\u9879\\u76ee\\uff0c\\u90e8\\u7f72\\u5e76\\u521d\\u59cb\\u5316 Whitelist\\u3001CustomNFT \\u548c Claim \\u5408\\u7ea6\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory3.sol\":\"Factory3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Claim.sol\":{\"keccak256\":\"0xd10e56725798f33cc3fdd058db665662cec9878b2feb18cada37ba2091d8193e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1547017f8e27b48202ababd36699fd51d6ba998f3a5445ae0b7d9c0948875916\",\"dweb:/ipfs/QmZWNchYMT5H8KVUbkvMmNLT5nTUAK6EZ5XGnj2Ee9p6U6\"]},\"contracts/CustomNFT.sol\":{\"keccak256\":\"0xece65efa74d4ee7bd653ed59e9cef18ed071193a7bf5e1d4f2c2724a7788c580\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1465c09f51325173288682463551704b5e92e9807a90d260ab3f195e6ff41928\",\"dweb:/ipfs/QmYUnkfsj4S87sNsQUvHaMur45n1sV4DBSVsrwBgYcMzDt\"]},\"contracts/Factory3.sol\":{\"keccak256\":\"0xb756da4383eaa303df2bcf5132d61cb0d27e768dea46994f9f4869824195cebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb701878e88bd6442b0c0db22f1d25df9ecb914b6d477111836f17be32dc3015\",\"dweb:/ipfs/QmRNLPAQ3hz9gKJcyT9ZPgUX17PeRjpb5MzJfcXV8XKCVc\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0x7b6b701e924ac47a7627e210b4058839c63ef21f2a7a798ca76d0f5092e720e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8632e8cd782750d9090790d106da9f2114d6bbee48adef60399256383b489956\",\"dweb:/ipfs/QmXFgD7c7HPRmy1HqwXhxJZxoqtoyeUP9Z19W46xpee3E5\"]}},\"version\":1}"}},"contracts/Mytoken.sol":{"MyToken":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"uint256","name":"initialSupply_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1679":{"entryPoint":null,"id":1679,"parameterSlots":1,"returnSlots":0},"@_1965":{"entryPoint":null,"id":1965,"parameterSlots":2,"returnSlots":0},"@_8617":{"entryPoint":null,"id":8617,"parameterSlots":4,"returnSlots":0},"@_mint_2268":{"entryPoint":260,"id":2268,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1775":{"entryPoint":178,"id":1775,"parameterSlots":1,"returnSlots":0},"@_update_2235":{"entryPoint":318,"id":2235,"parameterSlots":3,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory":{"entryPoint":801,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1265,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":996,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1075,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":938,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":616,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5232:26","nodeType":"YulBlock","src":"0:5232:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"46:95:26","nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:26","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:26","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:26","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:26","nodeType":"YulIdentifier","src":"66:3:26"},"nativeSrc":"66:20:26","nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nativeSrc":"56:6:26","nodeType":"YulIdentifier","src":"56:6:26"},"nativeSrc":"56:31:26","nodeType":"YulFunctionCall","src":"56:31:26"},"nativeSrc":"56:31:26","nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:26","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:26","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:26","nodeType":"YulIdentifier","src":"96:6:26"},"nativeSrc":"96:15:26","nodeType":"YulFunctionCall","src":"96:15:26"},"nativeSrc":"96:15:26","nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:26","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:26","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:26","nodeType":"YulIdentifier","src":"120:6:26"},"nativeSrc":"120:15:26","nodeType":"YulFunctionCall","src":"120:15:26"},"nativeSrc":"120:15:26","nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nativeSrc":"14:127:26","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nativeSrc":"210:770:26","nodeType":"YulBlock","src":"210:770:26","statements":[{"body":{"nativeSrc":"259:16:26","nodeType":"YulBlock","src":"259:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"268:1:26","nodeType":"YulLiteral","src":"268:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"271:1:26","nodeType":"YulLiteral","src":"271:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"261:6:26","nodeType":"YulIdentifier","src":"261:6:26"},"nativeSrc":"261:12:26","nodeType":"YulFunctionCall","src":"261:12:26"},"nativeSrc":"261:12:26","nodeType":"YulExpressionStatement","src":"261:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"238:6:26","nodeType":"YulIdentifier","src":"238:6:26"},{"kind":"number","nativeSrc":"246:4:26","nodeType":"YulLiteral","src":"246:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"234:3:26","nodeType":"YulIdentifier","src":"234:3:26"},"nativeSrc":"234:17:26","nodeType":"YulFunctionCall","src":"234:17:26"},{"name":"end","nativeSrc":"253:3:26","nodeType":"YulIdentifier","src":"253:3:26"}],"functionName":{"name":"slt","nativeSrc":"230:3:26","nodeType":"YulIdentifier","src":"230:3:26"},"nativeSrc":"230:27:26","nodeType":"YulFunctionCall","src":"230:27:26"}],"functionName":{"name":"iszero","nativeSrc":"223:6:26","nodeType":"YulIdentifier","src":"223:6:26"},"nativeSrc":"223:35:26","nodeType":"YulFunctionCall","src":"223:35:26"},"nativeSrc":"220:55:26","nodeType":"YulIf","src":"220:55:26"},{"nativeSrc":"284:27:26","nodeType":"YulVariableDeclaration","src":"284:27:26","value":{"arguments":[{"name":"offset","nativeSrc":"304:6:26","nodeType":"YulIdentifier","src":"304:6:26"}],"functionName":{"name":"mload","nativeSrc":"298:5:26","nodeType":"YulIdentifier","src":"298:5:26"},"nativeSrc":"298:13:26","nodeType":"YulFunctionCall","src":"298:13:26"},"variables":[{"name":"length","nativeSrc":"288:6:26","nodeType":"YulTypedName","src":"288:6:26","type":""}]},{"body":{"nativeSrc":"354:22:26","nodeType":"YulBlock","src":"354:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"356:16:26","nodeType":"YulIdentifier","src":"356:16:26"},"nativeSrc":"356:18:26","nodeType":"YulFunctionCall","src":"356:18:26"},"nativeSrc":"356:18:26","nodeType":"YulExpressionStatement","src":"356:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"326:6:26","nodeType":"YulIdentifier","src":"326:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"342:2:26","nodeType":"YulLiteral","src":"342:2:26","type":"","value":"64"},{"kind":"number","nativeSrc":"346:1:26","nodeType":"YulLiteral","src":"346:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"338:3:26","nodeType":"YulIdentifier","src":"338:3:26"},"nativeSrc":"338:10:26","nodeType":"YulFunctionCall","src":"338:10:26"},{"kind":"number","nativeSrc":"350:1:26","nodeType":"YulLiteral","src":"350:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"334:3:26","nodeType":"YulIdentifier","src":"334:3:26"},"nativeSrc":"334:18:26","nodeType":"YulFunctionCall","src":"334:18:26"}],"functionName":{"name":"gt","nativeSrc":"323:2:26","nodeType":"YulIdentifier","src":"323:2:26"},"nativeSrc":"323:30:26","nodeType":"YulFunctionCall","src":"323:30:26"},"nativeSrc":"320:56:26","nodeType":"YulIf","src":"320:56:26"},{"nativeSrc":"385:23:26","nodeType":"YulVariableDeclaration","src":"385:23:26","value":{"arguments":[{"kind":"number","nativeSrc":"405:2:26","nodeType":"YulLiteral","src":"405:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"399:5:26","nodeType":"YulIdentifier","src":"399:5:26"},"nativeSrc":"399:9:26","nodeType":"YulFunctionCall","src":"399:9:26"},"variables":[{"name":"memPtr","nativeSrc":"389:6:26","nodeType":"YulTypedName","src":"389:6:26","type":""}]},{"nativeSrc":"417:85:26","nodeType":"YulVariableDeclaration","src":"417:85:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"439:6:26","nodeType":"YulIdentifier","src":"439:6:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"463:6:26","nodeType":"YulIdentifier","src":"463:6:26"},{"kind":"number","nativeSrc":"471:4:26","nodeType":"YulLiteral","src":"471:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"459:3:26","nodeType":"YulIdentifier","src":"459:3:26"},"nativeSrc":"459:17:26","nodeType":"YulFunctionCall","src":"459:17:26"},{"arguments":[{"kind":"number","nativeSrc":"482:2:26","nodeType":"YulLiteral","src":"482:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"478:3:26","nodeType":"YulIdentifier","src":"478:3:26"},"nativeSrc":"478:7:26","nodeType":"YulFunctionCall","src":"478:7:26"}],"functionName":{"name":"and","nativeSrc":"455:3:26","nodeType":"YulIdentifier","src":"455:3:26"},"nativeSrc":"455:31:26","nodeType":"YulFunctionCall","src":"455:31:26"},{"kind":"number","nativeSrc":"488:2:26","nodeType":"YulLiteral","src":"488:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"451:3:26","nodeType":"YulIdentifier","src":"451:3:26"},"nativeSrc":"451:40:26","nodeType":"YulFunctionCall","src":"451:40:26"},{"arguments":[{"kind":"number","nativeSrc":"497:2:26","nodeType":"YulLiteral","src":"497:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"493:3:26","nodeType":"YulIdentifier","src":"493:3:26"},"nativeSrc":"493:7:26","nodeType":"YulFunctionCall","src":"493:7:26"}],"functionName":{"name":"and","nativeSrc":"447:3:26","nodeType":"YulIdentifier","src":"447:3:26"},"nativeSrc":"447:54:26","nodeType":"YulFunctionCall","src":"447:54:26"}],"functionName":{"name":"add","nativeSrc":"435:3:26","nodeType":"YulIdentifier","src":"435:3:26"},"nativeSrc":"435:67:26","nodeType":"YulFunctionCall","src":"435:67:26"},"variables":[{"name":"newFreePtr","nativeSrc":"421:10:26","nodeType":"YulTypedName","src":"421:10:26","type":""}]},{"body":{"nativeSrc":"577:22:26","nodeType":"YulBlock","src":"577:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"579:16:26","nodeType":"YulIdentifier","src":"579:16:26"},"nativeSrc":"579:18:26","nodeType":"YulFunctionCall","src":"579:18:26"},"nativeSrc":"579:18:26","nodeType":"YulExpressionStatement","src":"579:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"520:10:26","nodeType":"YulIdentifier","src":"520:10:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"540:2:26","nodeType":"YulLiteral","src":"540:2:26","type":"","value":"64"},{"kind":"number","nativeSrc":"544:1:26","nodeType":"YulLiteral","src":"544:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"536:3:26","nodeType":"YulIdentifier","src":"536:3:26"},"nativeSrc":"536:10:26","nodeType":"YulFunctionCall","src":"536:10:26"},{"kind":"number","nativeSrc":"548:1:26","nodeType":"YulLiteral","src":"548:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"532:3:26","nodeType":"YulIdentifier","src":"532:3:26"},"nativeSrc":"532:18:26","nodeType":"YulFunctionCall","src":"532:18:26"}],"functionName":{"name":"gt","nativeSrc":"517:2:26","nodeType":"YulIdentifier","src":"517:2:26"},"nativeSrc":"517:34:26","nodeType":"YulFunctionCall","src":"517:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"556:10:26","nodeType":"YulIdentifier","src":"556:10:26"},{"name":"memPtr","nativeSrc":"568:6:26","nodeType":"YulIdentifier","src":"568:6:26"}],"functionName":{"name":"lt","nativeSrc":"553:2:26","nodeType":"YulIdentifier","src":"553:2:26"},"nativeSrc":"553:22:26","nodeType":"YulFunctionCall","src":"553:22:26"}],"functionName":{"name":"or","nativeSrc":"514:2:26","nodeType":"YulIdentifier","src":"514:2:26"},"nativeSrc":"514:62:26","nodeType":"YulFunctionCall","src":"514:62:26"},"nativeSrc":"511:88:26","nodeType":"YulIf","src":"511:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"615:2:26","nodeType":"YulLiteral","src":"615:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"619:10:26","nodeType":"YulIdentifier","src":"619:10:26"}],"functionName":{"name":"mstore","nativeSrc":"608:6:26","nodeType":"YulIdentifier","src":"608:6:26"},"nativeSrc":"608:22:26","nodeType":"YulFunctionCall","src":"608:22:26"},"nativeSrc":"608:22:26","nodeType":"YulExpressionStatement","src":"608:22:26"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"646:6:26","nodeType":"YulIdentifier","src":"646:6:26"},{"name":"length","nativeSrc":"654:6:26","nodeType":"YulIdentifier","src":"654:6:26"}],"functionName":{"name":"mstore","nativeSrc":"639:6:26","nodeType":"YulIdentifier","src":"639:6:26"},"nativeSrc":"639:22:26","nodeType":"YulFunctionCall","src":"639:22:26"},"nativeSrc":"639:22:26","nodeType":"YulExpressionStatement","src":"639:22:26"},{"body":{"nativeSrc":"713:16:26","nodeType":"YulBlock","src":"713:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"722:1:26","nodeType":"YulLiteral","src":"722:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"725:1:26","nodeType":"YulLiteral","src":"725:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"715:6:26","nodeType":"YulIdentifier","src":"715:6:26"},"nativeSrc":"715:12:26","nodeType":"YulFunctionCall","src":"715:12:26"},"nativeSrc":"715:12:26","nodeType":"YulExpressionStatement","src":"715:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"684:6:26","nodeType":"YulIdentifier","src":"684:6:26"},{"name":"length","nativeSrc":"692:6:26","nodeType":"YulIdentifier","src":"692:6:26"}],"functionName":{"name":"add","nativeSrc":"680:3:26","nodeType":"YulIdentifier","src":"680:3:26"},"nativeSrc":"680:19:26","nodeType":"YulFunctionCall","src":"680:19:26"},{"kind":"number","nativeSrc":"701:4:26","nodeType":"YulLiteral","src":"701:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"676:3:26","nodeType":"YulIdentifier","src":"676:3:26"},"nativeSrc":"676:30:26","nodeType":"YulFunctionCall","src":"676:30:26"},{"name":"end","nativeSrc":"708:3:26","nodeType":"YulIdentifier","src":"708:3:26"}],"functionName":{"name":"gt","nativeSrc":"673:2:26","nodeType":"YulIdentifier","src":"673:2:26"},"nativeSrc":"673:39:26","nodeType":"YulFunctionCall","src":"673:39:26"},"nativeSrc":"670:59:26","nodeType":"YulIf","src":"670:59:26"},{"nativeSrc":"738:10:26","nodeType":"YulVariableDeclaration","src":"738:10:26","value":{"kind":"number","nativeSrc":"747:1:26","nodeType":"YulLiteral","src":"747:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"742:1:26","nodeType":"YulTypedName","src":"742:1:26","type":""}]},{"body":{"nativeSrc":"809:91:26","nodeType":"YulBlock","src":"809:91:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"838:6:26","nodeType":"YulIdentifier","src":"838:6:26"},{"name":"i","nativeSrc":"846:1:26","nodeType":"YulIdentifier","src":"846:1:26"}],"functionName":{"name":"add","nativeSrc":"834:3:26","nodeType":"YulIdentifier","src":"834:3:26"},"nativeSrc":"834:14:26","nodeType":"YulFunctionCall","src":"834:14:26"},{"kind":"number","nativeSrc":"850:4:26","nodeType":"YulLiteral","src":"850:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"830:3:26","nodeType":"YulIdentifier","src":"830:3:26"},"nativeSrc":"830:25:26","nodeType":"YulFunctionCall","src":"830:25:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"871:6:26","nodeType":"YulIdentifier","src":"871:6:26"},{"name":"i","nativeSrc":"879:1:26","nodeType":"YulIdentifier","src":"879:1:26"}],"functionName":{"name":"add","nativeSrc":"867:3:26","nodeType":"YulIdentifier","src":"867:3:26"},"nativeSrc":"867:14:26","nodeType":"YulFunctionCall","src":"867:14:26"},{"kind":"number","nativeSrc":"883:4:26","nodeType":"YulLiteral","src":"883:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"863:3:26","nodeType":"YulIdentifier","src":"863:3:26"},"nativeSrc":"863:25:26","nodeType":"YulFunctionCall","src":"863:25:26"}],"functionName":{"name":"mload","nativeSrc":"857:5:26","nodeType":"YulIdentifier","src":"857:5:26"},"nativeSrc":"857:32:26","nodeType":"YulFunctionCall","src":"857:32:26"}],"functionName":{"name":"mstore","nativeSrc":"823:6:26","nodeType":"YulIdentifier","src":"823:6:26"},"nativeSrc":"823:67:26","nodeType":"YulFunctionCall","src":"823:67:26"},"nativeSrc":"823:67:26","nodeType":"YulExpressionStatement","src":"823:67:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"768:1:26","nodeType":"YulIdentifier","src":"768:1:26"},{"name":"length","nativeSrc":"771:6:26","nodeType":"YulIdentifier","src":"771:6:26"}],"functionName":{"name":"lt","nativeSrc":"765:2:26","nodeType":"YulIdentifier","src":"765:2:26"},"nativeSrc":"765:13:26","nodeType":"YulFunctionCall","src":"765:13:26"},"nativeSrc":"757:143:26","nodeType":"YulForLoop","post":{"nativeSrc":"779:21:26","nodeType":"YulBlock","src":"779:21:26","statements":[{"nativeSrc":"781:17:26","nodeType":"YulAssignment","src":"781:17:26","value":{"arguments":[{"name":"i","nativeSrc":"790:1:26","nodeType":"YulIdentifier","src":"790:1:26"},{"kind":"number","nativeSrc":"793:4:26","nodeType":"YulLiteral","src":"793:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"786:3:26","nodeType":"YulIdentifier","src":"786:3:26"},"nativeSrc":"786:12:26","nodeType":"YulFunctionCall","src":"786:12:26"},"variableNames":[{"name":"i","nativeSrc":"781:1:26","nodeType":"YulIdentifier","src":"781:1:26"}]}]},"pre":{"nativeSrc":"761:3:26","nodeType":"YulBlock","src":"761:3:26","statements":[]},"src":"757:143:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"924:6:26","nodeType":"YulIdentifier","src":"924:6:26"},{"name":"length","nativeSrc":"932:6:26","nodeType":"YulIdentifier","src":"932:6:26"}],"functionName":{"name":"add","nativeSrc":"920:3:26","nodeType":"YulIdentifier","src":"920:3:26"},"nativeSrc":"920:19:26","nodeType":"YulFunctionCall","src":"920:19:26"},{"kind":"number","nativeSrc":"941:4:26","nodeType":"YulLiteral","src":"941:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"916:3:26","nodeType":"YulIdentifier","src":"916:3:26"},"nativeSrc":"916:30:26","nodeType":"YulFunctionCall","src":"916:30:26"},{"kind":"number","nativeSrc":"948:1:26","nodeType":"YulLiteral","src":"948:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"909:6:26","nodeType":"YulIdentifier","src":"909:6:26"},"nativeSrc":"909:41:26","nodeType":"YulFunctionCall","src":"909:41:26"},"nativeSrc":"909:41:26","nodeType":"YulExpressionStatement","src":"909:41:26"},{"nativeSrc":"959:15:26","nodeType":"YulAssignment","src":"959:15:26","value":{"name":"memPtr","nativeSrc":"968:6:26","nodeType":"YulIdentifier","src":"968:6:26"},"variableNames":[{"name":"array","nativeSrc":"959:5:26","nodeType":"YulIdentifier","src":"959:5:26"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"146:834:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"184:6:26","nodeType":"YulTypedName","src":"184:6:26","type":""},{"name":"end","nativeSrc":"192:3:26","nodeType":"YulTypedName","src":"192:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"200:5:26","nodeType":"YulTypedName","src":"200:5:26","type":""}],"src":"146:834:26"},{"body":{"nativeSrc":"1135:619:26","nodeType":"YulBlock","src":"1135:619:26","statements":[{"body":{"nativeSrc":"1182:16:26","nodeType":"YulBlock","src":"1182:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1191:1:26","nodeType":"YulLiteral","src":"1191:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1194:1:26","nodeType":"YulLiteral","src":"1194:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1184:6:26","nodeType":"YulIdentifier","src":"1184:6:26"},"nativeSrc":"1184:12:26","nodeType":"YulFunctionCall","src":"1184:12:26"},"nativeSrc":"1184:12:26","nodeType":"YulExpressionStatement","src":"1184:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1156:7:26","nodeType":"YulIdentifier","src":"1156:7:26"},{"name":"headStart","nativeSrc":"1165:9:26","nodeType":"YulIdentifier","src":"1165:9:26"}],"functionName":{"name":"sub","nativeSrc":"1152:3:26","nodeType":"YulIdentifier","src":"1152:3:26"},"nativeSrc":"1152:23:26","nodeType":"YulFunctionCall","src":"1152:23:26"},{"kind":"number","nativeSrc":"1177:3:26","nodeType":"YulLiteral","src":"1177:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1148:3:26","nodeType":"YulIdentifier","src":"1148:3:26"},"nativeSrc":"1148:33:26","nodeType":"YulFunctionCall","src":"1148:33:26"},"nativeSrc":"1145:53:26","nodeType":"YulIf","src":"1145:53:26"},{"nativeSrc":"1207:30:26","nodeType":"YulVariableDeclaration","src":"1207:30:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1227:9:26","nodeType":"YulIdentifier","src":"1227:9:26"}],"functionName":{"name":"mload","nativeSrc":"1221:5:26","nodeType":"YulIdentifier","src":"1221:5:26"},"nativeSrc":"1221:16:26","nodeType":"YulFunctionCall","src":"1221:16:26"},"variables":[{"name":"offset","nativeSrc":"1211:6:26","nodeType":"YulTypedName","src":"1211:6:26","type":""}]},{"body":{"nativeSrc":"1280:16:26","nodeType":"YulBlock","src":"1280:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1289:1:26","nodeType":"YulLiteral","src":"1289:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1292:1:26","nodeType":"YulLiteral","src":"1292:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1282:6:26","nodeType":"YulIdentifier","src":"1282:6:26"},"nativeSrc":"1282:12:26","nodeType":"YulFunctionCall","src":"1282:12:26"},"nativeSrc":"1282:12:26","nodeType":"YulExpressionStatement","src":"1282:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1252:6:26","nodeType":"YulIdentifier","src":"1252:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1268:2:26","nodeType":"YulLiteral","src":"1268:2:26","type":"","value":"64"},{"kind":"number","nativeSrc":"1272:1:26","nodeType":"YulLiteral","src":"1272:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1264:3:26","nodeType":"YulIdentifier","src":"1264:3:26"},"nativeSrc":"1264:10:26","nodeType":"YulFunctionCall","src":"1264:10:26"},{"kind":"number","nativeSrc":"1276:1:26","nodeType":"YulLiteral","src":"1276:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1260:3:26","nodeType":"YulIdentifier","src":"1260:3:26"},"nativeSrc":"1260:18:26","nodeType":"YulFunctionCall","src":"1260:18:26"}],"functionName":{"name":"gt","nativeSrc":"1249:2:26","nodeType":"YulIdentifier","src":"1249:2:26"},"nativeSrc":"1249:30:26","nodeType":"YulFunctionCall","src":"1249:30:26"},"nativeSrc":"1246:50:26","nodeType":"YulIf","src":"1246:50:26"},{"nativeSrc":"1305:71:26","nodeType":"YulAssignment","src":"1305:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1348:9:26","nodeType":"YulIdentifier","src":"1348:9:26"},{"name":"offset","nativeSrc":"1359:6:26","nodeType":"YulIdentifier","src":"1359:6:26"}],"functionName":{"name":"add","nativeSrc":"1344:3:26","nodeType":"YulIdentifier","src":"1344:3:26"},"nativeSrc":"1344:22:26","nodeType":"YulFunctionCall","src":"1344:22:26"},{"name":"dataEnd","nativeSrc":"1368:7:26","nodeType":"YulIdentifier","src":"1368:7:26"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1315:28:26","nodeType":"YulIdentifier","src":"1315:28:26"},"nativeSrc":"1315:61:26","nodeType":"YulFunctionCall","src":"1315:61:26"},"variableNames":[{"name":"value0","nativeSrc":"1305:6:26","nodeType":"YulIdentifier","src":"1305:6:26"}]},{"nativeSrc":"1385:41:26","nodeType":"YulVariableDeclaration","src":"1385:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1411:9:26","nodeType":"YulIdentifier","src":"1411:9:26"},{"kind":"number","nativeSrc":"1422:2:26","nodeType":"YulLiteral","src":"1422:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1407:3:26","nodeType":"YulIdentifier","src":"1407:3:26"},"nativeSrc":"1407:18:26","nodeType":"YulFunctionCall","src":"1407:18:26"}],"functionName":{"name":"mload","nativeSrc":"1401:5:26","nodeType":"YulIdentifier","src":"1401:5:26"},"nativeSrc":"1401:25:26","nodeType":"YulFunctionCall","src":"1401:25:26"},"variables":[{"name":"offset_1","nativeSrc":"1389:8:26","nodeType":"YulTypedName","src":"1389:8:26","type":""}]},{"body":{"nativeSrc":"1471:16:26","nodeType":"YulBlock","src":"1471:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1480:1:26","nodeType":"YulLiteral","src":"1480:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1483:1:26","nodeType":"YulLiteral","src":"1483:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1473:6:26","nodeType":"YulIdentifier","src":"1473:6:26"},"nativeSrc":"1473:12:26","nodeType":"YulFunctionCall","src":"1473:12:26"},"nativeSrc":"1473:12:26","nodeType":"YulExpressionStatement","src":"1473:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1441:8:26","nodeType":"YulIdentifier","src":"1441:8:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1459:2:26","nodeType":"YulLiteral","src":"1459:2:26","type":"","value":"64"},{"kind":"number","nativeSrc":"1463:1:26","nodeType":"YulLiteral","src":"1463:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1455:3:26","nodeType":"YulIdentifier","src":"1455:3:26"},"nativeSrc":"1455:10:26","nodeType":"YulFunctionCall","src":"1455:10:26"},{"kind":"number","nativeSrc":"1467:1:26","nodeType":"YulLiteral","src":"1467:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1451:3:26","nodeType":"YulIdentifier","src":"1451:3:26"},"nativeSrc":"1451:18:26","nodeType":"YulFunctionCall","src":"1451:18:26"}],"functionName":{"name":"gt","nativeSrc":"1438:2:26","nodeType":"YulIdentifier","src":"1438:2:26"},"nativeSrc":"1438:32:26","nodeType":"YulFunctionCall","src":"1438:32:26"},"nativeSrc":"1435:52:26","nodeType":"YulIf","src":"1435:52:26"},{"nativeSrc":"1496:73:26","nodeType":"YulAssignment","src":"1496:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1539:9:26","nodeType":"YulIdentifier","src":"1539:9:26"},{"name":"offset_1","nativeSrc":"1550:8:26","nodeType":"YulIdentifier","src":"1550:8:26"}],"functionName":{"name":"add","nativeSrc":"1535:3:26","nodeType":"YulIdentifier","src":"1535:3:26"},"nativeSrc":"1535:24:26","nodeType":"YulFunctionCall","src":"1535:24:26"},{"name":"dataEnd","nativeSrc":"1561:7:26","nodeType":"YulIdentifier","src":"1561:7:26"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1506:28:26","nodeType":"YulIdentifier","src":"1506:28:26"},"nativeSrc":"1506:63:26","nodeType":"YulFunctionCall","src":"1506:63:26"},"variableNames":[{"name":"value1","nativeSrc":"1496:6:26","nodeType":"YulIdentifier","src":"1496:6:26"}]},{"nativeSrc":"1578:38:26","nodeType":"YulVariableDeclaration","src":"1578:38:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1601:9:26","nodeType":"YulIdentifier","src":"1601:9:26"},{"kind":"number","nativeSrc":"1612:2:26","nodeType":"YulLiteral","src":"1612:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1597:3:26","nodeType":"YulIdentifier","src":"1597:3:26"},"nativeSrc":"1597:18:26","nodeType":"YulFunctionCall","src":"1597:18:26"}],"functionName":{"name":"mload","nativeSrc":"1591:5:26","nodeType":"YulIdentifier","src":"1591:5:26"},"nativeSrc":"1591:25:26","nodeType":"YulFunctionCall","src":"1591:25:26"},"variables":[{"name":"value","nativeSrc":"1582:5:26","nodeType":"YulTypedName","src":"1582:5:26","type":""}]},{"body":{"nativeSrc":"1664:16:26","nodeType":"YulBlock","src":"1664:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1673:1:26","nodeType":"YulLiteral","src":"1673:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1676:1:26","nodeType":"YulLiteral","src":"1676:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1666:6:26","nodeType":"YulIdentifier","src":"1666:6:26"},"nativeSrc":"1666:12:26","nodeType":"YulFunctionCall","src":"1666:12:26"},"nativeSrc":"1666:12:26","nodeType":"YulExpressionStatement","src":"1666:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1638:5:26","nodeType":"YulIdentifier","src":"1638:5:26"},{"arguments":[{"name":"value","nativeSrc":"1649:5:26","nodeType":"YulIdentifier","src":"1649:5:26"},{"kind":"number","nativeSrc":"1656:4:26","nodeType":"YulLiteral","src":"1656:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1645:3:26","nodeType":"YulIdentifier","src":"1645:3:26"},"nativeSrc":"1645:16:26","nodeType":"YulFunctionCall","src":"1645:16:26"}],"functionName":{"name":"eq","nativeSrc":"1635:2:26","nodeType":"YulIdentifier","src":"1635:2:26"},"nativeSrc":"1635:27:26","nodeType":"YulFunctionCall","src":"1635:27:26"}],"functionName":{"name":"iszero","nativeSrc":"1628:6:26","nodeType":"YulIdentifier","src":"1628:6:26"},"nativeSrc":"1628:35:26","nodeType":"YulFunctionCall","src":"1628:35:26"},"nativeSrc":"1625:55:26","nodeType":"YulIf","src":"1625:55:26"},{"nativeSrc":"1689:15:26","nodeType":"YulAssignment","src":"1689:15:26","value":{"name":"value","nativeSrc":"1699:5:26","nodeType":"YulIdentifier","src":"1699:5:26"},"variableNames":[{"name":"value2","nativeSrc":"1689:6:26","nodeType":"YulIdentifier","src":"1689:6:26"}]},{"nativeSrc":"1713:35:26","nodeType":"YulAssignment","src":"1713:35:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1733:9:26","nodeType":"YulIdentifier","src":"1733:9:26"},{"kind":"number","nativeSrc":"1744:2:26","nodeType":"YulLiteral","src":"1744:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1729:3:26","nodeType":"YulIdentifier","src":"1729:3:26"},"nativeSrc":"1729:18:26","nodeType":"YulFunctionCall","src":"1729:18:26"}],"functionName":{"name":"mload","nativeSrc":"1723:5:26","nodeType":"YulIdentifier","src":"1723:5:26"},"nativeSrc":"1723:25:26","nodeType":"YulFunctionCall","src":"1723:25:26"},"variableNames":[{"name":"value3","nativeSrc":"1713:6:26","nodeType":"YulIdentifier","src":"1713:6:26"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory","nativeSrc":"985:769:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1077:9:26","nodeType":"YulTypedName","src":"1077:9:26","type":""},{"name":"dataEnd","nativeSrc":"1088:7:26","nodeType":"YulTypedName","src":"1088:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1100:6:26","nodeType":"YulTypedName","src":"1100:6:26","type":""},{"name":"value1","nativeSrc":"1108:6:26","nodeType":"YulTypedName","src":"1108:6:26","type":""},{"name":"value2","nativeSrc":"1116:6:26","nodeType":"YulTypedName","src":"1116:6:26","type":""},{"name":"value3","nativeSrc":"1124:6:26","nodeType":"YulTypedName","src":"1124:6:26","type":""}],"src":"985:769:26"},{"body":{"nativeSrc":"1814:325:26","nodeType":"YulBlock","src":"1814:325:26","statements":[{"nativeSrc":"1824:22:26","nodeType":"YulAssignment","src":"1824:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"1838:1:26","nodeType":"YulLiteral","src":"1838:1:26","type":"","value":"1"},{"name":"data","nativeSrc":"1841:4:26","nodeType":"YulIdentifier","src":"1841:4:26"}],"functionName":{"name":"shr","nativeSrc":"1834:3:26","nodeType":"YulIdentifier","src":"1834:3:26"},"nativeSrc":"1834:12:26","nodeType":"YulFunctionCall","src":"1834:12:26"},"variableNames":[{"name":"length","nativeSrc":"1824:6:26","nodeType":"YulIdentifier","src":"1824:6:26"}]},{"nativeSrc":"1855:38:26","nodeType":"YulVariableDeclaration","src":"1855:38:26","value":{"arguments":[{"name":"data","nativeSrc":"1885:4:26","nodeType":"YulIdentifier","src":"1885:4:26"},{"kind":"number","nativeSrc":"1891:1:26","nodeType":"YulLiteral","src":"1891:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1881:3:26","nodeType":"YulIdentifier","src":"1881:3:26"},"nativeSrc":"1881:12:26","nodeType":"YulFunctionCall","src":"1881:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1859:18:26","nodeType":"YulTypedName","src":"1859:18:26","type":""}]},{"body":{"nativeSrc":"1932:31:26","nodeType":"YulBlock","src":"1932:31:26","statements":[{"nativeSrc":"1934:27:26","nodeType":"YulAssignment","src":"1934:27:26","value":{"arguments":[{"name":"length","nativeSrc":"1948:6:26","nodeType":"YulIdentifier","src":"1948:6:26"},{"kind":"number","nativeSrc":"1956:4:26","nodeType":"YulLiteral","src":"1956:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1944:3:26","nodeType":"YulIdentifier","src":"1944:3:26"},"nativeSrc":"1944:17:26","nodeType":"YulFunctionCall","src":"1944:17:26"},"variableNames":[{"name":"length","nativeSrc":"1934:6:26","nodeType":"YulIdentifier","src":"1934:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1912:18:26","nodeType":"YulIdentifier","src":"1912:18:26"}],"functionName":{"name":"iszero","nativeSrc":"1905:6:26","nodeType":"YulIdentifier","src":"1905:6:26"},"nativeSrc":"1905:26:26","nodeType":"YulFunctionCall","src":"1905:26:26"},"nativeSrc":"1902:61:26","nodeType":"YulIf","src":"1902:61:26"},{"body":{"nativeSrc":"2022:111:26","nodeType":"YulBlock","src":"2022:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2043:1:26","nodeType":"YulLiteral","src":"2043:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2050:3:26","nodeType":"YulLiteral","src":"2050:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"2055:10:26","nodeType":"YulLiteral","src":"2055:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2046:3:26","nodeType":"YulIdentifier","src":"2046:3:26"},"nativeSrc":"2046:20:26","nodeType":"YulFunctionCall","src":"2046:20:26"}],"functionName":{"name":"mstore","nativeSrc":"2036:6:26","nodeType":"YulIdentifier","src":"2036:6:26"},"nativeSrc":"2036:31:26","nodeType":"YulFunctionCall","src":"2036:31:26"},"nativeSrc":"2036:31:26","nodeType":"YulExpressionStatement","src":"2036:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2087:1:26","nodeType":"YulLiteral","src":"2087:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"2090:4:26","nodeType":"YulLiteral","src":"2090:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2080:6:26","nodeType":"YulIdentifier","src":"2080:6:26"},"nativeSrc":"2080:15:26","nodeType":"YulFunctionCall","src":"2080:15:26"},"nativeSrc":"2080:15:26","nodeType":"YulExpressionStatement","src":"2080:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2115:1:26","nodeType":"YulLiteral","src":"2115:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2118:4:26","nodeType":"YulLiteral","src":"2118:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2108:6:26","nodeType":"YulIdentifier","src":"2108:6:26"},"nativeSrc":"2108:15:26","nodeType":"YulFunctionCall","src":"2108:15:26"},"nativeSrc":"2108:15:26","nodeType":"YulExpressionStatement","src":"2108:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1978:18:26","nodeType":"YulIdentifier","src":"1978:18:26"},{"arguments":[{"name":"length","nativeSrc":"2001:6:26","nodeType":"YulIdentifier","src":"2001:6:26"},{"kind":"number","nativeSrc":"2009:2:26","nodeType":"YulLiteral","src":"2009:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1998:2:26","nodeType":"YulIdentifier","src":"1998:2:26"},"nativeSrc":"1998:14:26","nodeType":"YulFunctionCall","src":"1998:14:26"}],"functionName":{"name":"eq","nativeSrc":"1975:2:26","nodeType":"YulIdentifier","src":"1975:2:26"},"nativeSrc":"1975:38:26","nodeType":"YulFunctionCall","src":"1975:38:26"},"nativeSrc":"1972:161:26","nodeType":"YulIf","src":"1972:161:26"}]},"name":"extract_byte_array_length","nativeSrc":"1759:380:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1794:4:26","nodeType":"YulTypedName","src":"1794:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1803:6:26","nodeType":"YulTypedName","src":"1803:6:26","type":""}],"src":"1759:380:26"},{"body":{"nativeSrc":"2200:65:26","nodeType":"YulBlock","src":"2200:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2217:1:26","nodeType":"YulLiteral","src":"2217:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"2220:3:26","nodeType":"YulIdentifier","src":"2220:3:26"}],"functionName":{"name":"mstore","nativeSrc":"2210:6:26","nodeType":"YulIdentifier","src":"2210:6:26"},"nativeSrc":"2210:14:26","nodeType":"YulFunctionCall","src":"2210:14:26"},"nativeSrc":"2210:14:26","nodeType":"YulExpressionStatement","src":"2210:14:26"},{"nativeSrc":"2233:26:26","nodeType":"YulAssignment","src":"2233:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"2251:1:26","nodeType":"YulLiteral","src":"2251:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2254:4:26","nodeType":"YulLiteral","src":"2254:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2241:9:26","nodeType":"YulIdentifier","src":"2241:9:26"},"nativeSrc":"2241:18:26","nodeType":"YulFunctionCall","src":"2241:18:26"},"variableNames":[{"name":"data","nativeSrc":"2233:4:26","nodeType":"YulIdentifier","src":"2233:4:26"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"2144:121:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2183:3:26","nodeType":"YulTypedName","src":"2183:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2191:4:26","nodeType":"YulTypedName","src":"2191:4:26","type":""}],"src":"2144:121:26"},{"body":{"nativeSrc":"2351:437:26","nodeType":"YulBlock","src":"2351:437:26","statements":[{"body":{"nativeSrc":"2384:398:26","nodeType":"YulBlock","src":"2384:398:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2405:1:26","nodeType":"YulLiteral","src":"2405:1:26","type":"","value":"0"},{"name":"array","nativeSrc":"2408:5:26","nodeType":"YulIdentifier","src":"2408:5:26"}],"functionName":{"name":"mstore","nativeSrc":"2398:6:26","nodeType":"YulIdentifier","src":"2398:6:26"},"nativeSrc":"2398:16:26","nodeType":"YulFunctionCall","src":"2398:16:26"},"nativeSrc":"2398:16:26","nodeType":"YulExpressionStatement","src":"2398:16:26"},{"nativeSrc":"2427:30:26","nodeType":"YulVariableDeclaration","src":"2427:30:26","value":{"arguments":[{"kind":"number","nativeSrc":"2449:1:26","nodeType":"YulLiteral","src":"2449:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2452:4:26","nodeType":"YulLiteral","src":"2452:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2439:9:26","nodeType":"YulIdentifier","src":"2439:9:26"},"nativeSrc":"2439:18:26","nodeType":"YulFunctionCall","src":"2439:18:26"},"variables":[{"name":"data","nativeSrc":"2431:4:26","nodeType":"YulTypedName","src":"2431:4:26","type":""}]},{"nativeSrc":"2470:57:26","nodeType":"YulVariableDeclaration","src":"2470:57:26","value":{"arguments":[{"name":"data","nativeSrc":"2493:4:26","nodeType":"YulIdentifier","src":"2493:4:26"},{"arguments":[{"kind":"number","nativeSrc":"2503:1:26","nodeType":"YulLiteral","src":"2503:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2510:10:26","nodeType":"YulIdentifier","src":"2510:10:26"},{"kind":"number","nativeSrc":"2522:2:26","nodeType":"YulLiteral","src":"2522:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2506:3:26","nodeType":"YulIdentifier","src":"2506:3:26"},"nativeSrc":"2506:19:26","nodeType":"YulFunctionCall","src":"2506:19:26"}],"functionName":{"name":"shr","nativeSrc":"2499:3:26","nodeType":"YulIdentifier","src":"2499:3:26"},"nativeSrc":"2499:27:26","nodeType":"YulFunctionCall","src":"2499:27:26"}],"functionName":{"name":"add","nativeSrc":"2489:3:26","nodeType":"YulIdentifier","src":"2489:3:26"},"nativeSrc":"2489:38:26","nodeType":"YulFunctionCall","src":"2489:38:26"},"variables":[{"name":"deleteStart","nativeSrc":"2474:11:26","nodeType":"YulTypedName","src":"2474:11:26","type":""}]},{"body":{"nativeSrc":"2564:23:26","nodeType":"YulBlock","src":"2564:23:26","statements":[{"nativeSrc":"2566:19:26","nodeType":"YulAssignment","src":"2566:19:26","value":{"name":"data","nativeSrc":"2581:4:26","nodeType":"YulIdentifier","src":"2581:4:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"2566:11:26","nodeType":"YulIdentifier","src":"2566:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2546:10:26","nodeType":"YulIdentifier","src":"2546:10:26"},{"kind":"number","nativeSrc":"2558:4:26","nodeType":"YulLiteral","src":"2558:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2543:2:26","nodeType":"YulIdentifier","src":"2543:2:26"},"nativeSrc":"2543:20:26","nodeType":"YulFunctionCall","src":"2543:20:26"},"nativeSrc":"2540:47:26","nodeType":"YulIf","src":"2540:47:26"},{"nativeSrc":"2600:41:26","nodeType":"YulVariableDeclaration","src":"2600:41:26","value":{"arguments":[{"name":"data","nativeSrc":"2614:4:26","nodeType":"YulIdentifier","src":"2614:4:26"},{"arguments":[{"kind":"number","nativeSrc":"2624:1:26","nodeType":"YulLiteral","src":"2624:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2631:3:26","nodeType":"YulIdentifier","src":"2631:3:26"},{"kind":"number","nativeSrc":"2636:2:26","nodeType":"YulLiteral","src":"2636:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2627:3:26","nodeType":"YulIdentifier","src":"2627:3:26"},"nativeSrc":"2627:12:26","nodeType":"YulFunctionCall","src":"2627:12:26"}],"functionName":{"name":"shr","nativeSrc":"2620:3:26","nodeType":"YulIdentifier","src":"2620:3:26"},"nativeSrc":"2620:20:26","nodeType":"YulFunctionCall","src":"2620:20:26"}],"functionName":{"name":"add","nativeSrc":"2610:3:26","nodeType":"YulIdentifier","src":"2610:3:26"},"nativeSrc":"2610:31:26","nodeType":"YulFunctionCall","src":"2610:31:26"},"variables":[{"name":"_1","nativeSrc":"2604:2:26","nodeType":"YulTypedName","src":"2604:2:26","type":""}]},{"nativeSrc":"2654:24:26","nodeType":"YulVariableDeclaration","src":"2654:24:26","value":{"name":"deleteStart","nativeSrc":"2667:11:26","nodeType":"YulIdentifier","src":"2667:11:26"},"variables":[{"name":"start","nativeSrc":"2658:5:26","nodeType":"YulTypedName","src":"2658:5:26","type":""}]},{"body":{"nativeSrc":"2752:20:26","nodeType":"YulBlock","src":"2752:20:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2761:5:26","nodeType":"YulIdentifier","src":"2761:5:26"},{"kind":"number","nativeSrc":"2768:1:26","nodeType":"YulLiteral","src":"2768:1:26","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"2754:6:26","nodeType":"YulIdentifier","src":"2754:6:26"},"nativeSrc":"2754:16:26","nodeType":"YulFunctionCall","src":"2754:16:26"},"nativeSrc":"2754:16:26","nodeType":"YulExpressionStatement","src":"2754:16:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2702:5:26","nodeType":"YulIdentifier","src":"2702:5:26"},{"name":"_1","nativeSrc":"2709:2:26","nodeType":"YulIdentifier","src":"2709:2:26"}],"functionName":{"name":"lt","nativeSrc":"2699:2:26","nodeType":"YulIdentifier","src":"2699:2:26"},"nativeSrc":"2699:13:26","nodeType":"YulFunctionCall","src":"2699:13:26"},"nativeSrc":"2691:81:26","nodeType":"YulForLoop","post":{"nativeSrc":"2713:26:26","nodeType":"YulBlock","src":"2713:26:26","statements":[{"nativeSrc":"2715:22:26","nodeType":"YulAssignment","src":"2715:22:26","value":{"arguments":[{"name":"start","nativeSrc":"2728:5:26","nodeType":"YulIdentifier","src":"2728:5:26"},{"kind":"number","nativeSrc":"2735:1:26","nodeType":"YulLiteral","src":"2735:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2724:3:26","nodeType":"YulIdentifier","src":"2724:3:26"},"nativeSrc":"2724:13:26","nodeType":"YulFunctionCall","src":"2724:13:26"},"variableNames":[{"name":"start","nativeSrc":"2715:5:26","nodeType":"YulIdentifier","src":"2715:5:26"}]}]},"pre":{"nativeSrc":"2695:3:26","nodeType":"YulBlock","src":"2695:3:26","statements":[]},"src":"2691:81:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2367:3:26","nodeType":"YulIdentifier","src":"2367:3:26"},{"kind":"number","nativeSrc":"2372:2:26","nodeType":"YulLiteral","src":"2372:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2364:2:26","nodeType":"YulIdentifier","src":"2364:2:26"},"nativeSrc":"2364:11:26","nodeType":"YulFunctionCall","src":"2364:11:26"},"nativeSrc":"2361:421:26","nodeType":"YulIf","src":"2361:421:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2270:518:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2323:5:26","nodeType":"YulTypedName","src":"2323:5:26","type":""},{"name":"len","nativeSrc":"2330:3:26","nodeType":"YulTypedName","src":"2330:3:26","type":""},{"name":"startIndex","nativeSrc":"2335:10:26","nodeType":"YulTypedName","src":"2335:10:26","type":""}],"src":"2270:518:26"},{"body":{"nativeSrc":"2878:81:26","nodeType":"YulBlock","src":"2878:81:26","statements":[{"nativeSrc":"2888:65:26","nodeType":"YulAssignment","src":"2888:65:26","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2903:4:26","nodeType":"YulIdentifier","src":"2903:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2921:1:26","nodeType":"YulLiteral","src":"2921:1:26","type":"","value":"3"},{"name":"len","nativeSrc":"2924:3:26","nodeType":"YulIdentifier","src":"2924:3:26"}],"functionName":{"name":"shl","nativeSrc":"2917:3:26","nodeType":"YulIdentifier","src":"2917:3:26"},"nativeSrc":"2917:11:26","nodeType":"YulFunctionCall","src":"2917:11:26"},{"arguments":[{"kind":"number","nativeSrc":"2934:1:26","nodeType":"YulLiteral","src":"2934:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2930:3:26","nodeType":"YulIdentifier","src":"2930:3:26"},"nativeSrc":"2930:6:26","nodeType":"YulFunctionCall","src":"2930:6:26"}],"functionName":{"name":"shr","nativeSrc":"2913:3:26","nodeType":"YulIdentifier","src":"2913:3:26"},"nativeSrc":"2913:24:26","nodeType":"YulFunctionCall","src":"2913:24:26"}],"functionName":{"name":"not","nativeSrc":"2909:3:26","nodeType":"YulIdentifier","src":"2909:3:26"},"nativeSrc":"2909:29:26","nodeType":"YulFunctionCall","src":"2909:29:26"}],"functionName":{"name":"and","nativeSrc":"2899:3:26","nodeType":"YulIdentifier","src":"2899:3:26"},"nativeSrc":"2899:40:26","nodeType":"YulFunctionCall","src":"2899:40:26"},{"arguments":[{"kind":"number","nativeSrc":"2945:1:26","nodeType":"YulLiteral","src":"2945:1:26","type":"","value":"1"},{"name":"len","nativeSrc":"2948:3:26","nodeType":"YulIdentifier","src":"2948:3:26"}],"functionName":{"name":"shl","nativeSrc":"2941:3:26","nodeType":"YulIdentifier","src":"2941:3:26"},"nativeSrc":"2941:11:26","nodeType":"YulFunctionCall","src":"2941:11:26"}],"functionName":{"name":"or","nativeSrc":"2896:2:26","nodeType":"YulIdentifier","src":"2896:2:26"},"nativeSrc":"2896:57:26","nodeType":"YulFunctionCall","src":"2896:57:26"},"variableNames":[{"name":"used","nativeSrc":"2888:4:26","nodeType":"YulIdentifier","src":"2888:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2793:166:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2855:4:26","nodeType":"YulTypedName","src":"2855:4:26","type":""},{"name":"len","nativeSrc":"2861:3:26","nodeType":"YulTypedName","src":"2861:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2869:4:26","nodeType":"YulTypedName","src":"2869:4:26","type":""}],"src":"2793:166:26"},{"body":{"nativeSrc":"3060:1203:26","nodeType":"YulBlock","src":"3060:1203:26","statements":[{"nativeSrc":"3070:24:26","nodeType":"YulVariableDeclaration","src":"3070:24:26","value":{"arguments":[{"name":"src","nativeSrc":"3090:3:26","nodeType":"YulIdentifier","src":"3090:3:26"}],"functionName":{"name":"mload","nativeSrc":"3084:5:26","nodeType":"YulIdentifier","src":"3084:5:26"},"nativeSrc":"3084:10:26","nodeType":"YulFunctionCall","src":"3084:10:26"},"variables":[{"name":"newLen","nativeSrc":"3074:6:26","nodeType":"YulTypedName","src":"3074:6:26","type":""}]},{"body":{"nativeSrc":"3137:22:26","nodeType":"YulBlock","src":"3137:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3139:16:26","nodeType":"YulIdentifier","src":"3139:16:26"},"nativeSrc":"3139:18:26","nodeType":"YulFunctionCall","src":"3139:18:26"},"nativeSrc":"3139:18:26","nodeType":"YulExpressionStatement","src":"3139:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"3109:6:26","nodeType":"YulIdentifier","src":"3109:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3125:2:26","nodeType":"YulLiteral","src":"3125:2:26","type":"","value":"64"},{"kind":"number","nativeSrc":"3129:1:26","nodeType":"YulLiteral","src":"3129:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3121:3:26","nodeType":"YulIdentifier","src":"3121:3:26"},"nativeSrc":"3121:10:26","nodeType":"YulFunctionCall","src":"3121:10:26"},{"kind":"number","nativeSrc":"3133:1:26","nodeType":"YulLiteral","src":"3133:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3117:3:26","nodeType":"YulIdentifier","src":"3117:3:26"},"nativeSrc":"3117:18:26","nodeType":"YulFunctionCall","src":"3117:18:26"}],"functionName":{"name":"gt","nativeSrc":"3106:2:26","nodeType":"YulIdentifier","src":"3106:2:26"},"nativeSrc":"3106:30:26","nodeType":"YulFunctionCall","src":"3106:30:26"},"nativeSrc":"3103:56:26","nodeType":"YulIf","src":"3103:56:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3212:4:26","nodeType":"YulIdentifier","src":"3212:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3250:4:26","nodeType":"YulIdentifier","src":"3250:4:26"}],"functionName":{"name":"sload","nativeSrc":"3244:5:26","nodeType":"YulIdentifier","src":"3244:5:26"},"nativeSrc":"3244:11:26","nodeType":"YulFunctionCall","src":"3244:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"3218:25:26","nodeType":"YulIdentifier","src":"3218:25:26"},"nativeSrc":"3218:38:26","nodeType":"YulFunctionCall","src":"3218:38:26"},{"name":"newLen","nativeSrc":"3258:6:26","nodeType":"YulIdentifier","src":"3258:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"3168:43:26","nodeType":"YulIdentifier","src":"3168:43:26"},"nativeSrc":"3168:97:26","nodeType":"YulFunctionCall","src":"3168:97:26"},"nativeSrc":"3168:97:26","nodeType":"YulExpressionStatement","src":"3168:97:26"},{"nativeSrc":"3274:18:26","nodeType":"YulVariableDeclaration","src":"3274:18:26","value":{"kind":"number","nativeSrc":"3291:1:26","nodeType":"YulLiteral","src":"3291:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"3278:9:26","nodeType":"YulTypedName","src":"3278:9:26","type":""}]},{"nativeSrc":"3301:17:26","nodeType":"YulAssignment","src":"3301:17:26","value":{"kind":"number","nativeSrc":"3314:4:26","nodeType":"YulLiteral","src":"3314:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"3301:9:26","nodeType":"YulIdentifier","src":"3301:9:26"}]},{"cases":[{"body":{"nativeSrc":"3364:642:26","nodeType":"YulBlock","src":"3364:642:26","statements":[{"nativeSrc":"3378:35:26","nodeType":"YulVariableDeclaration","src":"3378:35:26","value":{"arguments":[{"name":"newLen","nativeSrc":"3397:6:26","nodeType":"YulIdentifier","src":"3397:6:26"},{"arguments":[{"kind":"number","nativeSrc":"3409:2:26","nodeType":"YulLiteral","src":"3409:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3405:3:26","nodeType":"YulIdentifier","src":"3405:3:26"},"nativeSrc":"3405:7:26","nodeType":"YulFunctionCall","src":"3405:7:26"}],"functionName":{"name":"and","nativeSrc":"3393:3:26","nodeType":"YulIdentifier","src":"3393:3:26"},"nativeSrc":"3393:20:26","nodeType":"YulFunctionCall","src":"3393:20:26"},"variables":[{"name":"loopEnd","nativeSrc":"3382:7:26","nodeType":"YulTypedName","src":"3382:7:26","type":""}]},{"nativeSrc":"3426:49:26","nodeType":"YulVariableDeclaration","src":"3426:49:26","value":{"arguments":[{"name":"slot","nativeSrc":"3470:4:26","nodeType":"YulIdentifier","src":"3470:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3440:29:26","nodeType":"YulIdentifier","src":"3440:29:26"},"nativeSrc":"3440:35:26","nodeType":"YulFunctionCall","src":"3440:35:26"},"variables":[{"name":"dstPtr","nativeSrc":"3430:6:26","nodeType":"YulTypedName","src":"3430:6:26","type":""}]},{"nativeSrc":"3488:10:26","nodeType":"YulVariableDeclaration","src":"3488:10:26","value":{"kind":"number","nativeSrc":"3497:1:26","nodeType":"YulLiteral","src":"3497:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3492:1:26","nodeType":"YulTypedName","src":"3492:1:26","type":""}]},{"body":{"nativeSrc":"3568:165:26","nodeType":"YulBlock","src":"3568:165:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3593:6:26","nodeType":"YulIdentifier","src":"3593:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3611:3:26","nodeType":"YulIdentifier","src":"3611:3:26"},{"name":"srcOffset","nativeSrc":"3616:9:26","nodeType":"YulIdentifier","src":"3616:9:26"}],"functionName":{"name":"add","nativeSrc":"3607:3:26","nodeType":"YulIdentifier","src":"3607:3:26"},"nativeSrc":"3607:19:26","nodeType":"YulFunctionCall","src":"3607:19:26"}],"functionName":{"name":"mload","nativeSrc":"3601:5:26","nodeType":"YulIdentifier","src":"3601:5:26"},"nativeSrc":"3601:26:26","nodeType":"YulFunctionCall","src":"3601:26:26"}],"functionName":{"name":"sstore","nativeSrc":"3586:6:26","nodeType":"YulIdentifier","src":"3586:6:26"},"nativeSrc":"3586:42:26","nodeType":"YulFunctionCall","src":"3586:42:26"},"nativeSrc":"3586:42:26","nodeType":"YulExpressionStatement","src":"3586:42:26"},{"nativeSrc":"3645:24:26","nodeType":"YulAssignment","src":"3645:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3659:6:26","nodeType":"YulIdentifier","src":"3659:6:26"},{"kind":"number","nativeSrc":"3667:1:26","nodeType":"YulLiteral","src":"3667:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3655:3:26","nodeType":"YulIdentifier","src":"3655:3:26"},"nativeSrc":"3655:14:26","nodeType":"YulFunctionCall","src":"3655:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"3645:6:26","nodeType":"YulIdentifier","src":"3645:6:26"}]},{"nativeSrc":"3686:33:26","nodeType":"YulAssignment","src":"3686:33:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3703:9:26","nodeType":"YulIdentifier","src":"3703:9:26"},{"kind":"number","nativeSrc":"3714:4:26","nodeType":"YulLiteral","src":"3714:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3699:3:26","nodeType":"YulIdentifier","src":"3699:3:26"},"nativeSrc":"3699:20:26","nodeType":"YulFunctionCall","src":"3699:20:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"3686:9:26","nodeType":"YulIdentifier","src":"3686:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3522:1:26","nodeType":"YulIdentifier","src":"3522:1:26"},{"name":"loopEnd","nativeSrc":"3525:7:26","nodeType":"YulIdentifier","src":"3525:7:26"}],"functionName":{"name":"lt","nativeSrc":"3519:2:26","nodeType":"YulIdentifier","src":"3519:2:26"},"nativeSrc":"3519:14:26","nodeType":"YulFunctionCall","src":"3519:14:26"},"nativeSrc":"3511:222:26","nodeType":"YulForLoop","post":{"nativeSrc":"3534:21:26","nodeType":"YulBlock","src":"3534:21:26","statements":[{"nativeSrc":"3536:17:26","nodeType":"YulAssignment","src":"3536:17:26","value":{"arguments":[{"name":"i","nativeSrc":"3545:1:26","nodeType":"YulIdentifier","src":"3545:1:26"},{"kind":"number","nativeSrc":"3548:4:26","nodeType":"YulLiteral","src":"3548:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3541:3:26","nodeType":"YulIdentifier","src":"3541:3:26"},"nativeSrc":"3541:12:26","nodeType":"YulFunctionCall","src":"3541:12:26"},"variableNames":[{"name":"i","nativeSrc":"3536:1:26","nodeType":"YulIdentifier","src":"3536:1:26"}]}]},"pre":{"nativeSrc":"3515:3:26","nodeType":"YulBlock","src":"3515:3:26","statements":[]},"src":"3511:222:26"},{"body":{"nativeSrc":"3781:166:26","nodeType":"YulBlock","src":"3781:166:26","statements":[{"nativeSrc":"3799:43:26","nodeType":"YulVariableDeclaration","src":"3799:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3826:3:26","nodeType":"YulIdentifier","src":"3826:3:26"},{"name":"srcOffset","nativeSrc":"3831:9:26","nodeType":"YulIdentifier","src":"3831:9:26"}],"functionName":{"name":"add","nativeSrc":"3822:3:26","nodeType":"YulIdentifier","src":"3822:3:26"},"nativeSrc":"3822:19:26","nodeType":"YulFunctionCall","src":"3822:19:26"}],"functionName":{"name":"mload","nativeSrc":"3816:5:26","nodeType":"YulIdentifier","src":"3816:5:26"},"nativeSrc":"3816:26:26","nodeType":"YulFunctionCall","src":"3816:26:26"},"variables":[{"name":"lastValue","nativeSrc":"3803:9:26","nodeType":"YulTypedName","src":"3803:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3866:6:26","nodeType":"YulIdentifier","src":"3866:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"3878:9:26","nodeType":"YulIdentifier","src":"3878:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3905:1:26","nodeType":"YulLiteral","src":"3905:1:26","type":"","value":"3"},{"name":"newLen","nativeSrc":"3908:6:26","nodeType":"YulIdentifier","src":"3908:6:26"}],"functionName":{"name":"shl","nativeSrc":"3901:3:26","nodeType":"YulIdentifier","src":"3901:3:26"},"nativeSrc":"3901:14:26","nodeType":"YulFunctionCall","src":"3901:14:26"},{"kind":"number","nativeSrc":"3917:3:26","nodeType":"YulLiteral","src":"3917:3:26","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3897:3:26","nodeType":"YulIdentifier","src":"3897:3:26"},"nativeSrc":"3897:24:26","nodeType":"YulFunctionCall","src":"3897:24:26"},{"arguments":[{"kind":"number","nativeSrc":"3927:1:26","nodeType":"YulLiteral","src":"3927:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3923:3:26","nodeType":"YulIdentifier","src":"3923:3:26"},"nativeSrc":"3923:6:26","nodeType":"YulFunctionCall","src":"3923:6:26"}],"functionName":{"name":"shr","nativeSrc":"3893:3:26","nodeType":"YulIdentifier","src":"3893:3:26"},"nativeSrc":"3893:37:26","nodeType":"YulFunctionCall","src":"3893:37:26"}],"functionName":{"name":"not","nativeSrc":"3889:3:26","nodeType":"YulIdentifier","src":"3889:3:26"},"nativeSrc":"3889:42:26","nodeType":"YulFunctionCall","src":"3889:42:26"}],"functionName":{"name":"and","nativeSrc":"3874:3:26","nodeType":"YulIdentifier","src":"3874:3:26"},"nativeSrc":"3874:58:26","nodeType":"YulFunctionCall","src":"3874:58:26"}],"functionName":{"name":"sstore","nativeSrc":"3859:6:26","nodeType":"YulIdentifier","src":"3859:6:26"},"nativeSrc":"3859:74:26","nodeType":"YulFunctionCall","src":"3859:74:26"},"nativeSrc":"3859:74:26","nodeType":"YulExpressionStatement","src":"3859:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"3752:7:26","nodeType":"YulIdentifier","src":"3752:7:26"},{"name":"newLen","nativeSrc":"3761:6:26","nodeType":"YulIdentifier","src":"3761:6:26"}],"functionName":{"name":"lt","nativeSrc":"3749:2:26","nodeType":"YulIdentifier","src":"3749:2:26"},"nativeSrc":"3749:19:26","nodeType":"YulFunctionCall","src":"3749:19:26"},"nativeSrc":"3746:201:26","nodeType":"YulIf","src":"3746:201:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3967:4:26","nodeType":"YulIdentifier","src":"3967:4:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3981:1:26","nodeType":"YulLiteral","src":"3981:1:26","type":"","value":"1"},{"name":"newLen","nativeSrc":"3984:6:26","nodeType":"YulIdentifier","src":"3984:6:26"}],"functionName":{"name":"shl","nativeSrc":"3977:3:26","nodeType":"YulIdentifier","src":"3977:3:26"},"nativeSrc":"3977:14:26","nodeType":"YulFunctionCall","src":"3977:14:26"},{"kind":"number","nativeSrc":"3993:1:26","nodeType":"YulLiteral","src":"3993:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3973:3:26","nodeType":"YulIdentifier","src":"3973:3:26"},"nativeSrc":"3973:22:26","nodeType":"YulFunctionCall","src":"3973:22:26"}],"functionName":{"name":"sstore","nativeSrc":"3960:6:26","nodeType":"YulIdentifier","src":"3960:6:26"},"nativeSrc":"3960:36:26","nodeType":"YulFunctionCall","src":"3960:36:26"},"nativeSrc":"3960:36:26","nodeType":"YulExpressionStatement","src":"3960:36:26"}]},"nativeSrc":"3357:649:26","nodeType":"YulCase","src":"3357:649:26","value":{"kind":"number","nativeSrc":"3362:1:26","nodeType":"YulLiteral","src":"3362:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"4023:234:26","nodeType":"YulBlock","src":"4023:234:26","statements":[{"nativeSrc":"4037:14:26","nodeType":"YulVariableDeclaration","src":"4037:14:26","value":{"kind":"number","nativeSrc":"4050:1:26","nodeType":"YulLiteral","src":"4050:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4041:5:26","nodeType":"YulTypedName","src":"4041:5:26","type":""}]},{"body":{"nativeSrc":"4086:67:26","nodeType":"YulBlock","src":"4086:67:26","statements":[{"nativeSrc":"4104:35:26","nodeType":"YulAssignment","src":"4104:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4123:3:26","nodeType":"YulIdentifier","src":"4123:3:26"},{"name":"srcOffset","nativeSrc":"4128:9:26","nodeType":"YulIdentifier","src":"4128:9:26"}],"functionName":{"name":"add","nativeSrc":"4119:3:26","nodeType":"YulIdentifier","src":"4119:3:26"},"nativeSrc":"4119:19:26","nodeType":"YulFunctionCall","src":"4119:19:26"}],"functionName":{"name":"mload","nativeSrc":"4113:5:26","nodeType":"YulIdentifier","src":"4113:5:26"},"nativeSrc":"4113:26:26","nodeType":"YulFunctionCall","src":"4113:26:26"},"variableNames":[{"name":"value","nativeSrc":"4104:5:26","nodeType":"YulIdentifier","src":"4104:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"4067:6:26","nodeType":"YulIdentifier","src":"4067:6:26"},"nativeSrc":"4064:89:26","nodeType":"YulIf","src":"4064:89:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4173:4:26","nodeType":"YulIdentifier","src":"4173:4:26"},{"arguments":[{"name":"value","nativeSrc":"4232:5:26","nodeType":"YulIdentifier","src":"4232:5:26"},{"name":"newLen","nativeSrc":"4239:6:26","nodeType":"YulIdentifier","src":"4239:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4179:52:26","nodeType":"YulIdentifier","src":"4179:52:26"},"nativeSrc":"4179:67:26","nodeType":"YulFunctionCall","src":"4179:67:26"}],"functionName":{"name":"sstore","nativeSrc":"4166:6:26","nodeType":"YulIdentifier","src":"4166:6:26"},"nativeSrc":"4166:81:26","nodeType":"YulFunctionCall","src":"4166:81:26"},"nativeSrc":"4166:81:26","nodeType":"YulExpressionStatement","src":"4166:81:26"}]},"nativeSrc":"4015:242:26","nodeType":"YulCase","src":"4015:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"3337:6:26","nodeType":"YulIdentifier","src":"3337:6:26"},{"kind":"number","nativeSrc":"3345:2:26","nodeType":"YulLiteral","src":"3345:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3334:2:26","nodeType":"YulIdentifier","src":"3334:2:26"},"nativeSrc":"3334:14:26","nodeType":"YulFunctionCall","src":"3334:14:26"},"nativeSrc":"3327:930:26","nodeType":"YulSwitch","src":"3327:930:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2964:1299:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3045:4:26","nodeType":"YulTypedName","src":"3045:4:26","type":""},{"name":"src","nativeSrc":"3051:3:26","nodeType":"YulTypedName","src":"3051:3:26","type":""}],"src":"2964:1299:26"},{"body":{"nativeSrc":"4369:102:26","nodeType":"YulBlock","src":"4369:102:26","statements":[{"nativeSrc":"4379:26:26","nodeType":"YulAssignment","src":"4379:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4391:9:26","nodeType":"YulIdentifier","src":"4391:9:26"},{"kind":"number","nativeSrc":"4402:2:26","nodeType":"YulLiteral","src":"4402:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4387:3:26","nodeType":"YulIdentifier","src":"4387:3:26"},"nativeSrc":"4387:18:26","nodeType":"YulFunctionCall","src":"4387:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4379:4:26","nodeType":"YulIdentifier","src":"4379:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4421:9:26","nodeType":"YulIdentifier","src":"4421:9:26"},{"arguments":[{"name":"value0","nativeSrc":"4436:6:26","nodeType":"YulIdentifier","src":"4436:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4452:3:26","nodeType":"YulLiteral","src":"4452:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"4457:1:26","nodeType":"YulLiteral","src":"4457:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4448:3:26","nodeType":"YulIdentifier","src":"4448:3:26"},"nativeSrc":"4448:11:26","nodeType":"YulFunctionCall","src":"4448:11:26"},{"kind":"number","nativeSrc":"4461:1:26","nodeType":"YulLiteral","src":"4461:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4444:3:26","nodeType":"YulIdentifier","src":"4444:3:26"},"nativeSrc":"4444:19:26","nodeType":"YulFunctionCall","src":"4444:19:26"}],"functionName":{"name":"and","nativeSrc":"4432:3:26","nodeType":"YulIdentifier","src":"4432:3:26"},"nativeSrc":"4432:32:26","nodeType":"YulFunctionCall","src":"4432:32:26"}],"functionName":{"name":"mstore","nativeSrc":"4414:6:26","nodeType":"YulIdentifier","src":"4414:6:26"},"nativeSrc":"4414:51:26","nodeType":"YulFunctionCall","src":"4414:51:26"},"nativeSrc":"4414:51:26","nodeType":"YulExpressionStatement","src":"4414:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4268:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4338:9:26","nodeType":"YulTypedName","src":"4338:9:26","type":""},{"name":"value0","nativeSrc":"4349:6:26","nodeType":"YulTypedName","src":"4349:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4360:4:26","nodeType":"YulTypedName","src":"4360:4:26","type":""}],"src":"4268:203:26"},{"body":{"nativeSrc":"4524:174:26","nodeType":"YulBlock","src":"4524:174:26","statements":[{"nativeSrc":"4534:16:26","nodeType":"YulAssignment","src":"4534:16:26","value":{"arguments":[{"name":"x","nativeSrc":"4545:1:26","nodeType":"YulIdentifier","src":"4545:1:26"},{"name":"y","nativeSrc":"4548:1:26","nodeType":"YulIdentifier","src":"4548:1:26"}],"functionName":{"name":"add","nativeSrc":"4541:3:26","nodeType":"YulIdentifier","src":"4541:3:26"},"nativeSrc":"4541:9:26","nodeType":"YulFunctionCall","src":"4541:9:26"},"variableNames":[{"name":"sum","nativeSrc":"4534:3:26","nodeType":"YulIdentifier","src":"4534:3:26"}]},{"body":{"nativeSrc":"4581:111:26","nodeType":"YulBlock","src":"4581:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4602:1:26","nodeType":"YulLiteral","src":"4602:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4609:3:26","nodeType":"YulLiteral","src":"4609:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"4614:10:26","nodeType":"YulLiteral","src":"4614:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4605:3:26","nodeType":"YulIdentifier","src":"4605:3:26"},"nativeSrc":"4605:20:26","nodeType":"YulFunctionCall","src":"4605:20:26"}],"functionName":{"name":"mstore","nativeSrc":"4595:6:26","nodeType":"YulIdentifier","src":"4595:6:26"},"nativeSrc":"4595:31:26","nodeType":"YulFunctionCall","src":"4595:31:26"},"nativeSrc":"4595:31:26","nodeType":"YulExpressionStatement","src":"4595:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4646:1:26","nodeType":"YulLiteral","src":"4646:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"4649:4:26","nodeType":"YulLiteral","src":"4649:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4639:6:26","nodeType":"YulIdentifier","src":"4639:6:26"},"nativeSrc":"4639:15:26","nodeType":"YulFunctionCall","src":"4639:15:26"},"nativeSrc":"4639:15:26","nodeType":"YulExpressionStatement","src":"4639:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4674:1:26","nodeType":"YulLiteral","src":"4674:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4677:4:26","nodeType":"YulLiteral","src":"4677:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4667:6:26","nodeType":"YulIdentifier","src":"4667:6:26"},"nativeSrc":"4667:15:26","nodeType":"YulFunctionCall","src":"4667:15:26"},"nativeSrc":"4667:15:26","nodeType":"YulExpressionStatement","src":"4667:15:26"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"4565:1:26","nodeType":"YulIdentifier","src":"4565:1:26"},{"name":"sum","nativeSrc":"4568:3:26","nodeType":"YulIdentifier","src":"4568:3:26"}],"functionName":{"name":"gt","nativeSrc":"4562:2:26","nodeType":"YulIdentifier","src":"4562:2:26"},"nativeSrc":"4562:10:26","nodeType":"YulFunctionCall","src":"4562:10:26"},"nativeSrc":"4559:133:26","nodeType":"YulIf","src":"4559:133:26"}]},"name":"checked_add_t_uint256","nativeSrc":"4476:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4507:1:26","nodeType":"YulTypedName","src":"4507:1:26","type":""},{"name":"y","nativeSrc":"4510:1:26","nodeType":"YulTypedName","src":"4510:1:26","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"4516:3:26","nodeType":"YulTypedName","src":"4516:3:26","type":""}],"src":"4476:222:26"},{"body":{"nativeSrc":"4860:188:26","nodeType":"YulBlock","src":"4860:188:26","statements":[{"nativeSrc":"4870:26:26","nodeType":"YulAssignment","src":"4870:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4882:9:26","nodeType":"YulIdentifier","src":"4882:9:26"},{"kind":"number","nativeSrc":"4893:2:26","nodeType":"YulLiteral","src":"4893:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4878:3:26","nodeType":"YulIdentifier","src":"4878:3:26"},"nativeSrc":"4878:18:26","nodeType":"YulFunctionCall","src":"4878:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4870:4:26","nodeType":"YulIdentifier","src":"4870:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4912:9:26","nodeType":"YulIdentifier","src":"4912:9:26"},{"arguments":[{"name":"value0","nativeSrc":"4927:6:26","nodeType":"YulIdentifier","src":"4927:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4943:3:26","nodeType":"YulLiteral","src":"4943:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"4948:1:26","nodeType":"YulLiteral","src":"4948:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4939:3:26","nodeType":"YulIdentifier","src":"4939:3:26"},"nativeSrc":"4939:11:26","nodeType":"YulFunctionCall","src":"4939:11:26"},{"kind":"number","nativeSrc":"4952:1:26","nodeType":"YulLiteral","src":"4952:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4935:3:26","nodeType":"YulIdentifier","src":"4935:3:26"},"nativeSrc":"4935:19:26","nodeType":"YulFunctionCall","src":"4935:19:26"}],"functionName":{"name":"and","nativeSrc":"4923:3:26","nodeType":"YulIdentifier","src":"4923:3:26"},"nativeSrc":"4923:32:26","nodeType":"YulFunctionCall","src":"4923:32:26"}],"functionName":{"name":"mstore","nativeSrc":"4905:6:26","nodeType":"YulIdentifier","src":"4905:6:26"},"nativeSrc":"4905:51:26","nodeType":"YulFunctionCall","src":"4905:51:26"},"nativeSrc":"4905:51:26","nodeType":"YulExpressionStatement","src":"4905:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4976:9:26","nodeType":"YulIdentifier","src":"4976:9:26"},{"kind":"number","nativeSrc":"4987:2:26","nodeType":"YulLiteral","src":"4987:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4972:3:26","nodeType":"YulIdentifier","src":"4972:3:26"},"nativeSrc":"4972:18:26","nodeType":"YulFunctionCall","src":"4972:18:26"},{"name":"value1","nativeSrc":"4992:6:26","nodeType":"YulIdentifier","src":"4992:6:26"}],"functionName":{"name":"mstore","nativeSrc":"4965:6:26","nodeType":"YulIdentifier","src":"4965:6:26"},"nativeSrc":"4965:34:26","nodeType":"YulFunctionCall","src":"4965:34:26"},"nativeSrc":"4965:34:26","nodeType":"YulExpressionStatement","src":"4965:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5019:9:26","nodeType":"YulIdentifier","src":"5019:9:26"},{"kind":"number","nativeSrc":"5030:2:26","nodeType":"YulLiteral","src":"5030:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5015:3:26","nodeType":"YulIdentifier","src":"5015:3:26"},"nativeSrc":"5015:18:26","nodeType":"YulFunctionCall","src":"5015:18:26"},{"name":"value2","nativeSrc":"5035:6:26","nodeType":"YulIdentifier","src":"5035:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5008:6:26","nodeType":"YulIdentifier","src":"5008:6:26"},"nativeSrc":"5008:34:26","nodeType":"YulFunctionCall","src":"5008:34:26"},"nativeSrc":"5008:34:26","nodeType":"YulExpressionStatement","src":"5008:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4703:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4813:9:26","nodeType":"YulTypedName","src":"4813:9:26","type":""},{"name":"value2","nativeSrc":"4824:6:26","nodeType":"YulTypedName","src":"4824:6:26","type":""},{"name":"value1","nativeSrc":"4832:6:26","nodeType":"YulTypedName","src":"4832:6:26","type":""},{"name":"value0","nativeSrc":"4840:6:26","nodeType":"YulTypedName","src":"4840:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4851:4:26","nodeType":"YulTypedName","src":"4851:4:26","type":""}],"src":"4703:345:26"},{"body":{"nativeSrc":"5154:76:26","nodeType":"YulBlock","src":"5154:76:26","statements":[{"nativeSrc":"5164:26:26","nodeType":"YulAssignment","src":"5164:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5176:9:26","nodeType":"YulIdentifier","src":"5176:9:26"},{"kind":"number","nativeSrc":"5187:2:26","nodeType":"YulLiteral","src":"5187:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5172:3:26","nodeType":"YulIdentifier","src":"5172:3:26"},"nativeSrc":"5172:18:26","nodeType":"YulFunctionCall","src":"5172:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5164:4:26","nodeType":"YulIdentifier","src":"5164:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5206:9:26","nodeType":"YulIdentifier","src":"5206:9:26"},{"name":"value0","nativeSrc":"5217:6:26","nodeType":"YulIdentifier","src":"5217:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5199:6:26","nodeType":"YulIdentifier","src":"5199:6:26"},"nativeSrc":"5199:25:26","nodeType":"YulFunctionCall","src":"5199:25:26"},"nativeSrc":"5199:25:26","nodeType":"YulExpressionStatement","src":"5199:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5053:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5123:9:26","nodeType":"YulTypedName","src":"5123:9:26","type":""},{"name":"value0","nativeSrc":"5134:6:26","nodeType":"YulTypedName","src":"5134:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5145:4:26","nodeType":"YulTypedName","src":"5145:4:26","type":""}],"src":"5053:177:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610e63380380610e6383398101604081905261002f91610321565b338484600361003e8382610433565b50600461004b8282610433565b5050506001600160a01b03811661007d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610086816100b2565b506005805460ff60a01b1916600160a01b60ff8516021790556100a93382610104565b50505050610518565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661012e5760405163ec442f0560e01b815260006004820152602401610074565b61013a6000838361013e565b5050565b6001600160a01b03831661016957806002600082825461015e91906104f1565b909155506101db9050565b6001600160a01b038316600090815260208190526040902054818110156101bc5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610074565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101f757600280548290039055610216565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161025b91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261028f57600080fd5b81516001600160401b038111156102a8576102a8610268565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102d6576102d6610268565b6040528181528382016020018510156102ee57600080fd5b60005b8281101561030d576020818601810151838301820152016102f1565b506000918101602001919091529392505050565b6000806000806080858703121561033757600080fd5b84516001600160401b0381111561034d57600080fd5b6103598782880161027e565b602087015190955090506001600160401b0381111561037757600080fd5b6103838782880161027e565b935050604085015160ff8116811461039a57600080fd5b6060959095015193969295505050565b600181811c908216806103be57607f821691505b6020821081036103de57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561042e57806000526020600020601f840160051c8101602085101561040b5750805b601f840160051c820191505b8181101561042b5760008155600101610417565b50505b505050565b81516001600160401b0381111561044c5761044c610268565b6104608161045a84546103aa565b846103e4565b6020601f821160018114610494576000831561047c5750848201515b600019600385901b1c1916600184901b17845561042b565b600084815260208120601f198516915b828110156104c457878501518255602094850194600190920191016104a4565b50848210156104e25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561051257634e487b7160e01b600052601160045260246000fd5b92915050565b61093c806105276000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101e8578063a9059cbb146101f0578063dd62ed3e14610203578063f2fde38b1461023c57600080fd5b806370a082311461019c578063715018a6146101c55780638da5cb5b146101cd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806340c10f191461017457806342966c681461018957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761024f565b6040516101049190610795565b60405180910390f35b61012061011b3660046107ff565b6102e1565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610829565b6102fb565b600554600160a01b900460ff1660405160ff9091168152602001610104565b6101876101823660046107ff565b61031f565b005b610187610197366004610866565b610335565b6101346101aa36600461087f565b6001600160a01b031660009081526020819052604090205490565b61018761034a565b6005546040516001600160a01b039091168152602001610104565b6100f761035e565b6101206101fe3660046107ff565b61036d565b6101346102113660046108a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018761024a36600461087f565b61037b565b60606003805461025e906108d4565b80601f016020809104026020016040519081016040528092919081815260200182805461028a906108d4565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b6000336102ef8185856103bb565b60019150505b92915050565b6000336103098582856103cd565b61031485858561044c565b506001949350505050565b6103276104ab565b61033182826104d8565b5050565b61033d6104ab565b610347338261050e565b50565b6103526104ab565b61035c6000610544565b565b60606004805461025e906108d4565b6000336102ef81858561044c565b6103836104ab565b6001600160a01b0381166103b257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61034781610544565b6103c88383836001610596565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610446578181101561043757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a9565b61044684848484036000610596565b50505050565b6001600160a01b03831661047657604051634b637e8f60e11b8152600060048201526024016103a9565b6001600160a01b0382166104a05760405163ec442f0560e01b8152600060048201526024016103a9565b6103c883838361066b565b6005546001600160a01b0316331461035c5760405163118cdaa760e01b81523360048201526024016103a9565b6001600160a01b0382166105025760405163ec442f0560e01b8152600060048201526024016103a9565b6103316000838361066b565b6001600160a01b03821661053857604051634b637e8f60e11b8152600060048201526024016103a9565b6103318260008361066b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105c05760405163e602df0560e01b8152600060048201526024016103a9565b6001600160a01b0383166105ea57604051634a1406b160e11b8152600060048201526024016103a9565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561044657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161065d91815260200190565b60405180910390a350505050565b6001600160a01b03831661069657806002600082825461068b919061090e565b909155506107089050565b6001600160a01b038316600090815260208190526040902054818110156106e95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661072457600280548290039055610743565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078891815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156107c357602081860181015160408684010152016107a6565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146107fa57600080fd5b919050565b6000806040838503121561081257600080fd5b61081b836107e3565b946020939093013593505050565b60008060006060848603121561083e57600080fd5b610847846107e3565b9250610855602085016107e3565b929592945050506040919091013590565b60006020828403121561087857600080fd5b5035919050565b60006020828403121561089157600080fd5b61089a826107e3565b9392505050565b600080604083850312156108b457600080fd5b6108bd836107e3565b91506108cb602084016107e3565b90509250929050565b600181811c908216806108e857607f821691505b60208210810361090857634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f557634e487b7160e01b600052601160045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE63 CODESIZE SUB DUP1 PUSH2 0xE63 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x321 JUMP JUMPDEST CALLER DUP5 DUP5 PUSH1 0x3 PUSH2 0x3E DUP4 DUP3 PUSH2 0x433 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4B DUP3 DUP3 PUSH2 0x433 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86 DUP2 PUSH2 0xB2 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0xA9 CALLER DUP3 PUSH2 0x104 JUMP JUMPDEST POP POP POP POP PUSH2 0x518 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x74 JUMP JUMPDEST PUSH2 0x13A PUSH1 0x0 DUP4 DUP4 PUSH2 0x13E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x169 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A8 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D6 JUMPI PUSH2 0x2D6 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2F1 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x359 DUP8 DUP3 DUP9 ADD PUSH2 0x27E JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x383 DUP8 DUP3 DUP9 ADD PUSH2 0x27E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x40B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x417 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x268 JUMP JUMPDEST PUSH2 0x460 DUP2 PUSH2 0x45A DUP5 SLOAD PUSH2 0x3AA JUMP JUMPDEST DUP5 PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x47C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x42B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C4 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4A4 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4E2 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x512 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x93C DUP1 PUSH2 0x527 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x187 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH2 0x134 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0x8D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28A SWAP1 PUSH2 0x8D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EF DUP2 DUP6 DUP6 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x309 DUP6 DUP3 DUP6 PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x314 DUP6 DUP6 DUP6 PUSH2 0x44C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x327 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x331 DUP3 DUP3 PUSH2 0x4D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x33D PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x347 CALLER DUP3 PUSH2 0x50E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x352 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x35C PUSH1 0x0 PUSH2 0x544 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EF DUP2 DUP6 DUP6 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x544 JUMP JUMPDEST PUSH2 0x3C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x596 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x446 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x446 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x596 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x3C8 DUP4 DUP4 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x331 PUSH1 0x0 DUP4 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x331 DUP3 PUSH1 0x0 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x446 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x65D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x696 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x708 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x724 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x788 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x7A6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP4 PUSH2 0x7E3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x847 DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 POP PUSH2 0x855 PUSH1 0x20 DUP6 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89A DUP3 PUSH2 0x7E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8BD DUP4 PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CB PUSH1 0x20 DUP5 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x908 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"168:690:24:-:0;;;245:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;410:10;386:5;393:7;1648:5:7;:13;386:5:24;1648::7;:13;:::i;:::-;-1:-1:-1;1671:7:7;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:5;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:5;;1350:1;1322:31;;;4414:51:26;4387:18;;1322:31:5;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;432:15:24::2;:27:::0;;-1:-1:-1;;;;432:27:24::2;-1:-1:-1::0;;;432:27:24::2;::::0;::::2;;;::::0;;469:33:::2;475:10;487:14:::0;469:5:::2;:33::i;:::-;245:264:::0;;;;168:690;;2912:187:5;3004:6;;;-1:-1:-1;;;;;3020:17:5;;;-1:-1:-1;;;;;;3020:17:5;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:7:-;-1:-1:-1;;;;;7509:21:7;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:7;;7582:1;7553:32;;;4414:51:26;4387:18;;7553:32:7;4268:203:26;7505:91:7;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:7;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:7;;-1:-1:-1;6074:540:7;;-1:-1:-1;;;;;6288:15:7;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:7;;-1:-1:-1;;;;;4923:32:26;;6367:50:7;;;4905:51:26;4972:18;;;4965:34;;;5015:18;;;5008:34;;;4878:18;;6367:50:7;4703:345:26;6317:115:7;-1:-1:-1;;;;;6552:15:7;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:7;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:7;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:7;7073:4;-1:-1:-1;;;;;7064:25:7;;7083:5;7064:25;;;;5199::26;;5187:2;5172:18;;5053:177;7064:25:7;;;;;;;;5989:1107;;;:::o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:26;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:26;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:26;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:26;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:26;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:26:o;985:769::-;1100:6;1108;1116;1124;1177:3;1165:9;1156:7;1152:23;1148:33;1145:53;;;1194:1;1191;1184:12;1145:53;1221:16;;-1:-1:-1;;;;;1249:30:26;;1246:50;;;1292:1;1289;1282:12;1246:50;1315:61;1368:7;1359:6;1348:9;1344:22;1315:61;:::i;:::-;1422:2;1407:18;;1401:25;1305:71;;-1:-1:-1;1401:25:26;-1:-1:-1;;;;;;1438:32:26;;1435:52;;;1483:1;1480;1473:12;1435:52;1506:63;1561:7;1550:8;1539:9;1535:24;1506:63;:::i;:::-;1496:73;;;1612:2;1601:9;1597:18;1591:25;1656:4;1649:5;1645:16;1638:5;1635:27;1625:55;;1676:1;1673;1666:12;1625:55;1744:2;1729:18;;;;1723:25;985:769;;;;-1:-1:-1;;;985:769:26:o;1759:380::-;1838:1;1834:12;;;;1881;;;1902:61;;1956:4;1948:6;1944:17;1934:27;;1902:61;2009:2;2001:6;1998:14;1978:18;1975:38;1972:161;;2055:10;2050:3;2046:20;2043:1;2036:31;2090:4;2087:1;2080:15;2118:4;2115:1;2108:15;1972:161;;1759:380;;;:::o;2270:518::-;2372:2;2367:3;2364:11;2361:421;;;2408:5;2405:1;2398:16;2452:4;2449:1;2439:18;2522:2;2510:10;2506:19;2503:1;2499:27;2493:4;2489:38;2558:4;2546:10;2543:20;2540:47;;;-1:-1:-1;2581:4:26;2540:47;2636:2;2631:3;2627:12;2624:1;2620:20;2614:4;2610:31;2600:41;;2691:81;2709:2;2702:5;2699:13;2691:81;;;2768:1;2754:16;;2735:1;2724:13;2691:81;;;2695:3;;2361:421;2270:518;;;:::o;2964:1299::-;3084:10;;-1:-1:-1;;;;;3106:30:26;;3103:56;;;3139:18;;:::i;:::-;3168:97;3258:6;3218:38;3250:4;3244:11;3218:38;:::i;:::-;3212:4;3168:97;:::i;:::-;3314:4;3345:2;3334:14;;3362:1;3357:649;;;;4050:1;4067:6;4064:89;;;-1:-1:-1;4119:19:26;;;4113:26;4064:89;-1:-1:-1;;2921:1:26;2917:11;;;2913:24;2909:29;2899:40;2945:1;2941:11;;;2896:57;4166:81;;3327:930;;3357:649;2217:1;2210:14;;;2254:4;2241:18;;-1:-1:-1;;3393:20:26;;;3511:222;3525:7;3522:1;3519:14;3511:222;;;3607:19;;;3601:26;3586:42;;3714:4;3699:20;;;;3667:1;3655:14;;;;3541:12;3511:222;;;3515:3;3761:6;3752:7;3749:19;3746:201;;;3822:19;;;3816:26;-1:-1:-1;;3905:1:26;3901:14;;;3917:3;3897:24;3893:37;3889:42;3874:58;3859:74;;3746:201;-1:-1:-1;;;;3993:1:26;3977:14;;;3973:22;3960:36;;-1:-1:-1;2964:1299:26:o;4476:222::-;4541:9;;;4562:10;;;4559:133;;;4614:10;4609:3;4605:20;4602:1;4595:31;4649:4;4646:1;4639:15;4677:4;4674:1;4667:15;4559:133;4476:222;;;;:::o;5053:177::-;168:690:24;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2319":{"entryPoint":955,"id":2319,"parameterSlots":3,"returnSlots":0},"@_approve_2379":{"entryPoint":1430,"id":2379,"parameterSlots":4,"returnSlots":0},"@_burn_2301":{"entryPoint":1294,"id":2301,"parameterSlots":2,"returnSlots":0},"@_checkOwner_1713":{"entryPoint":1195,"id":1713,"parameterSlots":0,"returnSlots":0},"@_mint_2268":{"entryPoint":1240,"id":2268,"parameterSlots":2,"returnSlots":0},"@_msgSender_2784":{"entryPoint":null,"id":2784,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2427":{"entryPoint":973,"id":2427,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_1775":{"entryPoint":1348,"id":1775,"parameterSlots":1,"returnSlots":0},"@_transfer_2158":{"entryPoint":1100,"id":2158,"parameterSlots":3,"returnSlots":0},"@_update_2235":{"entryPoint":1643,"id":2235,"parameterSlots":3,"returnSlots":0},"@allowance_2055":{"entryPoint":null,"id":2055,"parameterSlots":2,"returnSlots":1},"@approve_2079":{"entryPoint":737,"id":2079,"parameterSlots":2,"returnSlots":1},"@balanceOf_2014":{"entryPoint":null,"id":2014,"parameterSlots":1,"returnSlots":1},"@burn_8655":{"entryPoint":821,"id":8655,"parameterSlots":1,"returnSlots":0},"@decimals_8626":{"entryPoint":null,"id":8626,"parameterSlots":0,"returnSlots":1},"@mint_8641":{"entryPoint":799,"id":8641,"parameterSlots":2,"returnSlots":0},"@name_1974":{"entryPoint":591,"id":1974,"parameterSlots":0,"returnSlots":1},"@owner_1696":{"entryPoint":null,"id":1696,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1727":{"entryPoint":842,"id":1727,"parameterSlots":0,"returnSlots":0},"@symbol_1983":{"entryPoint":862,"id":1983,"parameterSlots":0,"returnSlots":1},"@totalSupply_2001":{"entryPoint":null,"id":2001,"parameterSlots":0,"returnSlots":1},"@transferFrom_2111":{"entryPoint":763,"id":2111,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1755":{"entryPoint":891,"id":1755,"parameterSlots":1,"returnSlots":0},"@transfer_2038":{"entryPoint":877,"id":2038,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2019,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2089,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2047,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2260,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:3825:26","nodeType":"YulBlock","src":"0:3825:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"135:406:26","nodeType":"YulBlock","src":"135:406:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"152:9:26","nodeType":"YulIdentifier","src":"152:9:26"},{"kind":"number","nativeSrc":"163:2:26","nodeType":"YulLiteral","src":"163:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"145:6:26","nodeType":"YulIdentifier","src":"145:6:26"},"nativeSrc":"145:21:26","nodeType":"YulFunctionCall","src":"145:21:26"},"nativeSrc":"145:21:26","nodeType":"YulExpressionStatement","src":"145:21:26"},{"nativeSrc":"175:27:26","nodeType":"YulVariableDeclaration","src":"175:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"195:6:26","nodeType":"YulIdentifier","src":"195:6:26"}],"functionName":{"name":"mload","nativeSrc":"189:5:26","nodeType":"YulIdentifier","src":"189:5:26"},"nativeSrc":"189:13:26","nodeType":"YulFunctionCall","src":"189:13:26"},"variables":[{"name":"length","nativeSrc":"179:6:26","nodeType":"YulTypedName","src":"179:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"222:9:26","nodeType":"YulIdentifier","src":"222:9:26"},{"kind":"number","nativeSrc":"233:2:26","nodeType":"YulLiteral","src":"233:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"218:3:26","nodeType":"YulIdentifier","src":"218:3:26"},"nativeSrc":"218:18:26","nodeType":"YulFunctionCall","src":"218:18:26"},{"name":"length","nativeSrc":"238:6:26","nodeType":"YulIdentifier","src":"238:6:26"}],"functionName":{"name":"mstore","nativeSrc":"211:6:26","nodeType":"YulIdentifier","src":"211:6:26"},"nativeSrc":"211:34:26","nodeType":"YulFunctionCall","src":"211:34:26"},"nativeSrc":"211:34:26","nodeType":"YulExpressionStatement","src":"211:34:26"},{"nativeSrc":"254:10:26","nodeType":"YulVariableDeclaration","src":"254:10:26","value":{"kind":"number","nativeSrc":"263:1:26","nodeType":"YulLiteral","src":"263:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"258:1:26","nodeType":"YulTypedName","src":"258:1:26","type":""}]},{"body":{"nativeSrc":"323:90:26","nodeType":"YulBlock","src":"323:90:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"352:9:26","nodeType":"YulIdentifier","src":"352:9:26"},{"name":"i","nativeSrc":"363:1:26","nodeType":"YulIdentifier","src":"363:1:26"}],"functionName":{"name":"add","nativeSrc":"348:3:26","nodeType":"YulIdentifier","src":"348:3:26"},"nativeSrc":"348:17:26","nodeType":"YulFunctionCall","src":"348:17:26"},{"kind":"number","nativeSrc":"367:2:26","nodeType":"YulLiteral","src":"367:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"344:3:26","nodeType":"YulIdentifier","src":"344:3:26"},"nativeSrc":"344:26:26","nodeType":"YulFunctionCall","src":"344:26:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"386:6:26","nodeType":"YulIdentifier","src":"386:6:26"},{"name":"i","nativeSrc":"394:1:26","nodeType":"YulIdentifier","src":"394:1:26"}],"functionName":{"name":"add","nativeSrc":"382:3:26","nodeType":"YulIdentifier","src":"382:3:26"},"nativeSrc":"382:14:26","nodeType":"YulFunctionCall","src":"382:14:26"},{"kind":"number","nativeSrc":"398:2:26","nodeType":"YulLiteral","src":"398:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"378:3:26","nodeType":"YulIdentifier","src":"378:3:26"},"nativeSrc":"378:23:26","nodeType":"YulFunctionCall","src":"378:23:26"}],"functionName":{"name":"mload","nativeSrc":"372:5:26","nodeType":"YulIdentifier","src":"372:5:26"},"nativeSrc":"372:30:26","nodeType":"YulFunctionCall","src":"372:30:26"}],"functionName":{"name":"mstore","nativeSrc":"337:6:26","nodeType":"YulIdentifier","src":"337:6:26"},"nativeSrc":"337:66:26","nodeType":"YulFunctionCall","src":"337:66:26"},"nativeSrc":"337:66:26","nodeType":"YulExpressionStatement","src":"337:66:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"284:1:26","nodeType":"YulIdentifier","src":"284:1:26"},{"name":"length","nativeSrc":"287:6:26","nodeType":"YulIdentifier","src":"287:6:26"}],"functionName":{"name":"lt","nativeSrc":"281:2:26","nodeType":"YulIdentifier","src":"281:2:26"},"nativeSrc":"281:13:26","nodeType":"YulFunctionCall","src":"281:13:26"},"nativeSrc":"273:140:26","nodeType":"YulForLoop","post":{"nativeSrc":"295:19:26","nodeType":"YulBlock","src":"295:19:26","statements":[{"nativeSrc":"297:15:26","nodeType":"YulAssignment","src":"297:15:26","value":{"arguments":[{"name":"i","nativeSrc":"306:1:26","nodeType":"YulIdentifier","src":"306:1:26"},{"kind":"number","nativeSrc":"309:2:26","nodeType":"YulLiteral","src":"309:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"302:3:26","nodeType":"YulIdentifier","src":"302:3:26"},"nativeSrc":"302:10:26","nodeType":"YulFunctionCall","src":"302:10:26"},"variableNames":[{"name":"i","nativeSrc":"297:1:26","nodeType":"YulIdentifier","src":"297:1:26"}]}]},"pre":{"nativeSrc":"277:3:26","nodeType":"YulBlock","src":"277:3:26","statements":[]},"src":"273:140:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"437:9:26","nodeType":"YulIdentifier","src":"437:9:26"},{"name":"length","nativeSrc":"448:6:26","nodeType":"YulIdentifier","src":"448:6:26"}],"functionName":{"name":"add","nativeSrc":"433:3:26","nodeType":"YulIdentifier","src":"433:3:26"},"nativeSrc":"433:22:26","nodeType":"YulFunctionCall","src":"433:22:26"},{"kind":"number","nativeSrc":"457:2:26","nodeType":"YulLiteral","src":"457:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"429:3:26","nodeType":"YulIdentifier","src":"429:3:26"},"nativeSrc":"429:31:26","nodeType":"YulFunctionCall","src":"429:31:26"},{"kind":"number","nativeSrc":"462:1:26","nodeType":"YulLiteral","src":"462:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"422:6:26","nodeType":"YulIdentifier","src":"422:6:26"},"nativeSrc":"422:42:26","nodeType":"YulFunctionCall","src":"422:42:26"},"nativeSrc":"422:42:26","nodeType":"YulExpressionStatement","src":"422:42:26"},{"nativeSrc":"473:62:26","nodeType":"YulAssignment","src":"473:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"489:9:26","nodeType":"YulIdentifier","src":"489:9:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"508:6:26","nodeType":"YulIdentifier","src":"508:6:26"},{"kind":"number","nativeSrc":"516:2:26","nodeType":"YulLiteral","src":"516:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"504:3:26","nodeType":"YulIdentifier","src":"504:3:26"},"nativeSrc":"504:15:26","nodeType":"YulFunctionCall","src":"504:15:26"},{"arguments":[{"kind":"number","nativeSrc":"525:2:26","nodeType":"YulLiteral","src":"525:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"521:3:26","nodeType":"YulIdentifier","src":"521:3:26"},"nativeSrc":"521:7:26","nodeType":"YulFunctionCall","src":"521:7:26"}],"functionName":{"name":"and","nativeSrc":"500:3:26","nodeType":"YulIdentifier","src":"500:3:26"},"nativeSrc":"500:29:26","nodeType":"YulFunctionCall","src":"500:29:26"}],"functionName":{"name":"add","nativeSrc":"485:3:26","nodeType":"YulIdentifier","src":"485:3:26"},"nativeSrc":"485:45:26","nodeType":"YulFunctionCall","src":"485:45:26"},{"kind":"number","nativeSrc":"532:2:26","nodeType":"YulLiteral","src":"532:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"481:3:26","nodeType":"YulIdentifier","src":"481:3:26"},"nativeSrc":"481:54:26","nodeType":"YulFunctionCall","src":"481:54:26"},"variableNames":[{"name":"tail","nativeSrc":"473:4:26","nodeType":"YulIdentifier","src":"473:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:527:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:26","nodeType":"YulTypedName","src":"104:9:26","type":""},{"name":"value0","nativeSrc":"115:6:26","nodeType":"YulTypedName","src":"115:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:26","nodeType":"YulTypedName","src":"126:4:26","type":""}],"src":"14:527:26"},{"body":{"nativeSrc":"595:124:26","nodeType":"YulBlock","src":"595:124:26","statements":[{"nativeSrc":"605:29:26","nodeType":"YulAssignment","src":"605:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"627:6:26","nodeType":"YulIdentifier","src":"627:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"614:12:26","nodeType":"YulIdentifier","src":"614:12:26"},"nativeSrc":"614:20:26","nodeType":"YulFunctionCall","src":"614:20:26"},"variableNames":[{"name":"value","nativeSrc":"605:5:26","nodeType":"YulIdentifier","src":"605:5:26"}]},{"body":{"nativeSrc":"697:16:26","nodeType":"YulBlock","src":"697:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"706:1:26","nodeType":"YulLiteral","src":"706:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"709:1:26","nodeType":"YulLiteral","src":"709:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"699:6:26","nodeType":"YulIdentifier","src":"699:6:26"},"nativeSrc":"699:12:26","nodeType":"YulFunctionCall","src":"699:12:26"},"nativeSrc":"699:12:26","nodeType":"YulExpressionStatement","src":"699:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:26","nodeType":"YulIdentifier","src":"656:5:26"},{"arguments":[{"name":"value","nativeSrc":"667:5:26","nodeType":"YulIdentifier","src":"667:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"682:3:26","nodeType":"YulLiteral","src":"682:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"687:1:26","nodeType":"YulLiteral","src":"687:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"678:3:26","nodeType":"YulIdentifier","src":"678:3:26"},"nativeSrc":"678:11:26","nodeType":"YulFunctionCall","src":"678:11:26"},{"kind":"number","nativeSrc":"691:1:26","nodeType":"YulLiteral","src":"691:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"674:3:26","nodeType":"YulIdentifier","src":"674:3:26"},"nativeSrc":"674:19:26","nodeType":"YulFunctionCall","src":"674:19:26"}],"functionName":{"name":"and","nativeSrc":"663:3:26","nodeType":"YulIdentifier","src":"663:3:26"},"nativeSrc":"663:31:26","nodeType":"YulFunctionCall","src":"663:31:26"}],"functionName":{"name":"eq","nativeSrc":"653:2:26","nodeType":"YulIdentifier","src":"653:2:26"},"nativeSrc":"653:42:26","nodeType":"YulFunctionCall","src":"653:42:26"}],"functionName":{"name":"iszero","nativeSrc":"646:6:26","nodeType":"YulIdentifier","src":"646:6:26"},"nativeSrc":"646:50:26","nodeType":"YulFunctionCall","src":"646:50:26"},"nativeSrc":"643:70:26","nodeType":"YulIf","src":"643:70:26"}]},"name":"abi_decode_address","nativeSrc":"546:173:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"574:6:26","nodeType":"YulTypedName","src":"574:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"585:5:26","nodeType":"YulTypedName","src":"585:5:26","type":""}],"src":"546:173:26"},{"body":{"nativeSrc":"811:213:26","nodeType":"YulBlock","src":"811:213:26","statements":[{"body":{"nativeSrc":"857:16:26","nodeType":"YulBlock","src":"857:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"866:1:26","nodeType":"YulLiteral","src":"866:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"869:1:26","nodeType":"YulLiteral","src":"869:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"859:6:26","nodeType":"YulIdentifier","src":"859:6:26"},"nativeSrc":"859:12:26","nodeType":"YulFunctionCall","src":"859:12:26"},"nativeSrc":"859:12:26","nodeType":"YulExpressionStatement","src":"859:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"832:7:26","nodeType":"YulIdentifier","src":"832:7:26"},{"name":"headStart","nativeSrc":"841:9:26","nodeType":"YulIdentifier","src":"841:9:26"}],"functionName":{"name":"sub","nativeSrc":"828:3:26","nodeType":"YulIdentifier","src":"828:3:26"},"nativeSrc":"828:23:26","nodeType":"YulFunctionCall","src":"828:23:26"},{"kind":"number","nativeSrc":"853:2:26","nodeType":"YulLiteral","src":"853:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"824:3:26","nodeType":"YulIdentifier","src":"824:3:26"},"nativeSrc":"824:32:26","nodeType":"YulFunctionCall","src":"824:32:26"},"nativeSrc":"821:52:26","nodeType":"YulIf","src":"821:52:26"},{"nativeSrc":"882:39:26","nodeType":"YulAssignment","src":"882:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"911:9:26","nodeType":"YulIdentifier","src":"911:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"892:18:26","nodeType":"YulIdentifier","src":"892:18:26"},"nativeSrc":"892:29:26","nodeType":"YulFunctionCall","src":"892:29:26"},"variableNames":[{"name":"value0","nativeSrc":"882:6:26","nodeType":"YulIdentifier","src":"882:6:26"}]},{"nativeSrc":"930:14:26","nodeType":"YulVariableDeclaration","src":"930:14:26","value":{"kind":"number","nativeSrc":"943:1:26","nodeType":"YulLiteral","src":"943:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"934:5:26","nodeType":"YulTypedName","src":"934:5:26","type":""}]},{"nativeSrc":"953:41:26","nodeType":"YulAssignment","src":"953:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"979:9:26","nodeType":"YulIdentifier","src":"979:9:26"},{"kind":"number","nativeSrc":"990:2:26","nodeType":"YulLiteral","src":"990:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"975:3:26","nodeType":"YulIdentifier","src":"975:3:26"},"nativeSrc":"975:18:26","nodeType":"YulFunctionCall","src":"975:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"962:12:26","nodeType":"YulIdentifier","src":"962:12:26"},"nativeSrc":"962:32:26","nodeType":"YulFunctionCall","src":"962:32:26"},"variableNames":[{"name":"value","nativeSrc":"953:5:26","nodeType":"YulIdentifier","src":"953:5:26"}]},{"nativeSrc":"1003:15:26","nodeType":"YulAssignment","src":"1003:15:26","value":{"name":"value","nativeSrc":"1013:5:26","nodeType":"YulIdentifier","src":"1013:5:26"},"variableNames":[{"name":"value1","nativeSrc":"1003:6:26","nodeType":"YulIdentifier","src":"1003:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"724:300:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"769:9:26","nodeType":"YulTypedName","src":"769:9:26","type":""},{"name":"dataEnd","nativeSrc":"780:7:26","nodeType":"YulTypedName","src":"780:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"792:6:26","nodeType":"YulTypedName","src":"792:6:26","type":""},{"name":"value1","nativeSrc":"800:6:26","nodeType":"YulTypedName","src":"800:6:26","type":""}],"src":"724:300:26"},{"body":{"nativeSrc":"1124:92:26","nodeType":"YulBlock","src":"1124:92:26","statements":[{"nativeSrc":"1134:26:26","nodeType":"YulAssignment","src":"1134:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1146:9:26","nodeType":"YulIdentifier","src":"1146:9:26"},{"kind":"number","nativeSrc":"1157:2:26","nodeType":"YulLiteral","src":"1157:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1142:3:26","nodeType":"YulIdentifier","src":"1142:3:26"},"nativeSrc":"1142:18:26","nodeType":"YulFunctionCall","src":"1142:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1134:4:26","nodeType":"YulIdentifier","src":"1134:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1176:9:26","nodeType":"YulIdentifier","src":"1176:9:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1201:6:26","nodeType":"YulIdentifier","src":"1201:6:26"}],"functionName":{"name":"iszero","nativeSrc":"1194:6:26","nodeType":"YulIdentifier","src":"1194:6:26"},"nativeSrc":"1194:14:26","nodeType":"YulFunctionCall","src":"1194:14:26"}],"functionName":{"name":"iszero","nativeSrc":"1187:6:26","nodeType":"YulIdentifier","src":"1187:6:26"},"nativeSrc":"1187:22:26","nodeType":"YulFunctionCall","src":"1187:22:26"}],"functionName":{"name":"mstore","nativeSrc":"1169:6:26","nodeType":"YulIdentifier","src":"1169:6:26"},"nativeSrc":"1169:41:26","nodeType":"YulFunctionCall","src":"1169:41:26"},"nativeSrc":"1169:41:26","nodeType":"YulExpressionStatement","src":"1169:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1029:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1093:9:26","nodeType":"YulTypedName","src":"1093:9:26","type":""},{"name":"value0","nativeSrc":"1104:6:26","nodeType":"YulTypedName","src":"1104:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1115:4:26","nodeType":"YulTypedName","src":"1115:4:26","type":""}],"src":"1029:187:26"},{"body":{"nativeSrc":"1322:76:26","nodeType":"YulBlock","src":"1322:76:26","statements":[{"nativeSrc":"1332:26:26","nodeType":"YulAssignment","src":"1332:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1344:9:26","nodeType":"YulIdentifier","src":"1344:9:26"},{"kind":"number","nativeSrc":"1355:2:26","nodeType":"YulLiteral","src":"1355:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1340:3:26","nodeType":"YulIdentifier","src":"1340:3:26"},"nativeSrc":"1340:18:26","nodeType":"YulFunctionCall","src":"1340:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1332:4:26","nodeType":"YulIdentifier","src":"1332:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1374:9:26","nodeType":"YulIdentifier","src":"1374:9:26"},{"name":"value0","nativeSrc":"1385:6:26","nodeType":"YulIdentifier","src":"1385:6:26"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:26","nodeType":"YulIdentifier","src":"1367:6:26"},"nativeSrc":"1367:25:26","nodeType":"YulFunctionCall","src":"1367:25:26"},"nativeSrc":"1367:25:26","nodeType":"YulExpressionStatement","src":"1367:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1221:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1291:9:26","nodeType":"YulTypedName","src":"1291:9:26","type":""},{"name":"value0","nativeSrc":"1302:6:26","nodeType":"YulTypedName","src":"1302:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1313:4:26","nodeType":"YulTypedName","src":"1313:4:26","type":""}],"src":"1221:177:26"},{"body":{"nativeSrc":"1507:270:26","nodeType":"YulBlock","src":"1507:270:26","statements":[{"body":{"nativeSrc":"1553:16:26","nodeType":"YulBlock","src":"1553:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1562:1:26","nodeType":"YulLiteral","src":"1562:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1565:1:26","nodeType":"YulLiteral","src":"1565:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1555:6:26","nodeType":"YulIdentifier","src":"1555:6:26"},"nativeSrc":"1555:12:26","nodeType":"YulFunctionCall","src":"1555:12:26"},"nativeSrc":"1555:12:26","nodeType":"YulExpressionStatement","src":"1555:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1528:7:26","nodeType":"YulIdentifier","src":"1528:7:26"},{"name":"headStart","nativeSrc":"1537:9:26","nodeType":"YulIdentifier","src":"1537:9:26"}],"functionName":{"name":"sub","nativeSrc":"1524:3:26","nodeType":"YulIdentifier","src":"1524:3:26"},"nativeSrc":"1524:23:26","nodeType":"YulFunctionCall","src":"1524:23:26"},{"kind":"number","nativeSrc":"1549:2:26","nodeType":"YulLiteral","src":"1549:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1520:3:26","nodeType":"YulIdentifier","src":"1520:3:26"},"nativeSrc":"1520:32:26","nodeType":"YulFunctionCall","src":"1520:32:26"},"nativeSrc":"1517:52:26","nodeType":"YulIf","src":"1517:52:26"},{"nativeSrc":"1578:39:26","nodeType":"YulAssignment","src":"1578:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1607:9:26","nodeType":"YulIdentifier","src":"1607:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1588:18:26","nodeType":"YulIdentifier","src":"1588:18:26"},"nativeSrc":"1588:29:26","nodeType":"YulFunctionCall","src":"1588:29:26"},"variableNames":[{"name":"value0","nativeSrc":"1578:6:26","nodeType":"YulIdentifier","src":"1578:6:26"}]},{"nativeSrc":"1626:48:26","nodeType":"YulAssignment","src":"1626:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1659:9:26","nodeType":"YulIdentifier","src":"1659:9:26"},{"kind":"number","nativeSrc":"1670:2:26","nodeType":"YulLiteral","src":"1670:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1655:3:26","nodeType":"YulIdentifier","src":"1655:3:26"},"nativeSrc":"1655:18:26","nodeType":"YulFunctionCall","src":"1655:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1636:18:26","nodeType":"YulIdentifier","src":"1636:18:26"},"nativeSrc":"1636:38:26","nodeType":"YulFunctionCall","src":"1636:38:26"},"variableNames":[{"name":"value1","nativeSrc":"1626:6:26","nodeType":"YulIdentifier","src":"1626:6:26"}]},{"nativeSrc":"1683:14:26","nodeType":"YulVariableDeclaration","src":"1683:14:26","value":{"kind":"number","nativeSrc":"1696:1:26","nodeType":"YulLiteral","src":"1696:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1687:5:26","nodeType":"YulTypedName","src":"1687:5:26","type":""}]},{"nativeSrc":"1706:41:26","nodeType":"YulAssignment","src":"1706:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1732:9:26","nodeType":"YulIdentifier","src":"1732:9:26"},{"kind":"number","nativeSrc":"1743:2:26","nodeType":"YulLiteral","src":"1743:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1728:3:26","nodeType":"YulIdentifier","src":"1728:3:26"},"nativeSrc":"1728:18:26","nodeType":"YulFunctionCall","src":"1728:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1715:12:26","nodeType":"YulIdentifier","src":"1715:12:26"},"nativeSrc":"1715:32:26","nodeType":"YulFunctionCall","src":"1715:32:26"},"variableNames":[{"name":"value","nativeSrc":"1706:5:26","nodeType":"YulIdentifier","src":"1706:5:26"}]},{"nativeSrc":"1756:15:26","nodeType":"YulAssignment","src":"1756:15:26","value":{"name":"value","nativeSrc":"1766:5:26","nodeType":"YulIdentifier","src":"1766:5:26"},"variableNames":[{"name":"value2","nativeSrc":"1756:6:26","nodeType":"YulIdentifier","src":"1756:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1403:374:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1457:9:26","nodeType":"YulTypedName","src":"1457:9:26","type":""},{"name":"dataEnd","nativeSrc":"1468:7:26","nodeType":"YulTypedName","src":"1468:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1480:6:26","nodeType":"YulTypedName","src":"1480:6:26","type":""},{"name":"value1","nativeSrc":"1488:6:26","nodeType":"YulTypedName","src":"1488:6:26","type":""},{"name":"value2","nativeSrc":"1496:6:26","nodeType":"YulTypedName","src":"1496:6:26","type":""}],"src":"1403:374:26"},{"body":{"nativeSrc":"1879:87:26","nodeType":"YulBlock","src":"1879:87:26","statements":[{"nativeSrc":"1889:26:26","nodeType":"YulAssignment","src":"1889:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1901:9:26","nodeType":"YulIdentifier","src":"1901:9:26"},{"kind":"number","nativeSrc":"1912:2:26","nodeType":"YulLiteral","src":"1912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1897:3:26","nodeType":"YulIdentifier","src":"1897:3:26"},"nativeSrc":"1897:18:26","nodeType":"YulFunctionCall","src":"1897:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1889:4:26","nodeType":"YulIdentifier","src":"1889:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1931:9:26","nodeType":"YulIdentifier","src":"1931:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1946:6:26","nodeType":"YulIdentifier","src":"1946:6:26"},{"kind":"number","nativeSrc":"1954:4:26","nodeType":"YulLiteral","src":"1954:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1942:3:26","nodeType":"YulIdentifier","src":"1942:3:26"},"nativeSrc":"1942:17:26","nodeType":"YulFunctionCall","src":"1942:17:26"}],"functionName":{"name":"mstore","nativeSrc":"1924:6:26","nodeType":"YulIdentifier","src":"1924:6:26"},"nativeSrc":"1924:36:26","nodeType":"YulFunctionCall","src":"1924:36:26"},"nativeSrc":"1924:36:26","nodeType":"YulExpressionStatement","src":"1924:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1782:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1848:9:26","nodeType":"YulTypedName","src":"1848:9:26","type":""},{"name":"value0","nativeSrc":"1859:6:26","nodeType":"YulTypedName","src":"1859:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1870:4:26","nodeType":"YulTypedName","src":"1870:4:26","type":""}],"src":"1782:184:26"},{"body":{"nativeSrc":"2041:156:26","nodeType":"YulBlock","src":"2041:156:26","statements":[{"body":{"nativeSrc":"2087:16:26","nodeType":"YulBlock","src":"2087:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2096:1:26","nodeType":"YulLiteral","src":"2096:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2099:1:26","nodeType":"YulLiteral","src":"2099:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2089:6:26","nodeType":"YulIdentifier","src":"2089:6:26"},"nativeSrc":"2089:12:26","nodeType":"YulFunctionCall","src":"2089:12:26"},"nativeSrc":"2089:12:26","nodeType":"YulExpressionStatement","src":"2089:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2062:7:26","nodeType":"YulIdentifier","src":"2062:7:26"},{"name":"headStart","nativeSrc":"2071:9:26","nodeType":"YulIdentifier","src":"2071:9:26"}],"functionName":{"name":"sub","nativeSrc":"2058:3:26","nodeType":"YulIdentifier","src":"2058:3:26"},"nativeSrc":"2058:23:26","nodeType":"YulFunctionCall","src":"2058:23:26"},{"kind":"number","nativeSrc":"2083:2:26","nodeType":"YulLiteral","src":"2083:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2054:3:26","nodeType":"YulIdentifier","src":"2054:3:26"},"nativeSrc":"2054:32:26","nodeType":"YulFunctionCall","src":"2054:32:26"},"nativeSrc":"2051:52:26","nodeType":"YulIf","src":"2051:52:26"},{"nativeSrc":"2112:14:26","nodeType":"YulVariableDeclaration","src":"2112:14:26","value":{"kind":"number","nativeSrc":"2125:1:26","nodeType":"YulLiteral","src":"2125:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2116:5:26","nodeType":"YulTypedName","src":"2116:5:26","type":""}]},{"nativeSrc":"2135:32:26","nodeType":"YulAssignment","src":"2135:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2157:9:26","nodeType":"YulIdentifier","src":"2157:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"2144:12:26","nodeType":"YulIdentifier","src":"2144:12:26"},"nativeSrc":"2144:23:26","nodeType":"YulFunctionCall","src":"2144:23:26"},"variableNames":[{"name":"value","nativeSrc":"2135:5:26","nodeType":"YulIdentifier","src":"2135:5:26"}]},{"nativeSrc":"2176:15:26","nodeType":"YulAssignment","src":"2176:15:26","value":{"name":"value","nativeSrc":"2186:5:26","nodeType":"YulIdentifier","src":"2186:5:26"},"variableNames":[{"name":"value0","nativeSrc":"2176:6:26","nodeType":"YulIdentifier","src":"2176:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1971:226:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2007:9:26","nodeType":"YulTypedName","src":"2007:9:26","type":""},{"name":"dataEnd","nativeSrc":"2018:7:26","nodeType":"YulTypedName","src":"2018:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2030:6:26","nodeType":"YulTypedName","src":"2030:6:26","type":""}],"src":"1971:226:26"},{"body":{"nativeSrc":"2272:116:26","nodeType":"YulBlock","src":"2272:116:26","statements":[{"body":{"nativeSrc":"2318:16:26","nodeType":"YulBlock","src":"2318:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2327:1:26","nodeType":"YulLiteral","src":"2327:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2330:1:26","nodeType":"YulLiteral","src":"2330:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2320:6:26","nodeType":"YulIdentifier","src":"2320:6:26"},"nativeSrc":"2320:12:26","nodeType":"YulFunctionCall","src":"2320:12:26"},"nativeSrc":"2320:12:26","nodeType":"YulExpressionStatement","src":"2320:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2293:7:26","nodeType":"YulIdentifier","src":"2293:7:26"},{"name":"headStart","nativeSrc":"2302:9:26","nodeType":"YulIdentifier","src":"2302:9:26"}],"functionName":{"name":"sub","nativeSrc":"2289:3:26","nodeType":"YulIdentifier","src":"2289:3:26"},"nativeSrc":"2289:23:26","nodeType":"YulFunctionCall","src":"2289:23:26"},{"kind":"number","nativeSrc":"2314:2:26","nodeType":"YulLiteral","src":"2314:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2285:3:26","nodeType":"YulIdentifier","src":"2285:3:26"},"nativeSrc":"2285:32:26","nodeType":"YulFunctionCall","src":"2285:32:26"},"nativeSrc":"2282:52:26","nodeType":"YulIf","src":"2282:52:26"},{"nativeSrc":"2343:39:26","nodeType":"YulAssignment","src":"2343:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2372:9:26","nodeType":"YulIdentifier","src":"2372:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2353:18:26","nodeType":"YulIdentifier","src":"2353:18:26"},"nativeSrc":"2353:29:26","nodeType":"YulFunctionCall","src":"2353:29:26"},"variableNames":[{"name":"value0","nativeSrc":"2343:6:26","nodeType":"YulIdentifier","src":"2343:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2202:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2238:9:26","nodeType":"YulTypedName","src":"2238:9:26","type":""},{"name":"dataEnd","nativeSrc":"2249:7:26","nodeType":"YulTypedName","src":"2249:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2261:6:26","nodeType":"YulTypedName","src":"2261:6:26","type":""}],"src":"2202:186:26"},{"body":{"nativeSrc":"2494:102:26","nodeType":"YulBlock","src":"2494:102:26","statements":[{"nativeSrc":"2504:26:26","nodeType":"YulAssignment","src":"2504:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2516:9:26","nodeType":"YulIdentifier","src":"2516:9:26"},{"kind":"number","nativeSrc":"2527:2:26","nodeType":"YulLiteral","src":"2527:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2512:3:26","nodeType":"YulIdentifier","src":"2512:3:26"},"nativeSrc":"2512:18:26","nodeType":"YulFunctionCall","src":"2512:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2504:4:26","nodeType":"YulIdentifier","src":"2504:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2546:9:26","nodeType":"YulIdentifier","src":"2546:9:26"},{"arguments":[{"name":"value0","nativeSrc":"2561:6:26","nodeType":"YulIdentifier","src":"2561:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2577:3:26","nodeType":"YulLiteral","src":"2577:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2582:1:26","nodeType":"YulLiteral","src":"2582:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2573:3:26","nodeType":"YulIdentifier","src":"2573:3:26"},"nativeSrc":"2573:11:26","nodeType":"YulFunctionCall","src":"2573:11:26"},{"kind":"number","nativeSrc":"2586:1:26","nodeType":"YulLiteral","src":"2586:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2569:3:26","nodeType":"YulIdentifier","src":"2569:3:26"},"nativeSrc":"2569:19:26","nodeType":"YulFunctionCall","src":"2569:19:26"}],"functionName":{"name":"and","nativeSrc":"2557:3:26","nodeType":"YulIdentifier","src":"2557:3:26"},"nativeSrc":"2557:32:26","nodeType":"YulFunctionCall","src":"2557:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2539:6:26","nodeType":"YulIdentifier","src":"2539:6:26"},"nativeSrc":"2539:51:26","nodeType":"YulFunctionCall","src":"2539:51:26"},"nativeSrc":"2539:51:26","nodeType":"YulExpressionStatement","src":"2539:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2393:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2463:9:26","nodeType":"YulTypedName","src":"2463:9:26","type":""},{"name":"value0","nativeSrc":"2474:6:26","nodeType":"YulTypedName","src":"2474:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2485:4:26","nodeType":"YulTypedName","src":"2485:4:26","type":""}],"src":"2393:203:26"},{"body":{"nativeSrc":"2688:173:26","nodeType":"YulBlock","src":"2688:173:26","statements":[{"body":{"nativeSrc":"2734:16:26","nodeType":"YulBlock","src":"2734:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2743:1:26","nodeType":"YulLiteral","src":"2743:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2746:1:26","nodeType":"YulLiteral","src":"2746:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2736:6:26","nodeType":"YulIdentifier","src":"2736:6:26"},"nativeSrc":"2736:12:26","nodeType":"YulFunctionCall","src":"2736:12:26"},"nativeSrc":"2736:12:26","nodeType":"YulExpressionStatement","src":"2736:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2709:7:26","nodeType":"YulIdentifier","src":"2709:7:26"},{"name":"headStart","nativeSrc":"2718:9:26","nodeType":"YulIdentifier","src":"2718:9:26"}],"functionName":{"name":"sub","nativeSrc":"2705:3:26","nodeType":"YulIdentifier","src":"2705:3:26"},"nativeSrc":"2705:23:26","nodeType":"YulFunctionCall","src":"2705:23:26"},{"kind":"number","nativeSrc":"2730:2:26","nodeType":"YulLiteral","src":"2730:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2701:3:26","nodeType":"YulIdentifier","src":"2701:3:26"},"nativeSrc":"2701:32:26","nodeType":"YulFunctionCall","src":"2701:32:26"},"nativeSrc":"2698:52:26","nodeType":"YulIf","src":"2698:52:26"},{"nativeSrc":"2759:39:26","nodeType":"YulAssignment","src":"2759:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2788:9:26","nodeType":"YulIdentifier","src":"2788:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2769:18:26","nodeType":"YulIdentifier","src":"2769:18:26"},"nativeSrc":"2769:29:26","nodeType":"YulFunctionCall","src":"2769:29:26"},"variableNames":[{"name":"value0","nativeSrc":"2759:6:26","nodeType":"YulIdentifier","src":"2759:6:26"}]},{"nativeSrc":"2807:48:26","nodeType":"YulAssignment","src":"2807:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:26","nodeType":"YulIdentifier","src":"2840:9:26"},{"kind":"number","nativeSrc":"2851:2:26","nodeType":"YulLiteral","src":"2851:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2836:3:26","nodeType":"YulIdentifier","src":"2836:3:26"},"nativeSrc":"2836:18:26","nodeType":"YulFunctionCall","src":"2836:18:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2817:18:26","nodeType":"YulIdentifier","src":"2817:18:26"},"nativeSrc":"2817:38:26","nodeType":"YulFunctionCall","src":"2817:38:26"},"variableNames":[{"name":"value1","nativeSrc":"2807:6:26","nodeType":"YulIdentifier","src":"2807:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2601:260:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2646:9:26","nodeType":"YulTypedName","src":"2646:9:26","type":""},{"name":"dataEnd","nativeSrc":"2657:7:26","nodeType":"YulTypedName","src":"2657:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2669:6:26","nodeType":"YulTypedName","src":"2669:6:26","type":""},{"name":"value1","nativeSrc":"2677:6:26","nodeType":"YulTypedName","src":"2677:6:26","type":""}],"src":"2601:260:26"},{"body":{"nativeSrc":"2921:325:26","nodeType":"YulBlock","src":"2921:325:26","statements":[{"nativeSrc":"2931:22:26","nodeType":"YulAssignment","src":"2931:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"2945:1:26","nodeType":"YulLiteral","src":"2945:1:26","type":"","value":"1"},{"name":"data","nativeSrc":"2948:4:26","nodeType":"YulIdentifier","src":"2948:4:26"}],"functionName":{"name":"shr","nativeSrc":"2941:3:26","nodeType":"YulIdentifier","src":"2941:3:26"},"nativeSrc":"2941:12:26","nodeType":"YulFunctionCall","src":"2941:12:26"},"variableNames":[{"name":"length","nativeSrc":"2931:6:26","nodeType":"YulIdentifier","src":"2931:6:26"}]},{"nativeSrc":"2962:38:26","nodeType":"YulVariableDeclaration","src":"2962:38:26","value":{"arguments":[{"name":"data","nativeSrc":"2992:4:26","nodeType":"YulIdentifier","src":"2992:4:26"},{"kind":"number","nativeSrc":"2998:1:26","nodeType":"YulLiteral","src":"2998:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2988:3:26","nodeType":"YulIdentifier","src":"2988:3:26"},"nativeSrc":"2988:12:26","nodeType":"YulFunctionCall","src":"2988:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2966:18:26","nodeType":"YulTypedName","src":"2966:18:26","type":""}]},{"body":{"nativeSrc":"3039:31:26","nodeType":"YulBlock","src":"3039:31:26","statements":[{"nativeSrc":"3041:27:26","nodeType":"YulAssignment","src":"3041:27:26","value":{"arguments":[{"name":"length","nativeSrc":"3055:6:26","nodeType":"YulIdentifier","src":"3055:6:26"},{"kind":"number","nativeSrc":"3063:4:26","nodeType":"YulLiteral","src":"3063:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"3051:3:26","nodeType":"YulIdentifier","src":"3051:3:26"},"nativeSrc":"3051:17:26","nodeType":"YulFunctionCall","src":"3051:17:26"},"variableNames":[{"name":"length","nativeSrc":"3041:6:26","nodeType":"YulIdentifier","src":"3041:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3019:18:26","nodeType":"YulIdentifier","src":"3019:18:26"}],"functionName":{"name":"iszero","nativeSrc":"3012:6:26","nodeType":"YulIdentifier","src":"3012:6:26"},"nativeSrc":"3012:26:26","nodeType":"YulFunctionCall","src":"3012:26:26"},"nativeSrc":"3009:61:26","nodeType":"YulIf","src":"3009:61:26"},{"body":{"nativeSrc":"3129:111:26","nodeType":"YulBlock","src":"3129:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3150:1:26","nodeType":"YulLiteral","src":"3150:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3157:3:26","nodeType":"YulLiteral","src":"3157:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"3162:10:26","nodeType":"YulLiteral","src":"3162:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3153:3:26","nodeType":"YulIdentifier","src":"3153:3:26"},"nativeSrc":"3153:20:26","nodeType":"YulFunctionCall","src":"3153:20:26"}],"functionName":{"name":"mstore","nativeSrc":"3143:6:26","nodeType":"YulIdentifier","src":"3143:6:26"},"nativeSrc":"3143:31:26","nodeType":"YulFunctionCall","src":"3143:31:26"},"nativeSrc":"3143:31:26","nodeType":"YulExpressionStatement","src":"3143:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3194:1:26","nodeType":"YulLiteral","src":"3194:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"3197:4:26","nodeType":"YulLiteral","src":"3197:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3187:6:26","nodeType":"YulIdentifier","src":"3187:6:26"},"nativeSrc":"3187:15:26","nodeType":"YulFunctionCall","src":"3187:15:26"},"nativeSrc":"3187:15:26","nodeType":"YulExpressionStatement","src":"3187:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3222:1:26","nodeType":"YulLiteral","src":"3222:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3225:4:26","nodeType":"YulLiteral","src":"3225:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3215:6:26","nodeType":"YulIdentifier","src":"3215:6:26"},"nativeSrc":"3215:15:26","nodeType":"YulFunctionCall","src":"3215:15:26"},"nativeSrc":"3215:15:26","nodeType":"YulExpressionStatement","src":"3215:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3085:18:26","nodeType":"YulIdentifier","src":"3085:18:26"},{"arguments":[{"name":"length","nativeSrc":"3108:6:26","nodeType":"YulIdentifier","src":"3108:6:26"},{"kind":"number","nativeSrc":"3116:2:26","nodeType":"YulLiteral","src":"3116:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3105:2:26","nodeType":"YulIdentifier","src":"3105:2:26"},"nativeSrc":"3105:14:26","nodeType":"YulFunctionCall","src":"3105:14:26"}],"functionName":{"name":"eq","nativeSrc":"3082:2:26","nodeType":"YulIdentifier","src":"3082:2:26"},"nativeSrc":"3082:38:26","nodeType":"YulFunctionCall","src":"3082:38:26"},"nativeSrc":"3079:161:26","nodeType":"YulIf","src":"3079:161:26"}]},"name":"extract_byte_array_length","nativeSrc":"2866:380:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2901:4:26","nodeType":"YulTypedName","src":"2901:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2910:6:26","nodeType":"YulTypedName","src":"2910:6:26","type":""}],"src":"2866:380:26"},{"body":{"nativeSrc":"3408:188:26","nodeType":"YulBlock","src":"3408:188:26","statements":[{"nativeSrc":"3418:26:26","nodeType":"YulAssignment","src":"3418:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3430:9:26","nodeType":"YulIdentifier","src":"3430:9:26"},{"kind":"number","nativeSrc":"3441:2:26","nodeType":"YulLiteral","src":"3441:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3426:3:26","nodeType":"YulIdentifier","src":"3426:3:26"},"nativeSrc":"3426:18:26","nodeType":"YulFunctionCall","src":"3426:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3418:4:26","nodeType":"YulIdentifier","src":"3418:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3460:9:26","nodeType":"YulIdentifier","src":"3460:9:26"},{"arguments":[{"name":"value0","nativeSrc":"3475:6:26","nodeType":"YulIdentifier","src":"3475:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3491:3:26","nodeType":"YulLiteral","src":"3491:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"3496:1:26","nodeType":"YulLiteral","src":"3496:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3487:3:26","nodeType":"YulIdentifier","src":"3487:3:26"},"nativeSrc":"3487:11:26","nodeType":"YulFunctionCall","src":"3487:11:26"},{"kind":"number","nativeSrc":"3500:1:26","nodeType":"YulLiteral","src":"3500:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3483:3:26","nodeType":"YulIdentifier","src":"3483:3:26"},"nativeSrc":"3483:19:26","nodeType":"YulFunctionCall","src":"3483:19:26"}],"functionName":{"name":"and","nativeSrc":"3471:3:26","nodeType":"YulIdentifier","src":"3471:3:26"},"nativeSrc":"3471:32:26","nodeType":"YulFunctionCall","src":"3471:32:26"}],"functionName":{"name":"mstore","nativeSrc":"3453:6:26","nodeType":"YulIdentifier","src":"3453:6:26"},"nativeSrc":"3453:51:26","nodeType":"YulFunctionCall","src":"3453:51:26"},"nativeSrc":"3453:51:26","nodeType":"YulExpressionStatement","src":"3453:51:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3524:9:26","nodeType":"YulIdentifier","src":"3524:9:26"},{"kind":"number","nativeSrc":"3535:2:26","nodeType":"YulLiteral","src":"3535:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3520:3:26","nodeType":"YulIdentifier","src":"3520:3:26"},"nativeSrc":"3520:18:26","nodeType":"YulFunctionCall","src":"3520:18:26"},{"name":"value1","nativeSrc":"3540:6:26","nodeType":"YulIdentifier","src":"3540:6:26"}],"functionName":{"name":"mstore","nativeSrc":"3513:6:26","nodeType":"YulIdentifier","src":"3513:6:26"},"nativeSrc":"3513:34:26","nodeType":"YulFunctionCall","src":"3513:34:26"},"nativeSrc":"3513:34:26","nodeType":"YulExpressionStatement","src":"3513:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3567:9:26","nodeType":"YulIdentifier","src":"3567:9:26"},{"kind":"number","nativeSrc":"3578:2:26","nodeType":"YulLiteral","src":"3578:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3563:3:26","nodeType":"YulIdentifier","src":"3563:3:26"},"nativeSrc":"3563:18:26","nodeType":"YulFunctionCall","src":"3563:18:26"},{"name":"value2","nativeSrc":"3583:6:26","nodeType":"YulIdentifier","src":"3583:6:26"}],"functionName":{"name":"mstore","nativeSrc":"3556:6:26","nodeType":"YulIdentifier","src":"3556:6:26"},"nativeSrc":"3556:34:26","nodeType":"YulFunctionCall","src":"3556:34:26"},"nativeSrc":"3556:34:26","nodeType":"YulExpressionStatement","src":"3556:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3251:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3361:9:26","nodeType":"YulTypedName","src":"3361:9:26","type":""},{"name":"value2","nativeSrc":"3372:6:26","nodeType":"YulTypedName","src":"3372:6:26","type":""},{"name":"value1","nativeSrc":"3380:6:26","nodeType":"YulTypedName","src":"3380:6:26","type":""},{"name":"value0","nativeSrc":"3388:6:26","nodeType":"YulTypedName","src":"3388:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3399:4:26","nodeType":"YulTypedName","src":"3399:4:26","type":""}],"src":"3251:345:26"},{"body":{"nativeSrc":"3649:174:26","nodeType":"YulBlock","src":"3649:174:26","statements":[{"nativeSrc":"3659:16:26","nodeType":"YulAssignment","src":"3659:16:26","value":{"arguments":[{"name":"x","nativeSrc":"3670:1:26","nodeType":"YulIdentifier","src":"3670:1:26"},{"name":"y","nativeSrc":"3673:1:26","nodeType":"YulIdentifier","src":"3673:1:26"}],"functionName":{"name":"add","nativeSrc":"3666:3:26","nodeType":"YulIdentifier","src":"3666:3:26"},"nativeSrc":"3666:9:26","nodeType":"YulFunctionCall","src":"3666:9:26"},"variableNames":[{"name":"sum","nativeSrc":"3659:3:26","nodeType":"YulIdentifier","src":"3659:3:26"}]},{"body":{"nativeSrc":"3706:111:26","nodeType":"YulBlock","src":"3706:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3727:1:26","nodeType":"YulLiteral","src":"3727:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3734:3:26","nodeType":"YulLiteral","src":"3734:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"3739:10:26","nodeType":"YulLiteral","src":"3739:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3730:3:26","nodeType":"YulIdentifier","src":"3730:3:26"},"nativeSrc":"3730:20:26","nodeType":"YulFunctionCall","src":"3730:20:26"}],"functionName":{"name":"mstore","nativeSrc":"3720:6:26","nodeType":"YulIdentifier","src":"3720:6:26"},"nativeSrc":"3720:31:26","nodeType":"YulFunctionCall","src":"3720:31:26"},"nativeSrc":"3720:31:26","nodeType":"YulExpressionStatement","src":"3720:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3771:1:26","nodeType":"YulLiteral","src":"3771:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"3774:4:26","nodeType":"YulLiteral","src":"3774:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3764:6:26","nodeType":"YulIdentifier","src":"3764:6:26"},"nativeSrc":"3764:15:26","nodeType":"YulFunctionCall","src":"3764:15:26"},"nativeSrc":"3764:15:26","nodeType":"YulExpressionStatement","src":"3764:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3799:1:26","nodeType":"YulLiteral","src":"3799:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3802:4:26","nodeType":"YulLiteral","src":"3802:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3792:6:26","nodeType":"YulIdentifier","src":"3792:6:26"},"nativeSrc":"3792:15:26","nodeType":"YulFunctionCall","src":"3792:15:26"},"nativeSrc":"3792:15:26","nodeType":"YulExpressionStatement","src":"3792:15:26"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3690:1:26","nodeType":"YulIdentifier","src":"3690:1:26"},{"name":"sum","nativeSrc":"3693:3:26","nodeType":"YulIdentifier","src":"3693:3:26"}],"functionName":{"name":"gt","nativeSrc":"3687:2:26","nodeType":"YulIdentifier","src":"3687:2:26"},"nativeSrc":"3687:10:26","nodeType":"YulFunctionCall","src":"3687:10:26"},"nativeSrc":"3684:133:26","nodeType":"YulIf","src":"3684:133:26"}]},"name":"checked_add_t_uint256","nativeSrc":"3601:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3632:1:26","nodeType":"YulTypedName","src":"3632:1:26","type":""},{"name":"y","nativeSrc":"3635:1:26","nodeType":"YulTypedName","src":"3635:1:26","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3641:3:26","nodeType":"YulTypedName","src":"3641:3:26","type":""}],"src":"3601:222:26"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101e8578063a9059cbb146101f0578063dd62ed3e14610203578063f2fde38b1461023c57600080fd5b806370a082311461019c578063715018a6146101c55780638da5cb5b146101cd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806340c10f191461017457806342966c681461018957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761024f565b6040516101049190610795565b60405180910390f35b61012061011b3660046107ff565b6102e1565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610829565b6102fb565b600554600160a01b900460ff1660405160ff9091168152602001610104565b6101876101823660046107ff565b61031f565b005b610187610197366004610866565b610335565b6101346101aa36600461087f565b6001600160a01b031660009081526020819052604090205490565b61018761034a565b6005546040516001600160a01b039091168152602001610104565b6100f761035e565b6101206101fe3660046107ff565b61036d565b6101346102113660046108a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018761024a36600461087f565b61037b565b60606003805461025e906108d4565b80601f016020809104026020016040519081016040528092919081815260200182805461028a906108d4565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b6000336102ef8185856103bb565b60019150505b92915050565b6000336103098582856103cd565b61031485858561044c565b506001949350505050565b6103276104ab565b61033182826104d8565b5050565b61033d6104ab565b610347338261050e565b50565b6103526104ab565b61035c6000610544565b565b60606004805461025e906108d4565b6000336102ef81858561044c565b6103836104ab565b6001600160a01b0381166103b257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61034781610544565b6103c88383836001610596565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610446578181101561043757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a9565b61044684848484036000610596565b50505050565b6001600160a01b03831661047657604051634b637e8f60e11b8152600060048201526024016103a9565b6001600160a01b0382166104a05760405163ec442f0560e01b8152600060048201526024016103a9565b6103c883838361066b565b6005546001600160a01b0316331461035c5760405163118cdaa760e01b81523360048201526024016103a9565b6001600160a01b0382166105025760405163ec442f0560e01b8152600060048201526024016103a9565b6103316000838361066b565b6001600160a01b03821661053857604051634b637e8f60e11b8152600060048201526024016103a9565b6103318260008361066b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105c05760405163e602df0560e01b8152600060048201526024016103a9565b6001600160a01b0383166105ea57604051634a1406b160e11b8152600060048201526024016103a9565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561044657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161065d91815260200190565b60405180910390a350505050565b6001600160a01b03831661069657806002600082825461068b919061090e565b909155506107089050565b6001600160a01b038316600090815260208190526040902054818110156106e95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661072457600280548290039055610743565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078891815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156107c357602081860181015160408684010152016107a6565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146107fa57600080fd5b919050565b6000806040838503121561081257600080fd5b61081b836107e3565b946020939093013593505050565b60008060006060848603121561083e57600080fd5b610847846107e3565b9250610855602085016107e3565b929592945050506040919091013590565b60006020828403121561087857600080fd5b5035919050565b60006020828403121561089157600080fd5b61089a826107e3565b9392505050565b600080604083850312156108b457600080fd5b6108bd836107e3565b91506108cb602084016107e3565b90509250929050565b600181811c908216806108e857607f821691505b60208210810361090857634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f557634e487b7160e01b600052601160045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x187 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH2 0x134 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0x8D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28A SWAP1 PUSH2 0x8D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EF DUP2 DUP6 DUP6 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x309 DUP6 DUP3 DUP6 PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x314 DUP6 DUP6 DUP6 PUSH2 0x44C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x327 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x331 DUP3 DUP3 PUSH2 0x4D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x33D PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x347 CALLER DUP3 PUSH2 0x50E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x352 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x35C PUSH1 0x0 PUSH2 0x544 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2EF DUP2 DUP6 DUP6 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x544 JUMP JUMPDEST PUSH2 0x3C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x596 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x446 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x446 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x596 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x3C8 DUP4 DUP4 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x331 PUSH1 0x0 DUP4 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x331 DUP3 PUSH1 0x0 DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x446 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x65D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x696 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x708 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x724 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x788 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x7A6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP4 PUSH2 0x7E3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x847 DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 POP PUSH2 0x855 PUSH1 0x20 DUP6 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89A DUP3 PUSH2 0x7E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8BD DUP4 PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CB PUSH1 0x20 DUP5 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x908 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"168:690:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:26;;1187:22;1169:41;;1157:2;1142:18;3979:186:7;1029:187:26;2830:97:7;2908:12;;2830:97;;;1367:25:26;;;1355:2;1340:18;2830:97:7;1221:177:26;4757:244:7;;;;;;:::i;:::-;;:::i;562:96:24:-;636:15;;-1:-1:-1;;;636:15:24;;;;562:96;;1954:4:26;1942:17;;;1924:36;;1912:2;1897:18;562:96:24;1782:184:26;664:95:24;;;;;;:::i;:::-;;:::i;:::-;;765:91;;;;;;:::i;:::-;;:::i;2985:116:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:7;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:5;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:5;;;2539:51:26;;2527:2;2512:18;1638:85:5;2393:203:26;1962:93:7;;;:::i;3296:178::-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:7;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:5;;;;;;:::i;:::-;;:::i;1760:89:7:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:14;4106:31:7;735:10:14;4122:7:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:14;4900:37:7;4916:4;735:10:14;4931:5:7;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:7;;4757:244;-1:-1:-1;;;;4757:244:7:o;664:95:24:-;1531:13:5;:11;:13::i;:::-;735:17:24::1;741:2;745:6;735:5;:17::i;:::-;664:95:::0;;:::o;765:91::-;1531:13:5;:11;:13::i;:::-;824:25:24::1;830:10;842:6;824:5;:25::i;:::-;765:91:::0;:::o;2293:101:5:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1962:93:7:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:14;3419:27:7;735:10:14;3436:2:7;3440:5;3419:9;:27::i;2543:215:5:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:5;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:5;;2700:1:::1;2672:31;::::0;::::1;2539:51:26::0;2512:18;;2672:31:5::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;8707:128:7:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:7;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:7;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:7;;-1:-1:-1;;;;;3471:32:26;;10668:60:7;;;3453:51:26;3520:18;;;3513:34;;;3563:18;;;3556:34;;;3426:18;;10668:60:7;3251:345:26;10613:130:7;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:7;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:7;;5525:1;5498:30;;;2539:51:26;2512:18;;5498:30:7;2393:203:26;5453:86:7;-1:-1:-1;;;;;5552:16:7;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:7;;5620:1;5591:32;;;2539:51:26;2512:18;;5591:32:7;2393:203:26;5548:86:7;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;1796:162:5:-;1710:6;;-1:-1:-1;;;;;1710:6:5;735:10:14;1855:23:5;1851:101;;1901:40;;-1:-1:-1;;;1901:40:5;;735:10:14;1901:40:5;;;2539:51:26;2512:18;;1901:40:5;2393:203:26;7439:208:7;-1:-1:-1;;;;;7509:21:7;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:7;;7582:1;7553:32;;;2539:51:26;2512:18;;7553:32:7;2393:203:26;7505:91:7;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:7;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:7;;8106:1;8079:30;;;2539:51:26;2512:18;;8079:30:7;2393:203:26;8031:89:7;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2912:187:5:-;3004:6;;;-1:-1:-1;;;;;3020:17:5;;;-1:-1:-1;;;;;;3020:17:5;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9682:432:7:-;-1:-1:-1;;;;;9794:19:7;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:7;;9865:1;9836:32;;;2539:51:26;2512:18;;9836:32:7;2393:203:26;9790:89:7;-1:-1:-1;;;;;9892:21:7;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:7;;9964:1;9936:31;;;2539:51:26;2512:18;;9936:31:7;2393:203:26;9888:90:7;-1:-1:-1;;;;;9987:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:7;10075:5;-1:-1:-1;;;;;10066:31:7;;10091:5;10066:31;;;;1367:25:26;;1355:2;1340:18;;1221:177;10066:31:7;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:7;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:7;;-1:-1:-1;6074:540:7;;-1:-1:-1;;;;;6288:15:7;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:7;;-1:-1:-1;;;;;3471:32:26;;6367:50:7;;;3453:51:26;3520:18;;;3513:34;;;3563:18;;;3556:34;;;3426:18;;6367:50:7;3251:345:26;6317:115:7;-1:-1:-1;;;;;6552:15:7;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:7;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:7;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:7;7073:4;-1:-1:-1;;;;;7064:25:7;;7083:5;7064:25;;;;1367::26;;1355:2;1340:18;;1221:177;7064:25:7;;;;;;;;5989:1107;;;:::o;14:527:26:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:26;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:26:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:26;1728:18;;;;1715:32;;1403:374::o;1971:226::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;-1:-1:-1;2144:23:26;;1971:226;-1:-1:-1;1971:226:26:o;2202:186::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;2353:29;2372:9;2353:29;:::i;:::-;2343:39;2202:186;-1:-1:-1;;;2202:186:26:o;2601:260::-;2669:6;2677;2730:2;2718:9;2709:7;2705:23;2701:32;2698:52;;;2746:1;2743;2736:12;2698:52;2769:29;2788:9;2769:29;:::i;:::-;2759:39;;2817:38;2851:2;2840:9;2836:18;2817:38;:::i;:::-;2807:48;;2601:260;;;;;:::o;2866:380::-;2945:1;2941:12;;;;2988;;;3009:61;;3063:4;3055:6;3051:17;3041:27;;3009:61;3116:2;3108:6;3105:14;3085:18;3082:38;3079:161;;3162:10;3157:3;3153:20;3150:1;3143:31;3197:4;3194:1;3187:15;3225:4;3222:1;3215:15;3079:161;;2866:380;;;:::o;3601:222::-;3666:9;;;3687:10;;;3684:133;;;3739:10;3734:3;3730:20;3727:1;3720:31;3774:4;3771:1;3764:15;3802:4;3799:1;3792:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mytoken.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Mytoken.sol\":{\"keccak256\":\"0x06562c68dbcee5ccb6a5fde3373ddce4e9a60b85d55043875d83318f7f48c78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89218c879445178a0dca191300dbba6435c2ce7abc1c6d8ab217ebaf7c39705e\",\"dweb:/ipfs/QmeYPf4NP56bmePJFpDeERdVtd7Bfhjv5CCHac8J4ZBz5e\"]}},\"version\":1}"}},"contracts/Whitelist.sol":{"Whitelist":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AddressRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"batchAddToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeFromWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b5061064e8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063c4d66de814610138578063e43252d71461014b578063f2fde38b1461015e57600080fd5b80632db6fa361461008d5780633af32abf146100a2578063715018a6146100e35780638ab1d681146100eb575b600080fd5b6100a061009b366004610584565b610171565b005b6100ce6100b03660046105fb565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a0610241565b6100a06100f93660046105fb565b610255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100da565b6100a06101463660046105fb565b6102a6565b6100a06101593660046105fb565b6103bf565b6100a061016c3660046105fb565b610413565b610179610456565b60005b8181101561023c57600160008085858581811061019b5761019b61062b565b90506020020160208101906101b091906105fb565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106101ea576101ea61062b565b90506020020160208101906101ff91906105fb565b6001600160a01b03167fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f60405160405180910390a260010161017c565b505050565b610249610456565b61025360006104b1565b565b61025d610456565b6001600160a01b038116600081815260208190526040808220805460ff19169055517f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb9190a250565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102ec5750825b905060008267ffffffffffffffff1660011480156103095750303b155b905081158015610317575080155b156103355760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561035f57845460ff60401b1916600160401b1785555b61036833610522565b61037186610413565b83156103b757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6103c7610456565b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f9190a250565b61041b610456565b6001600160a01b03811661044a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610453816104b1565b50565b336104887f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102535760405163118cdaa760e01b8152336004820152602401610441565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61052a610533565b6104538161057c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661025357604051631afcd79f60e31b815260040160405180910390fd5b61041b610533565b6000806020838503121561059757600080fd5b823567ffffffffffffffff8111156105ae57600080fd5b8301601f810185136105bf57600080fd5b803567ffffffffffffffff8111156105d657600080fd5b8560208260051b84010111156105eb57600080fd5b6020919091019590945092505050565b60006020828403121561060d57600080fd5b81356001600160a01b038116811461062457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DB6FA36 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x241 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x17C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x249 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x253 PUSH1 0x0 PUSH2 0x4B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x25D PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x24A12366C02E13FE4A9E03D86A8952E85BB74A456C16E4A18B6D8295700B74BB SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x309 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x35F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x368 CALLER PUSH2 0x522 JUMP JUMPDEST PUSH2 0x371 DUP7 PUSH2 0x413 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3B7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x41B PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x4B1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x488 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x441 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x533 JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x57C JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41B PUSH2 0x533 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"425:1655:25:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_54":{"entryPoint":1314,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":1404,"id":81,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":1331,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":1110,"id":122,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_1570":{"entryPoint":null,"id":1570,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_193":{"entryPoint":1201,"id":193,"parameterSlots":1,"returnSlots":0},"@addToWhitelist_8714":{"entryPoint":959,"id":8714,"parameterSlots":1,"returnSlots":0},"@batchAddToWhitelist_8751":{"entryPoint":369,"id":8751,"parameterSlots":2,"returnSlots":0},"@initialize_8695":{"entryPoint":678,"id":8695,"parameterSlots":1,"returnSlots":0},"@isWhitelisted_8783":{"entryPoint":null,"id":8783,"parameterSlots":1,"returnSlots":1},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@removeFromWhitelist_8770":{"entryPoint":597,"id":8770,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":577,"id":136,"parameterSlots":0,"returnSlots":0},"@transferOwnership_164":{"entryPoint":1043,"id":164,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":1412,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":1579,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1663:26","nodeType":"YulBlock","src":"0:1663:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"119:505:26","nodeType":"YulBlock","src":"119:505:26","statements":[{"body":{"nativeSrc":"165:16:26","nodeType":"YulBlock","src":"165:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:26","nodeType":"YulLiteral","src":"174:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:26","nodeType":"YulLiteral","src":"177:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:26","nodeType":"YulIdentifier","src":"167:6:26"},"nativeSrc":"167:12:26","nodeType":"YulFunctionCall","src":"167:12:26"},"nativeSrc":"167:12:26","nodeType":"YulExpressionStatement","src":"167:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"140:7:26","nodeType":"YulIdentifier","src":"140:7:26"},{"name":"headStart","nativeSrc":"149:9:26","nodeType":"YulIdentifier","src":"149:9:26"}],"functionName":{"name":"sub","nativeSrc":"136:3:26","nodeType":"YulIdentifier","src":"136:3:26"},"nativeSrc":"136:23:26","nodeType":"YulFunctionCall","src":"136:23:26"},{"kind":"number","nativeSrc":"161:2:26","nodeType":"YulLiteral","src":"161:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"132:3:26","nodeType":"YulIdentifier","src":"132:3:26"},"nativeSrc":"132:32:26","nodeType":"YulFunctionCall","src":"132:32:26"},"nativeSrc":"129:52:26","nodeType":"YulIf","src":"129:52:26"},{"nativeSrc":"190:37:26","nodeType":"YulVariableDeclaration","src":"190:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"217:9:26","nodeType":"YulIdentifier","src":"217:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"204:12:26","nodeType":"YulIdentifier","src":"204:12:26"},"nativeSrc":"204:23:26","nodeType":"YulFunctionCall","src":"204:23:26"},"variables":[{"name":"offset","nativeSrc":"194:6:26","nodeType":"YulTypedName","src":"194:6:26","type":""}]},{"body":{"nativeSrc":"270:16:26","nodeType":"YulBlock","src":"270:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"279:1:26","nodeType":"YulLiteral","src":"279:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"282:1:26","nodeType":"YulLiteral","src":"282:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"272:6:26","nodeType":"YulIdentifier","src":"272:6:26"},"nativeSrc":"272:12:26","nodeType":"YulFunctionCall","src":"272:12:26"},"nativeSrc":"272:12:26","nodeType":"YulExpressionStatement","src":"272:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"242:6:26","nodeType":"YulIdentifier","src":"242:6:26"},{"kind":"number","nativeSrc":"250:18:26","nodeType":"YulLiteral","src":"250:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"239:2:26","nodeType":"YulIdentifier","src":"239:2:26"},"nativeSrc":"239:30:26","nodeType":"YulFunctionCall","src":"239:30:26"},"nativeSrc":"236:50:26","nodeType":"YulIf","src":"236:50:26"},{"nativeSrc":"295:32:26","nodeType":"YulVariableDeclaration","src":"295:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"309:9:26","nodeType":"YulIdentifier","src":"309:9:26"},{"name":"offset","nativeSrc":"320:6:26","nodeType":"YulIdentifier","src":"320:6:26"}],"functionName":{"name":"add","nativeSrc":"305:3:26","nodeType":"YulIdentifier","src":"305:3:26"},"nativeSrc":"305:22:26","nodeType":"YulFunctionCall","src":"305:22:26"},"variables":[{"name":"_1","nativeSrc":"299:2:26","nodeType":"YulTypedName","src":"299:2:26","type":""}]},{"body":{"nativeSrc":"375:16:26","nodeType":"YulBlock","src":"375:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"384:1:26","nodeType":"YulLiteral","src":"384:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"387:1:26","nodeType":"YulLiteral","src":"387:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"377:6:26","nodeType":"YulIdentifier","src":"377:6:26"},"nativeSrc":"377:12:26","nodeType":"YulFunctionCall","src":"377:12:26"},"nativeSrc":"377:12:26","nodeType":"YulExpressionStatement","src":"377:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"354:2:26","nodeType":"YulIdentifier","src":"354:2:26"},{"kind":"number","nativeSrc":"358:4:26","nodeType":"YulLiteral","src":"358:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"350:3:26","nodeType":"YulIdentifier","src":"350:3:26"},"nativeSrc":"350:13:26","nodeType":"YulFunctionCall","src":"350:13:26"},{"name":"dataEnd","nativeSrc":"365:7:26","nodeType":"YulIdentifier","src":"365:7:26"}],"functionName":{"name":"slt","nativeSrc":"346:3:26","nodeType":"YulIdentifier","src":"346:3:26"},"nativeSrc":"346:27:26","nodeType":"YulFunctionCall","src":"346:27:26"}],"functionName":{"name":"iszero","nativeSrc":"339:6:26","nodeType":"YulIdentifier","src":"339:6:26"},"nativeSrc":"339:35:26","nodeType":"YulFunctionCall","src":"339:35:26"},"nativeSrc":"336:55:26","nodeType":"YulIf","src":"336:55:26"},{"nativeSrc":"400:30:26","nodeType":"YulVariableDeclaration","src":"400:30:26","value":{"arguments":[{"name":"_1","nativeSrc":"427:2:26","nodeType":"YulIdentifier","src":"427:2:26"}],"functionName":{"name":"calldataload","nativeSrc":"414:12:26","nodeType":"YulIdentifier","src":"414:12:26"},"nativeSrc":"414:16:26","nodeType":"YulFunctionCall","src":"414:16:26"},"variables":[{"name":"length","nativeSrc":"404:6:26","nodeType":"YulTypedName","src":"404:6:26","type":""}]},{"body":{"nativeSrc":"473:16:26","nodeType":"YulBlock","src":"473:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"482:1:26","nodeType":"YulLiteral","src":"482:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"485:1:26","nodeType":"YulLiteral","src":"485:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"475:6:26","nodeType":"YulIdentifier","src":"475:6:26"},"nativeSrc":"475:12:26","nodeType":"YulFunctionCall","src":"475:12:26"},"nativeSrc":"475:12:26","nodeType":"YulExpressionStatement","src":"475:12:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"445:6:26","nodeType":"YulIdentifier","src":"445:6:26"},{"kind":"number","nativeSrc":"453:18:26","nodeType":"YulLiteral","src":"453:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"442:2:26","nodeType":"YulIdentifier","src":"442:2:26"},"nativeSrc":"442:30:26","nodeType":"YulFunctionCall","src":"442:30:26"},"nativeSrc":"439:50:26","nodeType":"YulIf","src":"439:50:26"},{"body":{"nativeSrc":"547:16:26","nodeType":"YulBlock","src":"547:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"556:1:26","nodeType":"YulLiteral","src":"556:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"559:1:26","nodeType":"YulLiteral","src":"559:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"549:6:26","nodeType":"YulIdentifier","src":"549:6:26"},"nativeSrc":"549:12:26","nodeType":"YulFunctionCall","src":"549:12:26"},"nativeSrc":"549:12:26","nodeType":"YulExpressionStatement","src":"549:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"512:2:26","nodeType":"YulIdentifier","src":"512:2:26"},{"arguments":[{"kind":"number","nativeSrc":"520:1:26","nodeType":"YulLiteral","src":"520:1:26","type":"","value":"5"},{"name":"length","nativeSrc":"523:6:26","nodeType":"YulIdentifier","src":"523:6:26"}],"functionName":{"name":"shl","nativeSrc":"516:3:26","nodeType":"YulIdentifier","src":"516:3:26"},"nativeSrc":"516:14:26","nodeType":"YulFunctionCall","src":"516:14:26"}],"functionName":{"name":"add","nativeSrc":"508:3:26","nodeType":"YulIdentifier","src":"508:3:26"},"nativeSrc":"508:23:26","nodeType":"YulFunctionCall","src":"508:23:26"},{"kind":"number","nativeSrc":"533:2:26","nodeType":"YulLiteral","src":"533:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"504:3:26","nodeType":"YulIdentifier","src":"504:3:26"},"nativeSrc":"504:32:26","nodeType":"YulFunctionCall","src":"504:32:26"},{"name":"dataEnd","nativeSrc":"538:7:26","nodeType":"YulIdentifier","src":"538:7:26"}],"functionName":{"name":"gt","nativeSrc":"501:2:26","nodeType":"YulIdentifier","src":"501:2:26"},"nativeSrc":"501:45:26","nodeType":"YulFunctionCall","src":"501:45:26"},"nativeSrc":"498:65:26","nodeType":"YulIf","src":"498:65:26"},{"nativeSrc":"572:21:26","nodeType":"YulAssignment","src":"572:21:26","value":{"arguments":[{"name":"_1","nativeSrc":"586:2:26","nodeType":"YulIdentifier","src":"586:2:26"},{"kind":"number","nativeSrc":"590:2:26","nodeType":"YulLiteral","src":"590:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"582:3:26","nodeType":"YulIdentifier","src":"582:3:26"},"nativeSrc":"582:11:26","nodeType":"YulFunctionCall","src":"582:11:26"},"variableNames":[{"name":"value0","nativeSrc":"572:6:26","nodeType":"YulIdentifier","src":"572:6:26"}]},{"nativeSrc":"602:16:26","nodeType":"YulAssignment","src":"602:16:26","value":{"name":"length","nativeSrc":"612:6:26","nodeType":"YulIdentifier","src":"612:6:26"},"variableNames":[{"name":"value1","nativeSrc":"602:6:26","nodeType":"YulIdentifier","src":"602:6:26"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"14:610:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"77:9:26","nodeType":"YulTypedName","src":"77:9:26","type":""},{"name":"dataEnd","nativeSrc":"88:7:26","nodeType":"YulTypedName","src":"88:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"100:6:26","nodeType":"YulTypedName","src":"100:6:26","type":""},{"name":"value1","nativeSrc":"108:6:26","nodeType":"YulTypedName","src":"108:6:26","type":""}],"src":"14:610:26"},{"body":{"nativeSrc":"699:216:26","nodeType":"YulBlock","src":"699:216:26","statements":[{"body":{"nativeSrc":"745:16:26","nodeType":"YulBlock","src":"745:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"754:1:26","nodeType":"YulLiteral","src":"754:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"757:1:26","nodeType":"YulLiteral","src":"757:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"747:6:26","nodeType":"YulIdentifier","src":"747:6:26"},"nativeSrc":"747:12:26","nodeType":"YulFunctionCall","src":"747:12:26"},"nativeSrc":"747:12:26","nodeType":"YulExpressionStatement","src":"747:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"720:7:26","nodeType":"YulIdentifier","src":"720:7:26"},{"name":"headStart","nativeSrc":"729:9:26","nodeType":"YulIdentifier","src":"729:9:26"}],"functionName":{"name":"sub","nativeSrc":"716:3:26","nodeType":"YulIdentifier","src":"716:3:26"},"nativeSrc":"716:23:26","nodeType":"YulFunctionCall","src":"716:23:26"},{"kind":"number","nativeSrc":"741:2:26","nodeType":"YulLiteral","src":"741:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"712:3:26","nodeType":"YulIdentifier","src":"712:3:26"},"nativeSrc":"712:32:26","nodeType":"YulFunctionCall","src":"712:32:26"},"nativeSrc":"709:52:26","nodeType":"YulIf","src":"709:52:26"},{"nativeSrc":"770:36:26","nodeType":"YulVariableDeclaration","src":"770:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"796:9:26","nodeType":"YulIdentifier","src":"796:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"783:12:26","nodeType":"YulIdentifier","src":"783:12:26"},"nativeSrc":"783:23:26","nodeType":"YulFunctionCall","src":"783:23:26"},"variables":[{"name":"value","nativeSrc":"774:5:26","nodeType":"YulTypedName","src":"774:5:26","type":""}]},{"body":{"nativeSrc":"869:16:26","nodeType":"YulBlock","src":"869:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"878:1:26","nodeType":"YulLiteral","src":"878:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"881:1:26","nodeType":"YulLiteral","src":"881:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"871:6:26","nodeType":"YulIdentifier","src":"871:6:26"},"nativeSrc":"871:12:26","nodeType":"YulFunctionCall","src":"871:12:26"},"nativeSrc":"871:12:26","nodeType":"YulExpressionStatement","src":"871:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"828:5:26","nodeType":"YulIdentifier","src":"828:5:26"},{"arguments":[{"name":"value","nativeSrc":"839:5:26","nodeType":"YulIdentifier","src":"839:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"854:3:26","nodeType":"YulLiteral","src":"854:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"859:1:26","nodeType":"YulLiteral","src":"859:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"850:3:26","nodeType":"YulIdentifier","src":"850:3:26"},"nativeSrc":"850:11:26","nodeType":"YulFunctionCall","src":"850:11:26"},{"kind":"number","nativeSrc":"863:1:26","nodeType":"YulLiteral","src":"863:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"846:3:26","nodeType":"YulIdentifier","src":"846:3:26"},"nativeSrc":"846:19:26","nodeType":"YulFunctionCall","src":"846:19:26"}],"functionName":{"name":"and","nativeSrc":"835:3:26","nodeType":"YulIdentifier","src":"835:3:26"},"nativeSrc":"835:31:26","nodeType":"YulFunctionCall","src":"835:31:26"}],"functionName":{"name":"eq","nativeSrc":"825:2:26","nodeType":"YulIdentifier","src":"825:2:26"},"nativeSrc":"825:42:26","nodeType":"YulFunctionCall","src":"825:42:26"}],"functionName":{"name":"iszero","nativeSrc":"818:6:26","nodeType":"YulIdentifier","src":"818:6:26"},"nativeSrc":"818:50:26","nodeType":"YulFunctionCall","src":"818:50:26"},"nativeSrc":"815:70:26","nodeType":"YulIf","src":"815:70:26"},{"nativeSrc":"894:15:26","nodeType":"YulAssignment","src":"894:15:26","value":{"name":"value","nativeSrc":"904:5:26","nodeType":"YulIdentifier","src":"904:5:26"},"variableNames":[{"name":"value0","nativeSrc":"894:6:26","nodeType":"YulIdentifier","src":"894:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"629:286:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"665:9:26","nodeType":"YulTypedName","src":"665:9:26","type":""},{"name":"dataEnd","nativeSrc":"676:7:26","nodeType":"YulTypedName","src":"676:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"688:6:26","nodeType":"YulTypedName","src":"688:6:26","type":""}],"src":"629:286:26"},{"body":{"nativeSrc":"1015:92:26","nodeType":"YulBlock","src":"1015:92:26","statements":[{"nativeSrc":"1025:26:26","nodeType":"YulAssignment","src":"1025:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1037:9:26","nodeType":"YulIdentifier","src":"1037:9:26"},{"kind":"number","nativeSrc":"1048:2:26","nodeType":"YulLiteral","src":"1048:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1033:3:26","nodeType":"YulIdentifier","src":"1033:3:26"},"nativeSrc":"1033:18:26","nodeType":"YulFunctionCall","src":"1033:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1025:4:26","nodeType":"YulIdentifier","src":"1025:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1067:9:26","nodeType":"YulIdentifier","src":"1067:9:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1092:6:26","nodeType":"YulIdentifier","src":"1092:6:26"}],"functionName":{"name":"iszero","nativeSrc":"1085:6:26","nodeType":"YulIdentifier","src":"1085:6:26"},"nativeSrc":"1085:14:26","nodeType":"YulFunctionCall","src":"1085:14:26"}],"functionName":{"name":"iszero","nativeSrc":"1078:6:26","nodeType":"YulIdentifier","src":"1078:6:26"},"nativeSrc":"1078:22:26","nodeType":"YulFunctionCall","src":"1078:22:26"}],"functionName":{"name":"mstore","nativeSrc":"1060:6:26","nodeType":"YulIdentifier","src":"1060:6:26"},"nativeSrc":"1060:41:26","nodeType":"YulFunctionCall","src":"1060:41:26"},"nativeSrc":"1060:41:26","nodeType":"YulExpressionStatement","src":"1060:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"920:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"984:9:26","nodeType":"YulTypedName","src":"984:9:26","type":""},{"name":"value0","nativeSrc":"995:6:26","nodeType":"YulTypedName","src":"995:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1006:4:26","nodeType":"YulTypedName","src":"1006:4:26","type":""}],"src":"920:187:26"},{"body":{"nativeSrc":"1213:102:26","nodeType":"YulBlock","src":"1213:102:26","statements":[{"nativeSrc":"1223:26:26","nodeType":"YulAssignment","src":"1223:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1235:9:26","nodeType":"YulIdentifier","src":"1235:9:26"},{"kind":"number","nativeSrc":"1246:2:26","nodeType":"YulLiteral","src":"1246:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1231:3:26","nodeType":"YulIdentifier","src":"1231:3:26"},"nativeSrc":"1231:18:26","nodeType":"YulFunctionCall","src":"1231:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1223:4:26","nodeType":"YulIdentifier","src":"1223:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1265:9:26","nodeType":"YulIdentifier","src":"1265:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1280:6:26","nodeType":"YulIdentifier","src":"1280:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1296:3:26","nodeType":"YulLiteral","src":"1296:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"1301:1:26","nodeType":"YulLiteral","src":"1301:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1292:3:26","nodeType":"YulIdentifier","src":"1292:3:26"},"nativeSrc":"1292:11:26","nodeType":"YulFunctionCall","src":"1292:11:26"},{"kind":"number","nativeSrc":"1305:1:26","nodeType":"YulLiteral","src":"1305:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1288:3:26","nodeType":"YulIdentifier","src":"1288:3:26"},"nativeSrc":"1288:19:26","nodeType":"YulFunctionCall","src":"1288:19:26"}],"functionName":{"name":"and","nativeSrc":"1276:3:26","nodeType":"YulIdentifier","src":"1276:3:26"},"nativeSrc":"1276:32:26","nodeType":"YulFunctionCall","src":"1276:32:26"}],"functionName":{"name":"mstore","nativeSrc":"1258:6:26","nodeType":"YulIdentifier","src":"1258:6:26"},"nativeSrc":"1258:51:26","nodeType":"YulFunctionCall","src":"1258:51:26"},"nativeSrc":"1258:51:26","nodeType":"YulExpressionStatement","src":"1258:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1112:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1182:9:26","nodeType":"YulTypedName","src":"1182:9:26","type":""},{"name":"value0","nativeSrc":"1193:6:26","nodeType":"YulTypedName","src":"1193:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1204:4:26","nodeType":"YulTypedName","src":"1204:4:26","type":""}],"src":"1112:203:26"},{"body":{"nativeSrc":"1352:95:26","nodeType":"YulBlock","src":"1352:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1369:1:26","nodeType":"YulLiteral","src":"1369:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1376:3:26","nodeType":"YulLiteral","src":"1376:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"1381:10:26","nodeType":"YulLiteral","src":"1381:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1372:3:26","nodeType":"YulIdentifier","src":"1372:3:26"},"nativeSrc":"1372:20:26","nodeType":"YulFunctionCall","src":"1372:20:26"}],"functionName":{"name":"mstore","nativeSrc":"1362:6:26","nodeType":"YulIdentifier","src":"1362:6:26"},"nativeSrc":"1362:31:26","nodeType":"YulFunctionCall","src":"1362:31:26"},"nativeSrc":"1362:31:26","nodeType":"YulExpressionStatement","src":"1362:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1409:1:26","nodeType":"YulLiteral","src":"1409:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"1412:4:26","nodeType":"YulLiteral","src":"1412:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"1402:6:26","nodeType":"YulIdentifier","src":"1402:6:26"},"nativeSrc":"1402:15:26","nodeType":"YulFunctionCall","src":"1402:15:26"},"nativeSrc":"1402:15:26","nodeType":"YulExpressionStatement","src":"1402:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1433:1:26","nodeType":"YulLiteral","src":"1433:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1436:4:26","nodeType":"YulLiteral","src":"1436:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1426:6:26","nodeType":"YulIdentifier","src":"1426:6:26"},"nativeSrc":"1426:15:26","nodeType":"YulFunctionCall","src":"1426:15:26"},"nativeSrc":"1426:15:26","nodeType":"YulExpressionStatement","src":"1426:15:26"}]},"name":"panic_error_0x32","nativeSrc":"1320:127:26","nodeType":"YulFunctionDefinition","src":"1320:127:26"},{"body":{"nativeSrc":"1560:101:26","nodeType":"YulBlock","src":"1560:101:26","statements":[{"nativeSrc":"1570:26:26","nodeType":"YulAssignment","src":"1570:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1582:9:26","nodeType":"YulIdentifier","src":"1582:9:26"},{"kind":"number","nativeSrc":"1593:2:26","nodeType":"YulLiteral","src":"1593:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1578:3:26","nodeType":"YulIdentifier","src":"1578:3:26"},"nativeSrc":"1578:18:26","nodeType":"YulFunctionCall","src":"1578:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1570:4:26","nodeType":"YulIdentifier","src":"1570:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1612:9:26","nodeType":"YulIdentifier","src":"1612:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1627:6:26","nodeType":"YulIdentifier","src":"1627:6:26"},{"kind":"number","nativeSrc":"1635:18:26","nodeType":"YulLiteral","src":"1635:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1623:3:26","nodeType":"YulIdentifier","src":"1623:3:26"},"nativeSrc":"1623:31:26","nodeType":"YulFunctionCall","src":"1623:31:26"}],"functionName":{"name":"mstore","nativeSrc":"1605:6:26","nodeType":"YulIdentifier","src":"1605:6:26"},"nativeSrc":"1605:50:26","nodeType":"YulFunctionCall","src":"1605:50:26"},"nativeSrc":"1605:50:26","nodeType":"YulExpressionStatement","src":"1605:50:26"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"1452:209:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1529:9:26","nodeType":"YulTypedName","src":"1529:9:26","type":""},{"name":"value0","nativeSrc":"1540:6:26","nodeType":"YulTypedName","src":"1540:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1551:4:26","nodeType":"YulTypedName","src":"1551:4:26","type":""}],"src":"1452:209:26"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063c4d66de814610138578063e43252d71461014b578063f2fde38b1461015e57600080fd5b80632db6fa361461008d5780633af32abf146100a2578063715018a6146100e35780638ab1d681146100eb575b600080fd5b6100a061009b366004610584565b610171565b005b6100ce6100b03660046105fb565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a0610241565b6100a06100f93660046105fb565b610255565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100da565b6100a06101463660046105fb565b6102a6565b6100a06101593660046105fb565b6103bf565b6100a061016c3660046105fb565b610413565b610179610456565b60005b8181101561023c57600160008085858581811061019b5761019b61062b565b90506020020160208101906101b091906105fb565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106101ea576101ea61062b565b90506020020160208101906101ff91906105fb565b6001600160a01b03167fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f60405160405180910390a260010161017c565b505050565b610249610456565b61025360006104b1565b565b61025d610456565b6001600160a01b038116600081815260208190526040808220805460ff19169055517f24a12366c02e13fe4a9e03d86a8952e85bb74a456c16e4a18b6d8295700b74bb9190a250565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102ec5750825b905060008267ffffffffffffffff1660011480156103095750303b155b905081158015610317575080155b156103355760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561035f57845460ff60401b1916600160401b1785555b61036833610522565b61037186610413565b83156103b757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6103c7610456565b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517fa226db3f664042183ee0281230bba26cbf7b5057e50aee7f25a175ff45ce4d7f9190a250565b61041b610456565b6001600160a01b03811661044a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610453816104b1565b50565b336104887f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102535760405163118cdaa760e01b8152336004820152602401610441565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61052a610533565b6104538161057c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661025357604051631afcd79f60e31b815260040160405180910390fd5b61041b610533565b6000806020838503121561059757600080fd5b823567ffffffffffffffff8111156105ae57600080fd5b8301601f810185136105bf57600080fd5b803567ffffffffffffffff8111156105d657600080fd5b8560208260051b84010111156105eb57600080fd5b6020919091019590945092505050565b60006020828403121561060d57600080fd5b81356001600160a01b038116811461062457600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300081c000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DB6FA36 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x241 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x17C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x249 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x253 PUSH1 0x0 PUSH2 0x4B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x25D PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x24A12366C02E13FE4A9E03D86A8952E85BB74A456C16E4A18B6D8295700B74BB SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x309 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x35F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x368 CALLER PUSH2 0x522 JUMP JUMPDEST PUSH2 0x371 DUP7 PUSH2 0x413 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3B7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xA226DB3F664042183EE0281230BBA26CBF7B5057E50AEE7F25A175FF45CE4D7F SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x41B PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x4B1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x488 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x441 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x533 JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x57C JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41B PUSH2 0x533 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ","sourceMap":"425:1655:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1290:240;;;;;;:::i;:::-;;:::i;:::-;;1964:114;;;;;;:::i;:::-;-1:-1:-1;;;;;2050:21:25;2027:4;2050:21;;;;;;;;;;;;;;1964:114;;;;1085:14:26;;1078:22;1060:41;;1048:2;1033:18;1964:114:25;;;;;;;;3155:101:0;;;:::i;1648:149:25:-;;;;;;:::i;:::-;;:::i;2441:144:0:-;1313:22;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:0;;;1258:51:26;;1246:2;1231:18;2441:144:0;1112:203:26;768:134:25;;;;;;:::i;:::-;;:::i;1012:141::-;;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;:::i;:::-;;:::i;1290:240:25:-;2334:13:0;:11;:13::i;:::-;1382:9:25::1;1377:147;1397:19:::0;;::::1;1377:147;;;1465:4;1437:12;:25:::0;1450:8:::1;;1459:1;1450:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1437:25:25::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1437:25:25;:32;;-1:-1:-1;;1437:32:25::1;::::0;::::1;;::::0;;;::::1;::::0;;1501:8;;1510:1;1501:11;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1488:25:25::1;;;;;;;;;;;1418:3;;1377:147;;;;1290:240:::0;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1648:149:25:-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1723:21:25;::::1;1747:5;1723:21:::0;;;::::1;::::0;;;;;;;:29;;-1:-1:-1;;1723:29:25::1;::::0;;1767:23;::::1;::::0;1747:5;1767:23:::1;1648:149:::0;:::o;768:134::-;3147:66:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;834:26:25::1;849:10;834:14;:26::i;:::-;870:25;888:6;870:17;:25::i;:::-;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;1605:50:26;;5140:14:1;;1593:2:26;1578:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;768:134:25;:::o;1012:141::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1082:21:25;::::1;:12;:21:::0;;;::::1;::::0;;;;;;;:28;;-1:-1:-1;;1082:28:25::1;1106:4;1082:28;::::0;;1125:21;::::1;::::0;1082:12;1125:21:::1;1012:141:::0;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;1258:51:26::0;1231:18;;3534:31:0::1;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2658:162::-;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;1258:51:26;1231:18;;2763:40:0;1112:203:26;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1847:127::-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;7082:141:1:-:0;3147:66;8558:40;-1:-1:-1;;;8558:40:1;;;;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;1980:235:0;6929:20:1;:18;:20::i;14:610:26:-;100:6;108;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;217:9;204:23;250:18;242:6;239:30;236:50;;;282:1;279;272:12;236:50;305:22;;358:4;350:13;;346:27;-1:-1:-1;336:55:26;;387:1;384;377:12;336:55;427:2;414:16;453:18;445:6;442:30;439:50;;;485:1;482;475:12;439:50;538:7;533:2;523:6;520:1;516:14;512:2;508:23;504:32;501:45;498:65;;;559:1;556;549:12;498:65;590:2;582:11;;;;;612:6;;-1:-1:-1;14:610:26;-1:-1:-1;;;14:610:26:o;629:286::-;688:6;741:2;729:9;720:7;716:23;712:32;709:52;;;757:1;754;747:12;709:52;783:23;;-1:-1:-1;;;;;835:31:26;;825:42;;815:70;;881:1;878;871:12;815:70;904:5;629:286;-1:-1:-1;;;629:286:26:o;1320:127::-;1381:10;1376:3;1372:20;1369:1;1362:31;1412:4;1409:1;1402:15;1436:4;1433:1;1426:15"},"methodIdentifiers":{"addToWhitelist(address)":"e43252d7","batchAddToWhitelist(address[])":"2db6fa36","initialize(address)":"c4d66de8","isWhitelisted(address)":"3af32abf","owner()":"8da5cb5b","removeFromWhitelist(address)":"8ab1d681","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"batchAddToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addToWhitelist(address)\":{\"params\":{\"account\":\"The address to add\"}},\"batchAddToWhitelist(address[])\":{\"params\":{\"accounts\":\"The array of addresses to add\"}},\"initialize(address)\":{\"params\":{\"owner_\":\"The address of the owner\"}},\"isWhitelisted(address)\":{\"params\":{\"account\":\"The address to check\"},\"returns\":{\"_0\":\"True if whitelisted, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromWhitelist(address)\":{\"params\":{\"account\":\"The address to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Whitelist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToWhitelist(address)\":{\"notice\":\"Add an address to the whitelist\"},\"batchAddToWhitelist(address[])\":{\"notice\":\"Batch add multiple addresses to the whitelist\"},\"initialize(address)\":{\"notice\":\"Initializes the contract setting the initial owner\"},\"isWhitelisted(address)\":{\"notice\":\"Check if an address is whitelisted\"},\"removeFromWhitelist(address)\":{\"notice\":\"Remove an address from the whitelist\"}},\"notice\":\"Manages a list of approved addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0x7b6b701e924ac47a7627e210b4058839c63ef21f2a7a798ca76d0f5092e720e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8632e8cd782750d9090790d106da9f2114d6bbee48adef60399256383b489956\",\"dweb:/ipfs/QmXFgD7c7HPRmy1HqwXhxJZxoqtoyeUP9Z19W46xpee3E5\"]}},\"version\":1}"}}}}}